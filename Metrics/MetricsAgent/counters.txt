3
The System performance object consists of counters that apply to more than one instance of a component processors on the computer.
5
The Memory performance object  consists of counters that describe the behavior of physical and virtual memory on the computer.  Physical memory is the amount of random access memory on the computer.  Virtual memory consists of the space in physical memory and on disk.  Many of the memory counters monitor paging, which is the movement of pages of code and data between disk and physical memory.  Excessive paging, a symptom of a memory shortage, can cause delays which interfere with all system processes.
7
% Processor Time is the percentage of elapsed time that the processor spends to execute a non-Idle thread. It is calculated by measuring the percentage of time that the processor spends executing the idle thread and then subtracting that value from 100%. (Each processor has an idle thread that consumes cycles when no other threads are ready to run). This counter is the primary indicator of processor activity, and displays the average percentage of busy time observed during the sample interval. It should be noted that the accounting calculation of whether the processor is idle is performed at an internal sampling interval of the system clock (10ms). On todays fast processors, % Processor Time can therefore underestimate the processor utilization as the processor may be spending a lot of time servicing threads between the system clock sampling interval. Workload based timer applications are one example  of applications  which are more likely to be measured inaccurately as timers are signaled just after the sample is taken.
9
% Total DPC Time is the average percentage of time that all processors spend receiving and servicing deferred procedure calls (DPCs).  (DPCs are interrupts that run at a lower priority than the standard interrupts). It is the sum of Processor: % DPC Time for all processors on the computer, divided by the number of processors.  System: % Total DPC Time is a component of System: % Total Privileged Time because DPCs are executed in privileged mode.  DPCs are counted separately and are not a component of the interrupt count.  This counter displays the average busy time as a percentage of the sample time.
11
File Read Operations/sec is the combined rate of file system read requests to all devices on the computer, including requests to read from the file system cache.  It is measured in numbers of reads.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
13
File Write Operations/sec is the combined rate of the file system write requests to all devices on the computer, including requests to write to data in the file system cache.  It is measured in numbers of writes. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
15
File Control Operations/sec is the combined rate of file system operations that are neither reads nor writes, such as file system control requests and requests for information about device characteristics or status.  This is the inverse of System: File Data Operations/sec and is measured in number of operations perf second.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
17
File Read Bytes/sec is the overall rate at which bytes are read to satisfy  file system read requests to all devices on the computer, including reads from the file system cache.  It is measured in number of bytes per second.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
19
File Write Bytes/sec is the overall rate at which bytes are written to satisfy file system write requests to all devices on the computer, including writes to the file system cache.  It is measured in number of bytes per second.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
21
File Control Bytes/sec is the overall rate at which bytes are transferred for all file system operations that are neither reads nor writes, including file system control requests and requests for information about device characteristics or status.  It is measured in numbers of bytes.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
23
% Total Interrupt Time is the average percentage of time that all processors spend receiving and servicing hardware interrupts during sample intervals, where the value is an indirect indicator of the activity of devices that generate interrupts. It is the sum of Processor: % Interrupt Time for of all processors on the computer, divided by the number of processors.  DPCs are counted separately and are not a component of the interrupt count.  This value is an indirect indicator of the activity of devices that generate interrupts, such as the system timer, the mouse, disk drivers, data communication lines, network interface cards and other peripheral devices.
25
Available Bytes is the amount of physical memory, in bytes, immediately available for allocation to a process or for system use. It is equal to the sum of memory assigned to the standby (cached), free and zero page lists.
27
Committed Bytes is the amount of committed virtual memory, in bytes. Committed memory is the physical memory which has space reserved on the disk paging file(s). There can be one or more paging files on each physical drive. This counter displays the last observed value only; it is not an average.
29
Page Faults/sec is the average number of pages faulted per second. It is measured in number of pages faulted per second because only one page is faulted in each fault operation, hence this is also equal to the number of page fault operations. This counter includes both hard faults (those that require disk access) and soft faults (where the faulted page is found elsewhere in physical memory.) Most processors can handle large numbers of soft faults without significant consequence. However, hard faults, which require disk access, can cause significant delays.
31
Commit Limit is the amount of virtual memory that can be committed without having to extend the paging file(s).  It is measured in bytes. Committed memory is the physical memory which has space reserved on the disk paging files. There can be one paging file on each logical drive). If the paging file(s) are be expanded, this limit increases accordingly.  This counter displays the last observed value only; it is not an average.
33
Write Copies/sec is the rate at which page faults are caused by attempts to write that have been satisfied by coping of the page from elsewhere in physical memory. This is an economical way of sharing data since pages are only copied when they are written to; otherwise, the page is shared. This counter shows the number of copies, without regard for the number of pages copied in each operation.
35
Transition Faults/sec is the rate at which page faults are resolved by recovering pages that were being used by another process sharing the page, or were on the modified page list or the standby list, or were being written to disk at the time of the page fault. The pages were recovered without additional disk activity. Transition faults are counted in numbers of faults; because only one page is faulted in each operation, it is also equal to the number of pages faulted.
37
Cache Faults/sec is the rate at which faults occur when a page sought in the file system cache is not found and must be retrieved from elsewhere in memory (a soft fault) or from disk (a hard fault). The file system cache is an area of physical memory that stores recently used pages of data for applications. Cache activity is a reliable indicator of most application I/O operations. This counter shows the number of faults, without regard for the number of pages faulted in each operation.
39
Demand Zero Faults/sec is the rate at which a zeroed page is required to satisfy the fault.  Zeroed pages, pages emptied of previously stored data and filled with zeros, are a security feature of Windows that prevent processes from seeing data stored by earlier processes that used the memory space. Windows maintains a list of zeroed pages to accelerate this process. This counter shows the number of faults, without regard to the number of pages retrieved to satisfy the fault. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
41
Pages/sec is the rate at which pages are read from or written to disk to resolve hard page faults. This counter is a primary indicator of the kinds of faults that cause system-wide delays.  It is the sum of Memory\\Pages Input/sec and Memory\\Pages Output/sec.  It is counted in numbers of pages, so it can be compared to other counts of pages, such as Memory\\Page Faults/sec, without conversion. It includes pages retrieved to satisfy faults in the file system cache (usually requested by applications) non-cached mapped memory files.
43
Page Reads/sec is the rate at which the disk was read to resolve hard page faults. It shows the number of reads operations, without regard to the number of pages retrieved in each operation. Hard page faults occur when a process references a page in virtual memory that is not in working set or elsewhere in physical memory, and must be retrieved from disk. This counter is a primary indicator of the kinds of faults that cause system-wide delays. It includes read operations to satisfy faults in the file system cache (usually requested by applications) and in non-cached mapped memory files. Compare the value of Memory\\Pages Reads/sec to the value of Memory\\Pages Input/sec to determine the average number of pages read during each operation.
45
Processor Queue Length is the number of threads in the processor queue.  Unlike the disk counters, this counter counters, this counter shows ready threads only, not threads that are running.  There is a single queue for processor time even on computers with multiple processors. Therefore, if a computer has multiple processors, you need to divide this value by the number of processors servicing the workload. A sustained processor queue of less than 10 threads per processor is normally acceptable, dependent of the workload.
47
Thread State is the current state of the thread.  It is 0 for Initialized, 1 for Ready, 2 for Running, 3 for Standby, 4 for Terminated, 5 for Wait, 6 for Transition, 7 for Unknown.  A Running thread is using a processor; a Standby thread is about to use one.  A Ready thread wants to use a processor, but is waiting for a processor because none are free.  A thread in Transition is waiting for a resource in order to execute, such as waiting for its execution stack to be paged in from disk.  A Waiting thread has no use for the processor because it is waiting for a peripheral operation to complete or a resource to become free.
49
Pages Output/sec is the rate at which pages are written to disk to free up space in physical memory. Pages are written back to disk only if they are changed in physical memory, so they are likely to hold data, not code. A high rate of pages output might indicate a memory shortage. Windows writes more pages back to disk to free up space when physical memory is in short supply.  This counter shows the number of pages, and can be compared to other counts of pages, without conversion.
51
Page Writes/sec is the rate at which pages are written to disk to free up space in physical memory. Pages are written to disk only if they are changed while in physical memory, so they are likely to hold data, not code.  This counter shows write operations, without regard to the number of pages written in each operation.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
53
The Browser performance object consists of counters that measure the rates of announcements, enumerations, and other Browser transmissions.
55
Announcements Server/sec is the rate at which the servers in this domain have announced themselves to this server.
57
Pool Paged Bytes is the size, in bytes, of the paged pool, an area of the system virtual memory that is used for objects that can be written to disk when they are not being used.  Memory\\Pool Paged Bytes is calculated differently than Process\\Pool Paged Bytes, so it might not equal Process(_Total)\\Pool Paged Bytes. This counter displays the last observed value only; it is not an average.
59
Pool Nonpaged Bytes is the size, in bytes, of the nonpaged pool, an area of the system virtual memory that is used for objects that cannot be written to disk, but must remain in physical memory as long as they are allocated.  Memory\\Pool Nonpaged Bytes is calculated differently than Process\\Pool Nonpaged Bytes, so it might not equal Process(_Total)\\Pool Nonpaged Bytes.  This counter displays the last observed value only; it is not an average.
61
Pool Paged Allocs is the number of calls to allocate space in the paged pool. The paged pool is an area of the system virtual memory that is used for objects that can be written to disk when they are not being used. It is measured in numbers of calls to allocate space, regardless of the amount of space allocated in each call.  This counter displays the last observed value only; it is not an average.
63
Pool Paged Resident Bytes is the size, in bytes, of the portion of the paged pool that is currently resident and active in physical memory. The paged pool is an area of the system virtual memory that is used for objects that can be written to disk when they are not being used. This counter displays the last observed value only; it is not an average.
65
Pool Nonpaged Allocs is the number of calls to allocate space in the nonpaged pool. The nonpaged pool is an area of system memory area for objects that cannot be written to disk, and must remain in physical memory as long as they are allocated.  It is measured in numbers of calls to allocate space, regardless of the amount of space allocated in each call.  This counter displays the last observed value only; it is not an average.
67
Bytes Total/sec is the total rate of bytes sent to or received from the network by the protocol, but only for the frames (packets) which carry data. This is the sum of Frame Bytes/sec and Datagram Bytes/sec.
69
System Code Total Bytes is the size, in bytes, of the pageable operating system code currently mapped into the system virtual address space. This value is calculated by summing the bytes in Ntoskrnl.exe, Hal.dll, the boot drivers, and file systems loaded by Ntldr/osloader.  This counter does not include code that must remain in physical memory and cannot be written to disk. This counter displays the last observed value only; it is not an average.
71
System Code Resident Bytes is the size, in bytes, of the pageable operating system code that is currently resident and active in physical memory. This value is a component of Memory\\System Code Total Bytes. Memory\\System Code Resident Bytes (and Memory\\System Code Total Bytes) does not include code that must remain in physical memory and cannot be written to disk. This counter displays the last observed value only; it is not an average.
73
System Driver Total Bytes is the size, in bytes, of the pageable virtual memory currently being used by device drivers. Pageable memory can be written to disk when it is not being used. It includes both physical memory (Memory\\System Driver Resident Bytes) and code and data paged to disk. It is a component of Memory\\System Code Total Bytes. This counter displays the last observed value only; it is not an average.
75
System Driver Resident Bytes is the size, in bytes, of the pageable physical memory being used by device drivers. It is the working set (physical memory area) of the drivers. This value is a component of Memory\\System Driver Total Bytes, which also includes driver memory that has been written to disk. Neither Memory\\System Driver Resident Bytes nor Memory\\System Driver Total Bytes includes memory that cannot be written to disk.
77
System Cache Resident Bytes is the size, in bytes, of the portion of the system file cache which is currently resident and active in physical memory. The System Cache Resident Bytes and Memory\\Cache Bytes counters are equivalent.  This counter displays the last observed value only; it is not an average.
79
Announcements Domain/sec is the rate at which a domain has announced itself to the network.
81
Election Packets/sec is the rate at which browser election packets have been received by this workstation.
83
Mailslot Writes/sec is the rate at which mailslot messages have been successfully received.
85
Server List Requests/sec is the rate at which requests to retrieve a list of browser servers have been processed by this workstation.
87
The Cache performance object  consists of counters that monitor the file system cache, an area of physical memory that stores recently used data as long as possible to permit access to the data without having to read from the disk.  Because applications typically use the cache, the cache is monitored as an indicator of application I/O operations.  When memory is plentiful, the cache can grow, but when memory is scarce, the cache can become too small to be effective.
89
Data Maps/sec is the frequency that a file system such as NTFS, maps a page of a file into the file system cache to read the page.
91
Sync Data Maps/sec counts the frequency that a file system, such as NTFS, maps a page of a file into the file system cache to read the page, and wishes to wait for the page to be retrieved if it is not in main memory.
93
Async Data Maps/sec is the frequency that an application using a file system, such as NTFS, to map a page of a file into the file system cache to read the page, and does not wait for the page to be retrieved if it is not in main memory.
95
Data Map Hits is the percentage of data maps in the file system cache that could be resolved without having to retrieve a page from the disk, because the page was already in physical memory.
97
Data Map Pins/sec is the frequency of data maps in the file system cache that resulted in pinning a page in main memory, an action usually preparatory to writing to the file on disk.   While pinned, a page's physical address in main memory and virtual address in the file system cache will not be altered.
99
Pin Reads/sec is the frequency of reading data into the file system cache preparatory to writing the data back to disk.  Pages read in this fashion are pinned in memory at the completion of the read.  While pinned, a page's physical address in the file system cache will not be altered.
101
Sync Pin Reads/sec is the frequency of reading data into the file system cache preparatory to writing the data back to disk.  Pages read in this fashion are pinned in memory at the completion of the read.  The file system will not regain control until the page is pinned in the file system cache, in particular if the disk must be accessed to retrieve the page.  While pinned, a page's physical address in the file system cache will not be altered.
103
Async Pin Reads/sec is the frequency of reading data into the file system cache preparatory to writing the data back to disk.  Pages read in this fashion are pinned in memory at the completion of the read.  The file system will regain control immediately even if the disk must be accessed to retrieve the page.  While pinned, a page's physical address will not be altered.
105
Pin Read Hits is the percentage of pin read requests that hit the file system cache, i.e., did not require a disk read in order to provide access to the page in the file system cache.  While pinned, a page's physical address in the file system cache will not be altered.  The LAN Redirector uses this method for retrieving data from the cache, as does the LAN Server for small transfers.  This is usually the method used by the disk file systems as well.
107
Copy Reads/sec is the frequency of reads from pages of the file system cache that involve a memory copy of the data from the cache to the application's buffer.  The LAN Redirector uses this method for retrieving information from the file system cache, as does the LAN Server for small transfers.  This is a method used by the disk file systems as well.
109
Sync Copy Reads/sec is the frequency of reads from pages of the file system cache that involve a memory copy of the data from the cache to the application's buffer.  The file system will not regain control until the copy operation is complete, even if the disk must be accessed to retrieve the page.
111
Async Copy Reads/sec is the frequency of reads from pages of the file system cache that involve a memory copy of the data from the cache to the application's buffer.  The application will regain control immediately even if the disk must be accessed to retrieve the page.
113
Copy Read Hits is the percentage of cache copy read requests that hit the cache, that is, they did not require a disk read in order to provide access to the page in the cache.  A copy read is a file read operation that is satisfied by a memory copy from a page in the cache to the application's buffer.  The LAN Redirector uses this method for retrieving information from the cache, as does the LAN Server for small transfers.  This is a method used by the disk file systems as well.
115
MDL Reads/sec is the frequency of reads from the file system cache that use a Memory Descriptor List (MDL) to access the data.  The MDL contains the physical address of each page involved in the transfer, and thus can employ a hardware Direct Memory Access (DMA) device to effect the copy.  The LAN Server uses this method for large transfers out of the server.
117
Sync MDL Reads/sec is the frequency of reads from the file system cache that use a Memory Descriptor List (MDL) to access the pages.  The MDL contains the physical address of each page in the transfer, thus permitting Direct Memory Access (DMA) of the pages.  If the accessed page(s) are not in main memory, the caller will wait for the pages to fault in from the disk.
119
Async MDL Reads/sec is the frequency of reads from the file system cache that use a Memory Descriptor List (MDL) to access the pages.  The MDL contains the physical address of each page in the transfer, thus permitting Direct Memory Access (DMA) of the pages.  If the accessed page(s) are not in main memory, the calling application program will not wait for the pages to fault in from disk.
121
MDL Read Hits is the percentage of Memory Descriptor List (MDL) Read requests to the file system cache that hit the cache, i.e., did not require disk accesses in order to provide memory access to the page(s) in the cache.
123
Read Aheads/sec is the frequency of reads from the file system cache in which the Cache detects sequential access to a file.  The read aheads permit the data to be transferred in larger blocks than those being requested by the application, reducing the overhead per access.
125
Fast Reads/sec is the frequency of reads from the file system cache that bypass the installed file system and retrieve the data directly from the cache.  Normally, file I/O requests invoke the appropriate file system to retrieve data from a file, but this path permits direct retrieval of data from the cache without file system involvement if the data is in the cache.  Even if the data is not in the cache, one invocation of the file system is avoided.
127
Sync Fast Reads/sec is the frequency of reads from the file system cache that bypass the installed file system and retrieve the data directly from the cache.  Normally, file I/O requests invoke the appropriate file system to retrieve data from a file, but this path permits direct retrieval of data from the cache without file system involvement if the data is in the cache.  Even if the data is not in the cache, one invocation of the file system is avoided.  If the data is not in the cache, the request (application program call) will wait until the data has been retrieved from disk.
129
Async Fast Reads/sec is the frequency of reads from the file system cache that bypass the installed file system and retrieve the data directly from the cache.  Normally, file I/O requests will invoke the appropriate file system to retrieve data from a file, but this path permits data to be retrieved from the cache directly (without file system involvement) if the data is in the cache.  Even if the data is not in the cache, one invocation of the file system is avoided.  If the data is not in the cache, the request (application program call) will not wait until the data has been retrieved from disk, but will get control immediately.
131
Fast Read Resource Misses/sec is the frequency of cache misses necessitated by the lack of available resources to satisfy the request.
133
Fast Read Not Possibles/sec is the frequency of attempts by an Application Program Interface (API) function call to bypass the file system to get to data in the file system cache that could not be honored without invoking the file system.
135
Lazy Write Flushes/sec is the rate at which the Lazy Writer thread has written to disk.  Lazy Writing is the process of updating the disk after the page has been changed in memory, so that the application that changed the file does not have to wait for the disk write to be complete before proceeding.  More than one page can be transferred by each write operation.
137
Lazy Write Pages/sec is the rate at which the Lazy Writer thread has written to disk.  Lazy Writing is the process of updating the disk after the page has been changed in memory, so that the application that changed the file does not have to wait for the disk write to be complete before proceeding.  More than one page can be transferred on a single disk write operation.
139
Data Flushes/sec is the rate at which the file system cache has flushed its contents to disk as the result of a request to flush or to satisfy a write-through file write request.  More than one page can be transferred on each flush operation.
141
Data Flush Pages/sec is the number of pages the file system cache has flushed to disk as a result of a request to flush or to satisfy a write-through file write request.  More than one page can be transferred on each flush operation.
143
% User Time is the percentage of elapsed time the processor spends in the user mode. User mode is a restricted processing mode designed for applications, environment subsystems, and integral subsystems.  The alternative, privileged mode, is designed for operating system components and allows direct access to hardware and all memory.  The operating system switches application threads to privileged mode to access operating system services. This counter displays the average busy time as a percentage of the sample time.
145
% Privileged Time is the percentage of elapsed time that the process threads spent executing code in privileged mode.  When a Windows system service in called, the service will often run in privileged mode to gain access to system-private data. Such data is protected from access by threads executing in user mode. Calls to the system can be explicit or implicit, such as page faults or interrupts. Unlike some early operating systems, Windows uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes. Some work done by Windows on behalf of the application might appear in other subsystem processes in addition to the privileged time in the process.
147
Context Switches/sec is the combined rate at which all processors on the computer are switched from one thread to another.  Context switches occur when a running thread voluntarily relinquishes the processor, is preempted by a higher priority ready thread, or switches between user-mode and privileged (kernel) mode to use an Executive or subsystem service.  It is the sum of Thread\\Context Switches/sec for all threads running on all processors in the computer and is measured in numbers of switches.  There are context switch counters on the System and Thread objects. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
149
Interrupts/sec is the average rate, in incidents per second, at which the processor received and serviced hardware interrupts. It does not include deferred procedure calls (DPCs), which are counted separately. This value is an indirect indicator of the activity of devices that generate interrupts, such as the system clock, the mouse, disk drivers, data communication lines, network interface cards, and other peripheral devices. These devices normally interrupt the processor when they have completed a task or require attention. Normal thread execution is suspended. The system clock typically interrupts the processor every 10 milliseconds, creating a background of interrupt activity. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
151
System Calls/sec is the combined rate of calls to operating system service routines by all processes running on the computer. These routines perform all of the basic scheduling and synchronization of activities on the computer, and provide access to non-graphic devices, memory management, and name space management. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
153
Level 1 TLB Fills/sec is the frequency of faults that occur when reference is made to memory whose Page Table Entry (PTE) is not in the Translation Lookaside Buffer (TLB).  On some computers this fault is handled by software loading the PTE into the TLB, and this counter is incremented.
155
Level 2 TLB Fills/sec is the frequency of faults that occur when reference is made to memory whose Page Table Entry (PTE) is not in the Translation Lookaside Buffer (TLB), nor is the page containing the PTE.  On some computers this fault is handled by software loading the PTE into the TLB, and this counter is incremented.
157
% User Time is the percentage of elapsed time that the process threads spent executing code in user mode. Applications, environment subsystems, and integral subsystems execute in user mode. Code executing in user mode cannot damage the integrity of the Windows executive, kernel, and device drivers. Unlike some early operating systems, Windows uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes. Some work done by Windows on behalf of the application might appear in other subsystem processes in addition to the privileged time in the process.
159
% Privileged Time is the percentage of elapsed time that the process threads spent executing code in privileged mode. When a Windows system service is called, the service will often run in privileged mode to gain access to system-private data. Such data is protected from access by threads executing in user mode. Calls to the system can be explicit or implicit, such as page faults or interrupts. Unlike some early operating systems, Windows uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes. Some work done by Windows on behalf of the application might appear in other subsystem processes in addition to the privileged time in the process.
161
Enumerations Server/sec is the rate at which server browse requests have been processed by this workstation.
163
Enumerations Domain/sec is the rate at which domain browse requests have been processed by this workstation.
165
Enumerations Other/sec is the rate at which browse requests processed by this workstation are not domain or server browse requests.
167
Missed Server Announcements is the number of server announcements that have been missed due to configuration or allocation limits.
169
Missed Mailslot Datagrams is the number of Mailslot Datagrams that have been discarded due to configuration or allocation limits.
171
Missed Server List Requests is the number of requests to retrieve a list of browser servers that were received by this workstation, but could not be processed.
173
Virtual Bytes Peak is the maximum size, in bytes, of virtual address space the process has used at any one time. Use of virtual address space does not necessarily imply corresponding use of either disk or main memory pages. However, virtual space is finite, and the process might limit its ability to load libraries.
175
Virtual Bytes is the current size, in bytes, of the virtual address space the process is using. Use of virtual address space does not necessarily imply corresponding use of either disk or main memory pages. Virtual space is finite, and the process can limit its ability to load libraries.
177
Page Faults/sec is the rate at which page faults by the threads executing in this process are occurring.  A page fault occurs when a thread refers to a virtual memory page that is not in its working set in main memory. This may not cause the page to be fetched from disk if it is on the standby list and hence already in main memory, or if it is in use by another process with whom the page is shared.
179
Working Set Peak is the maximum size, in bytes, of the Working Set of this process at any point in time. The Working Set is the set of memory pages touched recently by the threads in the process. If free memory in the computer is above a threshold, pages are left in the Working Set of a process even if they are not in use. When free memory falls below a threshold, pages are trimmed from Working Sets. If they are needed they will then be soft-faulted back into the Working Set before they leave main memory.
181
Working Set is the current size, in bytes, of the Working Set of this process. The Working Set is the set of memory pages touched recently by the threads in the process. If free memory in the computer is above a threshold, pages are left in the Working Set of a process even if they are not in use.  When free memory falls below a threshold, pages are trimmed from Working Sets. If they are needed they will then be soft-faulted back into the Working Set before leaving main memory.
183
Page File Bytes Peak is the maximum amount of virtual memory, in bytes, that this process has reserved for use in the paging file(s). Paging files are used to store pages of memory used by the process that are not contained in other files.  Paging files are shared by all processes, and the lack of space in paging files can prevent other processes from allocating memory. If there is no paging file, this counter reflects the maximum amount of virtual memory that the process has reserved for use in physical memory.
185
Page File Bytes is the current amount of virtual memory, in bytes, that this process has reserved for use in the paging file(s). Paging files are used to store pages of memory used by the process that are not contained in other files. Paging files are shared by all processes, and the lack of space in paging files can prevent other processes from allocating memory. If there is no paging file, this counter reflects the current amount of virtual memory that the process has reserved for use in physical memory.
187
Private Bytes is the current size, in bytes, of memory that this process has allocated that cannot be shared with other processes.
189
% Processor Time is the percentage of elapsed time that all of process threads used the processor to execution instructions. An instruction is the basic unit of execution in a computer, a thread is the object that executes instructions, and a process is the object created when a program is run. Code executed to handle some hardware interrupts and trap conditions are included in this count.
191
% Processor Time is the percentage of elapsed time that all of process threads used the processor to execution instructions. An instruction is the basic unit of execution in a computer, a thread is the object that executes instructions, and a process is the object created when a program is run. Code executed to handle some hardware interrupts and trap conditions are included in this count.
193
% User Time is the percentage of elapsed time that this thread has spent executing code in user mode.  Applications, environment subsystems, and integral subsystems execute in user mode.  Code executing in user mode cannot damage the integrity of the Windows NT Executive, Kernel, and device drivers.  Unlike some early operating systems, Windows NT uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes.  These subsystem processes provide additional protection.  Therefore, some work done by Windows NT on behalf of your application might appear in other subsystem processes in addition to the privileged time in your process.
195
% Privileged Time is the percentage of elapsed time that the process threads spent executing code in privileged mode.  When a Windows system service in called, the service will often run in privileged mode to gain access to system-private data. Such data is protected from access by threads executing in user mode. Calls to the system can be explicit or implicit, such as page faults or interrupts. Unlike some early operating systems, Windows uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes. Some work done by Windows on behalf of the application might appear in other subsystem processes in addition to the privileged time in the process.
197
Context Switches/sec is the rate of switches from one thread to another.  Thread switches can occur either inside of a single process or across processes.  A thread switch can be caused either by one thread asking another for information, or by a thread being preempted by another, higher priority thread becoming ready to run.  Unlike some early operating systems, Windows NT uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes.  These subsystem processes provide additional protection.  Therefore, some work done by Windows NT on behalf of an application  appear in other subsystem processes in addition to the privileged time in the application.  Switching to the subsystem process causes one Context Switch in the application thread.  Switching back causes another Context Switch in the subsystem thread.
199
Current Disk Queue Length is the number of requests outstanding on the disk at the time the performance data is collected. It also includes requests in service at the time of the collection. This is a instantaneous snapshot, not an average over the time interval. Multi-spindle disk devices can have multiple requests that are active at one time, but other concurrent requests are awaiting service. This counter might reflect a transitory high or low queue length, but if there is a sustained load on the disk drive, it is likely that this will be consistently high. Requests experience delays proportional to the length of this queue minus the number of spindles on the disks. For good performance, this difference should average less than two.
201
% Disk Time is the percentage of elapsed time that the selected disk drive was busy servicing read or write requests.
203
% Disk Read Time is the percentage of elapsed time that the selected disk drive was busy servicing read requests.
205
% Disk Write Time is the percentage of elapsed time that the selected disk drive was busy servicing write requests.
207
Avg. Disk sec/Transfer is the time, in seconds, of the average disk transfer.
209
Avg. Disk sec/Read is the average time, in seconds, of a read of data from the disk.
211
Avg. Disk sec/Write is the average time, in seconds, of a write of data to the disk.
213
Disk Transfers/sec is the rate of read and write operations on the disk.
215
Disk Reads/sec is the rate of read operations on the disk.
217
Disk Writes/sec is the rate of write operations on the disk.
219
Disk Bytes/sec is the rate bytes are transferred to or from the disk during write or read operations.
221
Disk Read Bytes/sec is the rate at which bytes are transferred from the disk during read operations.
223
Disk Write Bytes/sec is rate at which bytes are transferred to the disk during write operations.
225
Avg. Disk Bytes/Transfer is the average number of bytes transferred to or from the disk during write or read operations.
227
Avg. Disk Bytes/Read is the average number of bytes transferred from the disk during read operations.
229
Avg. Disk Bytes/Write is the average number of bytes transferred to the disk during write operations.
231
The Process performance object consists of counters that monitor running application program and system processes.  All the threads in a process share the same address space and have access to the same data.
233
The Thread performance object consists of counters that measure aspects of thread behavior.  A thread is the basic object that executes instructions on a processor.  All running processes have at least one thread.
235
The Physical Disk performance object consists of counters that monitor hard or fixed disk drive on a computer.  Disks are used to store file, program, and paging data and are read to retrieve these items, and written to record changes to them.  The values of physical disk counters are sums of the values of the logical disks (or partitions) into which they are divided.
237
The Logical Disk performance object consists of counters that monitor logical partitions of a hard or fixed disk drives.  Performance Monitor identifies logical disks by their a drive letter, such as C.
239
The Processor performance object consists of counters that measure aspects of processor activity. The processor is the part of the computer that performs arithmetic and logical computations, initiates operations on peripherals, and runs the threads of processes.  A computer can have multiple processors.  The processor object represents each processor as an instance of the object.
241
% Total Processor Time is the average percentage of time that all processors on the computer are executing non-idle threads.   This counter was designed as the primary indicator of processor activity on multiprocessor computers.  It is equal to the sum of Process: % Processor Time for all processors, divided by the number of processors.  It is calculated by summing the time that all processors spend executing the thread of the Idle process in each sample interval, subtracting that value from 100%, and dividing the difference by the number of processors on the computer.  (Each processor has an Idle thread which consumes cycles when no other threads are ready to run). For example, on a multiprocessor computer, a value of 50% means that all processors are busy for half of the sample interval, or that half of the processors are busy for all of the sample interval.  This counter displays the average percentage of busy time observed during the sample interval.  It is calculated by monitoring the time the service was inactive, and then subtracting that value from 100%.
243
% Total User Time is the average percentage of non-idle time all processors spend in user mode.  It is the sum of Processor: % User Time for all processors on the computer, divided by the number of processors.  System: % Total User Time and System: % Total Privileged Time sum to % Total Processor Time, but not always to 100%.  (User mode is a restricted processing mode designed for applications, environment subsystems, and integral subsystems.  The alternative, privileged mode, is designed for operating system components and allows direct access to hardware and all memory.  The operating system switches application threads to privileged mode to access operating system services). This counter displays the average busy time as a percentage of the sample time.
245
% Total Privileged Time is the average percentage of non-idle time all processors spend in privileged (kernel) mode.  It is the sum of Processor: % Privileged Time for all processors on the computer, divided by the number of processors.  System: % Total User Time and System: % Total Privileged Time sum to % Total Processor Time, but not always to 100%.  (Privileged mode is an processing mode designed for operating system components which allows direct access to hardware and all memory.  The operating system switches application threads to privileged mode to access operating system services.  The alternative, user mode, is a restricted processing mode designed for applications and environment subsystems). This counter displays the average busy time as a percentage of the sample time.
247
Total Interrupts/sec is the combined rate of hardware interrupts received and serviced by all processors on the computer It is the sum of Processor: Interrupts/sec for all processors, and divided by the number of processors, and is measured in numbers of interrupts.  It does not include DPCs, which are counted separately.  This value is an indirect indicator of the activity of devices that generate interrupts, such as the system timer, the mouse, disk drivers, data communication lines, network interface cards and other peripheral devices.  These devices normally interrupt the processor when they have completed a task or require attention.  Normal thread execution is suspended during interrupts.  Most system clocks interrupt the processor every 10 milliseconds, creating a background of interrupt activity.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
249
Processes is the number of processes in the computer at the time of data collection. This is an instantaneous count, not an average over the time interval.  Each process represents the running of a program.
251
Threads is the number of threads in the computer at the time of data collection. This is an instantaneous count, not an average over the time interval.  A thread is the basic executable entity that can execute instructions in a processor.
253
Events is the number of events in the computer at the time of data collection. This is an instantaneous count, not an average over the time interval.  An event is used when two or more threads try to synchronize execution.
255
Semaphores is the number of semaphores in the computer at the time of data collection. This is an instantaneous count, not an average over the time interval.  Threads use semaphores to obtain exclusive access to data structures that they share with other threads.
257
Mutexes counts the number of mutexes in the computer at the time of data collection. This is an instantaneous count, not an average over the time interval.  Mutexes are used by threads to assure only one thread is executing a particular section of code.
259
Sections is the number of sections in the computer at the time of data collection. This is an instantaneous count, not an average over the time interval.  A section is a portion of virtual memory created by a process for storing data. A process can share sections with other processes.
261
The Object performance object consists of counters that monitor  logical objects in the system, such as processes, threads, mutexes, and semaphores.  This information can be used to detect the unnecessary consumption of computer resources.  Each object requires memory to store basic information about the object.
263
The Redirector performance object consists of counter that monitor network connections originating at the local computer.
265
Bytes Received/sec is the rate of bytes coming in to the Redirector from the network.  It includes all application data as well as network protocol information (such as packet headers).
267
Packets Received/sec is the rate at which the Redirector is receiving packets (also called SMBs or Server Message Blocks).  Network transmissions are divided into packets.  The average number of bytes received in a packet can be obtained by dividing Bytes Received/sec by this counter.  Some packets received might not contain incoming data (for example an acknowledgment to a write made by the Redirector would count as an incoming packet).
269
Read Bytes Paging/sec is the rate at which the Redirector is attempting to read bytes in response to page faults.  Page faults are caused by loading of modules (such as programs and libraries), by a miss in the Cache (see Read Bytes Cache/sec), or by files directly mapped into the address space of applications (a high-performance feature of Windows NT).
271
Read Bytes Non-Paging/sec are those bytes read by the Redirector in response to normal file requests by an application when they are redirected to come from another computer.  In addition to file requests, this counter includes other methods of reading across the network such as Named Pipes and Transactions.  This counter does not count network protocol information, just application data.
273
Read Bytes Cache/sec is the rate at which applications are accessing the file system cache by using the Redirector.  Some of these data requests are satisfied by retrieving the data from the cache.  Requests that miss the Cache cause a page fault (see Read Bytes Paging/sec).
275
Read Bytes Network/sec is the rate at which applications are reading data across the network. This occurs when data sought in the file system cache is not found there and must be retrieved from the network.  Dividing this value by Bytes Received/sec indicates the proportion of application data traveling across the network. (see Bytes Received/sec).
277
Bytes Transmitted/sec is the rate at which bytes are leaving the Redirector to the network.  It includes all application data as well as network protocol information (such as packet headers and the like).
279
Packets Transmitted/sec is the rate at which the Redirector is sending packets (also called SMBs or Server Message Blocks).  Network transmissions are divided into packets.  The average number of bytes transmitted in a packet can be obtained by dividing Bytes Transmitted/sec by this counter.
281
Write Bytes Paging/sec is the rate at which the Redirector is attempting to write bytes changed in the pages being used by applications.  The program data changed by modules (such as programs and libraries) that were loaded over the network are 'paged out' when no longer needed.  Other output pages come from the file system cache (see Write Bytes Cache/sec).
283
Write Bytes Non-Paging/sec is the rate at which bytes are written by the Redirector in response to normal file outputs by an application when they are redirected to another computer.  In addition to file requests, this count includes other methods of writing across the network, such as Named Pipes and Transactions.  This counter does not count network protocol information, just application data.
285
Write Bytes Cache/sec is the rate at which applications on your computer are writing to the file system cache by using the Redirector.  The data might not leave your computer immediately; it can be retained in the cache for further modification before being written to the network.  This saves network traffic.  Each write of a byte into the cache is counted here.
287
Write Bytes Network/sec is the rate at which applications are writing data across the network. This occurs when the file system cache is bypassed, such as for Named Pipes or Transactions, or when the cache writes the bytes to disk to make room for other data.  Dividing this counter by Bytes Transmitted/sec will indicate the proportion of application data being to the network (see Transmitted Bytes/sec).
289
File Read Operations/sec is the rate at which applications are asking the Redirector for data. Each call to a file system or similar Application Program Interface (API) call counts as one operation.
291
Read Operations Random/sec counts the rate at which, on a file-by-file basis, reads are made that are not sequential.  If a read is made using a particular file handle, and then is followed by another read that is not immediately the contiguous next byte, this counter is incremented by one.
293
Read Packets/sec is the rate at which read packets are being placed on the network.  Each time a single packet is sent with a request to read data remotely, this counter is incremented by one.
295
Reads Large/sec is the rate at which reads over 2 times the server's negotiated buffer size are made by applications.  Too many of these could place a strain on server resources.  This counter is incremented once for each read. It does not count packets.
297
Read Packets Small/sec is the rate at which reads less than one-fourth of the server's negotiated buffer size are made by applications.  Too many of these could indicate a waste of buffers on the server.  This counter is incremented once for each read. It does not count packets.
299
File Write Operations/sec is the rate at which applications are sending data to the Redirector. Each call to a file system or similar Application Program Interface (API) call counts as one operation.
301
Write Operations Random/sec is the rate at which, on a file-by-file basis, writes are made that are not sequential.  If a write is made using a particular file handle, and then is followed by another write that is not immediately the next contiguous byte, this counter is incremented by one.
303
Write Packets/sec is the rate at which writes are being sent to the network.  Each time a single packet is sent with a request to write remote data, this counter is incremented by one.
305
Writes Large/sec is the rate at which writes are made by applications that are over 2 times the server's negotiated buffer size.  Too many of these could place a strain on server resources.  This counter is incremented once for each write: it counts writes, not packets.
307
Write Packets Small/sec is the rate at which writes are made by applications that are less than one-fourth of the server's negotiated buffer size.  Too many of these could indicate a waste of buffers on the server.  This counter is incremented once for each write: it counts writes, not packets.
309
Reads Denied/sec is the rate at which the server is unable to accommodate requests for Raw Reads.  When a read is much larger than the server's negotiated buffer size, the Redirector requests a Raw Read which, if granted, would permit the transfer of the data without lots of protocol overhead on each packet.  To accomplish this the server must lock out other requests, so the request is denied if the server is really busy.
311
Writes Denied/sec is the rate at which the server is unable to accommodate requests for Raw Writes.  When a write is much larger than the server's negotiated buffer size, the Redirector requests a Raw Write which, if granted, would permit the transfer of the data without lots of protocol overhead on each packet.  To accomplish this the server must lock out other requests, so the request is denied if the server is really busy.
313
Network Errors/sec is the rate at which serious unexpected errors are occurring. Such errors generally indicate that the Redirector and one or more Servers are having serious communication difficulties. For example an SMB (Server Message Block) protocol error is a Network Error. An entry is written to the System Event Log and provide details.
315
Server Sessions counts the total number of security objects the Redirector has managed.  For example, a logon to a server followed by a network access to the same server will establish one connection, but two sessions.
317
Server Reconnects counts the number of times your Redirector has had to reconnect to a server in order to complete a new active request.  You can be disconnected by the Server if you remain inactive for too long.  Locally even if all your remote files are closed, the Redirector will keep your connections intact for (nominally) ten minutes.  Such inactive connections are called Dormant Connections.  Reconnecting is expensive in time.
319
Connects Core counts the number of connections you have to servers running the original MS-Net SMB protocol, including MS-Net itself and Xenix and VAX's.
321
Connects LAN Manager 2.0 counts connections to LAN Manager 2.0 servers, including LMX servers.
323
Connects LAN Manager 2.1 counts connections to LAN Manager 2.1 servers, including LMX servers.
325
Connects Windows NT counts the connections to Windows 2000 or earlier computers.
327
Server Disconnects counts the number of times a Server has disconnected your Redirector.  See also Server Reconnects.
329
Server Sessions Hung counts the number of active sessions that are timed out and unable to proceed due to a lack of response from the remote server.
331
The Server performance object consists of counters that measure communication between the  local computer and the network.
333
The number of bytes the server has received from the network.  Indicates how busy the server is.
335
The number of bytes the server has sent on the network.  Indicates how busy the server is.
337
Thread Wait Reason is only applicable when the thread is in the Wait state (see Thread State).  It is 0 or 7 when the thread is waiting for the Executive, 1 or 8 for a Free Page, 2 or 9 for a Page In, 3 or 10 for a Pool Allocation, 4 or 11 for an Execution Delay, 5 or 12 for a Suspended condition, 6 or 13 for a User Request, 14 for an Event Pair High, 15 for an Event Pair Low, 16 for an LPC Receive, 17 for an LPC Reply, 18 for Virtual Memory, 19 for a Page Out; 20 and higher are not assigned at the time of this writing.  Event Pairs are used to communicate with protected subsystems (see Context Switches).
339
% DPC Time is the percentage of time that the processor spent receiving and servicing deferred procedure calls (DPCs) during the sample interval. DPCs are interrupts that run at a lower priority than standard interrupts. % DPC Time is a component of % Privileged Time because DPCs are executed in privileged mode. They are counted separately and are not a component of the interrupt counters. This counter displays the average busy time as a percentage of the sample time.
341
The number of sessions that have been closed due to their idle time exceeding the AutoDisconnect parameter for the server.  Shows whether the AutoDisconnect setting is helping to conserve resources.
343
The number of sessions that have been closed due to unexpected error conditions or sessions that have reached the autodisconnect timeout and have been disconnected normally. The autodisconnect timeout value represents the number of seconds that idle connections with no session attached to have before being disconnected automatically by a server. The default value is 30 seconds. This counter increments as a result of normal server operation, not as an indication of network problems or unexpected error condition.
345
The number of sessions that have terminated normally.  Useful in interpreting the Sessions Times Out and Sessions Errored Out statistics--allows percentage calculations.
347
The number of sessions that have been forced to logoff.  Can indicate how many sessions were forced to logoff due to logon time constraints.
349
The number of failed logon attempts to the server.  Can indicate whether password guessing programs are being used to crack the security on the server.
351
The number of times opens on behalf of clients have failed with STATUS_ACCESS_DENIED.  Can indicate whether somebody is randomly attempting to access files in hopes of getting at something that was not properly protected.
353
The number of times accesses to files opened successfully were denied.  Can indicate attempts to access files without proper access authorization.
355
The number of times an internal Server Error was detected.  Unexpected errors usually indicate a problem with the Server.
357
The number of times the server has rejected blocking SMBs due to insufficient count of free work items.  Indicates whether the MaxWorkItem or MinFreeWorkItems server parameters might need to be adjusted.
359
The number of times STATUS_DATA_NOT_ACCEPTED was returned at receive indication time.  This occurs when no work item is available or can be allocated to service the incoming request.  Indicates whether the InitWorkItems or MaxWorkItems parameters might need to be adjusted.
361
The number of successful open attempts performed by the server of behalf of clients.  Useful in determining the amount of file I/O, determining overhead for path-based operations, and for determining the effectiveness of open locks.
363
The number of files currently opened in the server.  Indicates current server activity.
365
The number of sessions currently active in the server.  Indicates current server activity.
367
The number of searches for files currently active in the server.  Indicates current server activity.
369
The number of bytes of non-pageable computer memory the server is using.  This value is useful for determining the values of the MaxNonpagedMemoryUsage value entry in the Windows NT Registry.
371
The number of times allocations from nonpaged pool have failed.  Indicates that the computer's physical memory is too small.
373
The maximum number of bytes of nonpaged pool the server has had in use at any one point.  Indicates how much physical memory the computer should have.
375
The number of bytes of pageable computer memory the server is currently using.  Can help in determining good values for the MaxPagedMemoryUsage parameter.
377
The number of times allocations from paged pool have failed.  Indicates that the computer's physical memory or paging file are too small.
379
The maximum number of bytes of paged pool the server has had allocated.  Indicates the proper sizes of the Page File(s) and physical memory.
381
Server Announce Allocations Failed/sec is the rate at which server (or domain) announcements have failed due to lack of memory.
383
Mailslot Allocations Failed is the number of times the datagram receiver has failed to allocate a buffer to hold a user mailslot write.
385
Mailslot Receives Failed indicates the number of mailslot messages that could not be received due to transport failures.
387
Mailslot Writes Failed is the total number of mailslot messages that have been successfully received, but that could not be written to the mailslot.
389
Bytes Total/sec is the rate the Redirector is processing data bytes.  This includes all application and file data in addition to protocol information such as packet headers.
391
File Data Operations/sec is the rate at which the Redirector is processing data operations. One operation should include many bytes, since each operation has overhead. The efficiency of this path can be determined by dividing the Bytes/sec by this counter to obtain the average number of bytes transferred per operation.
393
Current Commands counter indicates the number of pending commands from the local computer to all destination servers.  If the Current Commands counter shows a high number and the local computer is idle, this may indicate a network-related problem or a redirector bottleneck on the local computer.
395
The number of bytes the server has sent to and received from the network.  This value provides an overall indication of how busy the server is.
397
% Interrupt Time is the time the processor spends receiving and servicing hardware interrupts during sample intervals. This value is an indirect indicator of the activity of devices that generate interrupts, such as the system clock, the mouse, disk drivers, data communication lines, network interface cards and other peripheral devices. These devices normally interrupt the processor when they have completed a task or require attention. Normal thread execution is suspended during interrupts. Most system clocks interrupt the processor every 10 milliseconds, creating a background of interrupt activity. suspends normal thread execution during interrupts. This counter displays the average busy time as a percentage of the sample time.
399
The NWLink NetBIOS performance object consists of counters that monitor IPX transport rates and connections.
401
Packets/sec is the rate the Redirector is processing data packets.  One packet includes (hopefully) many bytes.  We say hopefully here because each packet has protocol overhead.  You can determine the efficiency of this path by dividing the Bytes/sec by this counter to determine the average number of bytes transferred/packet.  You can also divide this counter by Operations/sec to determine the average number of packets per operation, another measure of efficiency.
405
Context Blocks Queued per second is the rate at which work context blocks had to be placed on the server's FSP queue to await server action.
407
File Data Operations/ sec is the combined rate of read and write operations on all logical disks on the computer.  This is the inverse of System: File Control Operations/sec.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
409
% Free Space is the percentage of total usable space on the selected logical disk drive that was free.
411
Free Megabytes displays the unallocated space, in megabytes, on the disk drive in megabytes. One megabyte is equal to 1,048,576 bytes.
413
Connections Open is the number of connections currently open for this protocol.  This counter shows the current count only and does not accumulate over time.
415
Connections No Retries is the total count of connections that were successfully made on the first try.  This number is an accumulator and shows a running total.
417
Connections With Retries is the total count of connections that were made after retrying the attempt.  A retry occurs when the first connection attempt failed.  This number is an accumulator and shows a running total.
419
Disconnects Local is the number of session disconnections that were initiated by the local computer.  This number is an accumulator and shows a running total.
421
Disconnects Remote is the number of session disconnections that were initiated by the remote computer.  This number is an accumulator and shows a running total.
423
Failures Link is the number of connections that were dropped due to a link failure.  This number is an accumulator and shows a running total.
425
Failures Adapter is the number of connections that were dropped due to an adapter failure.  This number is an accumulator and shows a running total.
427
Connection Session Timeouts is the number of connections that were dropped due to a session timeout.  This number is an accumulator and shows a running total.
429
Connections Canceled is the number of connections that were canceled.  This number is an accumulator and shows a running total.
431
Failures Resource Remote is the number of connections that failed because of resource problems or shortages on the remote computer.  This number is an accumulator and shows a running total.
433
Failures Resource Local is the number of connections that failed because of resource problems or shortages on the local computer.  This number is an accumulator and shows a running total.
435
Failures Not Found is the number of connection attempts that failed because the remote computer could not be found.  This number is an accumulator and shows a running total.
437
Failures No Listen is the number of connections that were rejected because the remote computer was not listening for connection requests.
439
Datagrams/sec is the rate at which datagrams are processed by the computer.  This counter displays the sum of datagrams sent and datagrams received.  A datagram is a connectionless packet whose delivery to a remote is not guaranteed.
441
Datagram Bytes/sec is the rate at which datagram bytes are processed by the computer.  This counter is the sum of datagram bytes that are sent as well as received.  A datagram is a connectionless packet whose delivery to a remote is not guaranteed.
443
Datagrams Sent/sec is the rate at which datagrams are sent from the computer.  A datagram is a connectionless packet whose delivery to a remote computer is not guaranteed.
445
Datagram Bytes Sent/sec is the rate at which datagram bytes are sent from the computer.  A datagram is a connectionless packet whose delivery to a remote computer is not guaranteed.
447
Datagrams Received/sec is the rate at which datagrams are received by the computer.  A datagram is a connectionless packet whose delivery to a remote computer is not guaranteed.
449
Datagram Bytes Received/sec is the rate at which datagram bytes are received by the computer.  A datagram is a connectionless packet whose delivery to a remote computer is not guaranteed.
451
Packets/sec is the rate at which packets are processed by the computer.  This count is the sum of Packets Sent and Packets Received per second.  This counter includes all packets processed: control as well as data packets.
453
Packets Sent/sec is the rate at which packets are sent by the computer.  This counter counts all packets sent by the computer, i.e. control as well as data packets.
455
Packets Received/sec is the rate at which packets are received by the computer.  This counter counts all packets processed: control as well as data packets.
457
Frames/sec is the rate at which data frames (or packets) are processed by the computer.  This counter is the sum of data frames sent and data frames received.  This counter only counts those frames (packets) that carry data.
459
Frame Bytes/sec is the rate at which data bytes are processed by the computer.  This counter is the sum of data frame bytes sent and received.  This counter only counts the byte in frames (packets) that carry data.
461
Frames Sent/sec is the rate at which data frames are sent by the computer.  This counter only counts the frames (packets) that carry data.
463
Frame Bytes Sent/sec is the rate at which data bytes are sent by the computer.  This counter only counts the bytes in frames (packets) that carry data.
465
Frames Received/sec is the rate at which data frames are received by the computer.  This counter only counts the frames (packets) that carry data.
467
Frame Bytes Received/sec is the rate at which data bytes are received by the computer.  This counter only counts the frames (packets) that carry data.
469
Frames Re-Sent/sec is the rate at which data frames (packets) are re-sent by the computer.  This counter only counts the frames or packets that carry data.
471
Frame Bytes Re-Sent/sec is the rate at which data bytes are re-sent by the computer.  This counter only counts the bytes in frames that carry data.
473
Frames Rejected/sec is the rate at which data frames are rejected.  This counter only counts the frames (packets) that carry data.
475
Frame Bytes Rejected/sec is the rate at which data bytes are rejected.  This counter only counts the bytes in data frames (packets) that carry data.
477
Expirations Response is the count of T1 timer expirations.
479
Expirations Ack is the count of T2 timer expirations.
481
Window Send Maximum is the maximum number of bytes of data that will be sent before waiting for an acknowledgment from the remote computer.
483
Window Send Average is the running average number of data bytes that were sent before waiting for an acknowledgment from the remote computer.
485
Piggyback Ack Queued/sec is the rate at which piggybacked acknowledgments are queued. Piggyback acknowledgments are acknowledgments to received packets that are to be included in the next outgoing packet to the remote computer.
487
Piggyback Ack Timeouts is the number of times that a piggyback acknowledgment could not be sent because there was no outgoing packet to the remote on which to piggyback.  A piggyback ack is an acknowledgment to a received packet that is sent along in an outgoing data packet to the remote computer.  If no outgoing packet is sent within the timeout period, then an ack packet is sent and this counter is incremented.
489
The NWLink IPX performance object consists of counters that measure datagram transmission to and from computers using the IPX protocol.
491
The NWLink SPX performance object consist of counters that measure data transmission and session connections for computers using the SPX protocol.
493
The NetBEUI performance object consists of counters that measure data transmission for network activity which conforms to the NetBIOS End User Interface standard.
495
The NetBEUI Resource performance object consists of counters that track the use of buffers by the NetBEUI protocol.
497
Used Maximum is the maximum number of NetBEUI resources (buffers) in use at any point in time.  This value is useful in sizing the maximum resources provided.  The number in parentheses following the resource name is used to identify the resource in Event Log messages.
499
Used Average is the current number of resources (buffers) in use at this time.  The number in parentheses following the resource name is used to identify the resource in Event Log messages.
501
Times Exhausted is the number of times all the resources (buffers) were in use.  The number in parentheses following the resource name is used to identify the resource in Event Log messages.
503
The NBT Connection performance object consists of counters that measure the rates at which bytes are sent and received over the NBT connection between the local computer and a remote computer.  The connection is identified by the name of the remote computer.
505
Bytes Received/sec is the rate at which bytes are received by the local computer over an NBT connection to some remote computer.  All the bytes received by the local computer over the particular NBT connection are counted.
507
Bytes Sent/sec is the rate at which bytes are sent by the local computer over an NBT connection to some remote computer.  All the bytes sent by the local computer over the particular NBT connection are counted.
509
Bytes Total/sec is the rate at which bytes are sent or received by the local computer over an NBT connection to some remote computer.  All the bytes sent or received by the local computer over the particular NBT connection are counted.
511
The Network Interface performance object consists of counters that measure the rates at which bytes and packets are sent and received over a network connection.  It includes counters that monitor connection errors.
513
Bytes Total/sec is the rate at which bytes are sent and received over each network adapter, including framing characters. Network Interface\Bytes Total/sec is a sum of Network Interface\Bytes Received/sec and Network Interface\Bytes Sent/sec.
515
Packets/sec is the rate at which packets are sent and received on the network interface.
517
Packets Received/sec is the rate at which packets are received on the network interface.
519
Packets Sent/sec is the rate at which packets are sent on the network interface.
521
Current Bandwidth is an estimate of the current bandwidth of the network interface in bits per second (BPS).  For interfaces that do not vary in bandwidth or for those where no accurate estimation can be made, this value is the nominal bandwidth.
523
Bytes Received/sec is the rate at which bytes are received over each network adapter, including framing characters. Network Interface\Bytes Received/sec is a subset of Network Interface\Bytes Total/sec.
525
Packets Received Unicast/sec is the rate at which (subnet) unicast packets are delivered to a higher-layer protocol.
527
Packets Received Non-Unicast/sec is the rate at which non-unicast (subnet broadcast or subnet multicast) packets are delivered to a higher-layer protocol.
529
Packets Received Discarded is the number of inbound packets that were chosen to be discarded even though no errors had been detected to prevent their delivery to a higher-layer protocol.  One possible reason for discarding packets could be to free up buffer space.
531
Packets Received Errors is the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.
533
Packets Received Unknown is the number of packets received through the interface that were discarded because of an unknown or unsupported protocol.
535
Bytes Sent/sec is the rate at which bytes are sent over each network adapter, including framing characters. Network Interface\Bytes Sent/sec is a subset of Network Interface\Bytes Total/sec.
537
Packets Sent Unicast/sec is the rate at which packets are requested to be transmitted to subnet-unicast addresses by higher-level protocols.  The rate includes the packets that were discarded or not sent.
539
Packets Sent Non-Unicast/sec is the rate at which packets are requested to be transmitted to non-unicast (subnet broadcast or subnet multicast) addresses by higher-level protocols.  The rate includes the packets that were discarded or not sent.
541
Packets Outbound Discarded is the number of outbound packets that were chosen to be discarded even though no errors had been detected to prevent transmission. One possible reason for discarding packets could be to free up buffer space.
543
Packets Outbound Errors is the number of outbound packets that could not be transmitted because of errors.
545
Output Queue Length is the length of the output packet queue (in packets). If this is longer than two, there are delays and the bottleneck should be found and eliminated, if possible. Since the requests are queued by the Network Driver Interface Specification (NDIS) in this implementation, this will always be 0.
547
The IP performance object consists of counters that measure the rates at which IP datagrams are sent and received by using IP protocols.  It also includes counters that monitor IP protocol errors.
549
Datagrams/sec is the rate, in incidents per second, at which IP datagrams were received from or sent to the interfaces, including those in error. Forwarded datagrams are not included in this rate.
551
Datagrams Received/sec is the rate, in incidents per second, at which IP datagrams are received from the interfaces, including those in error. Datagrams Received/sec is a subset of Datagrams/sec.
553
Datagrams Received Header Errors is the number of input datagrams that were discarded due to errors in the IP headers, including bad checksums, version number mismatch, other format errors, time-to-live exceeded, errors discovered in processing their IP options, etc.
555
Datagrams Received Address Errors is the number of input datagrams that were discarded because the IP address in their IP header destination field was not valid for the computer. This count includes invalid addresses (for example, 0.0.  0.0) and addresses of unsupported Classes (for example, Class E). For entities that are not IP gateways and do not forward datagrams, this counter includes datagrams that were discarded because the destination address was not a local address.
557
Datagrams Forwarded/sec is the rate, in incidents per second, at which attemps were made to find routes to forward input datagrams their final destination, because the local server was not the final IP destination. In servers that do not act as IP Gateways, this rate includes only packets that were source-routed via this entity, where the source-route option processing was successful.
559
Datagrams Received Unknown Protocol is the number of locally-addressed datagrams that were successfully received but were discarded because of an unknown or unsupported protocol.
561
Datagrams Received Discarded is the number of input IP datagrams that were discarded even though problems prevented their continued processing (for example, lack of buffer space). This counter does not include any datagrams discarded while awaiting re-assembly.
563
Datagrams Received Delivered/sec is the rate, in incidents per second, at which input datagrams were successfully delivered to IP user-protocols, including Internet Control Message Protocol (ICMP).
565
Datagrams Sent/sec is the rate, in incidents per second, at which IP datagrams were supplied for transmission by local IP user-protocols (including ICMP). This counter does not include any datagrams counted in Datagrams Forwarded/sec. Datagrams Sent/sec is a subset of Datagrams/sec.
567
Datagrams Outbound Discarded is the number of output IP datagrams that were discarded even though no problems were encountered to prevent their transmission to their destination (for example, lack of buffer space). This counter includes datagrams counted in Datagrams Forwarded/sec that meet this criterion.
569
Datagrams Outbound No Route is the number of IP datagrams that were discarded because no route could be found to transmit them to their destination.  This counter includes any packets counted in Datagrams Forwarded/sec that meet this `no route' criterion.
571
Fragments Received/sec is the rate, in incidents per second, at which IP fragments that need to be reassembled at this entity are received.
573
Fragments Re-assembled/sec is the rate, in incidents per second, at which IP fragments were successfully reassembled.
575
Fragment Re-assembly Failures is the number of failures detected by the IP reassembly algorithm, such as time outs, errors, etc.  This is not necessarily a count of discarded IP fragments since some algorithms (notably RFC 815) lose track of the number of fragments by combining them as they are received.
577
Fragmented Datagrams/sec is the rate, in incidents per second, at which datagrams are successfully fragmented.
579
Fragmentation Failures is the number of IP datagrams that were discarded because they needed to be fragmented at but could not be (for example, because the `Don't Fragment' flag was set).
581
Fragments Created/sec is the rate, in incidents per second, at which IP datagram fragments were generated as a result of fragmentation.
583
The ICMP performance object consists of counters that measure the rates at which messages are sent and received by using ICMP protocols.  It also includes counters that monitor ICMP protocol errors.
585
Messages/sec is the total rate, in incidents per second, at which ICMP messages were sent and received by the entity. The rate includes messages received or sent in error.
587
Messages Received/sec is the rate, in incidents per second at which ICMP messages were received. The rate includes messages received in error.
589
Messages Received Errors is the number of ICMP messages that the entity received but had errors, such as bad ICMP checksums, bad length, etc.
591
Received Destination Unreachable is the number of ICMP Destination Unreachable messages received.
593
Received Time Exceeded is the number of ICMP Time Exceeded messages received.
595
Received Parameter Problem is the number of ICMP Parameter Problem messages received.
597
Received Source Quench is the number of ICMP Source Quench messages received.
599
Received Redirect/sec is the rate, in incidents per second, at which ICMP Redirect messages were received.
601
Received Echo/sec is the rate, in incidents per second, at which ICMP Echo messages were received.
603
Received Echo Reply/sec is the rate, in incidents per second, at which ICMP Echo Reply messages were received.
605
Received Timestamp/sec is the rate, in incidents per second at which ICMP Timestamp Request messages were received.
607
Received Timestamp Reply/sec is the rate of ICMP Timestamp Reply messages received.
609
Received Address Mask is the number of ICMP Address Mask Request messages received.
611
Received Address Mask Reply is the number of ICMP Address Mask Reply messages received.
613
Messages Sent/sec is the rate, in incidents per second, at which the server attempted to send. The rate includes those messages sent in error.
615
Messages Outbound Errors is the number of ICMP messages that were not send due to problems within ICMP, such as lack of buffers.  This value does not include errors discovered outside the ICMP layer, such as those recording the failure of IP to route the resultant datagram.  In some implementations, none of the error types are included in the value of this counter.
617
Sent Destination Unreachable is the number of ICMP Destination Unreachable messages sent.
619
Sent Time Exceeded is the number of ICMP Time Exceeded messages sent.
621
Sent Parameter Problem is the number of ICMP Parameter Problem messages sent.
623
Sent Source Quench is the number of ICMP Source Quench messages sent.
625
Sent Redirect/sec is the rate, in incidents per second, at which ICMP Redirect messages were sent.
627
Sent Echo/sec is the rate of ICMP Echo messages sent.
629
Sent Echo Reply/sec is the rate, in incidents per second, at which ICMP Echo Reply messages were sent.
631
Sent Timestamp/sec is the rate, in incidents per second, at which ICMP Timestamp Request messages were sent.
633
Sent Timestamp Reply/sec is the rate, in incidents per second,  at which ICMP Timestamp Reply messages were sent.
635
Sent Address Mask is the number of ICMP Address Mask Request messages sent.
637
Sent Address Mask Reply is the number of ICMP Address Mask Reply messages sent.
639
The TCP performance object consists of counters that measure the rates at which TCP Segments are sent and received by using the TCP protocol.  It includes counters that monitor the number of TCP connections in each TCP connection state.
641
Segments/sec is the rate at which TCP segments are sent or received using the TCP protocol.
643
Connections Established is the number of TCP connections for which the current state is either ESTABLISHED or CLOSE-WAIT.
645
Connections Active is the number of times TCP connections have made a direct transition to the SYN-SENT state from the CLOSED state. In other words, it shows a number of connections which are initiated by the local computer. The value is a cumulative total.
647
Connections Passive is the number of times TCP connections have made a direct transition to the SYN-RCVD state from the LISTEN state. In other words, it shows a number of connections to the local computer, which are initiated by remote computers. The value is a cumulative total.
649
Connection Failures is the number of times TCP connections have made a direct transition to the CLOSED state from the SYN-SENT state or the SYN-RCVD state, plus the number of times TCP connections have made a direct transition to the LISTEN state from the SYN-RCVD state.
651
Connections Reset is the number of times TCP connections have made a direct transition to the CLOSED state from either the ESTABLISHED state or the CLOSE-WAIT state.
653
Segments Received/sec is the rate at which segments are received, including those received in error.  This count includes segments received on currently established connections.
655
Segments Sent/sec is the rate at which segments are sent, including those on current connections, but excluding those containing only retransmitted bytes.
657
Segments Retransmitted/sec is the rate at which segments are retransmitted, that is, segments transmitted containing one or more previously transmitted bytes.
659
The UDP performance object consists of counters that measure the rates at which UDP datagrams are sent and received by using the UDP protocol.  It includes counters that monitor UDP protocol errors.
661
Datagrams/sec is the rate at which UDP datagrams are sent or received by the entity.
663
Datagrams Received/sec is the rate at which UDP datagrams are delivered to UDP users.
665
Datagrams No Port/sec is the rate of received UDP datagrams for which there was no application at the destination port.
667
Datagrams Received Errors is the number of received UDP datagrams that could not be delivered for reasons other than the lack of an application at the destination port.
669
Datagrams Sent/sec is the rate at which UDP datagrams are sent from the entity.
671
Disk Storage device statistics from the foreign computer
673
The number of allocation failures reported by the disk storage device
675
System Up Time is the elapsed time (in seconds) that the computer has been running since it was last started.  This counter displays the difference between the start time and the current time.
677
The current number of system handles in use.
679
Free System Page Table Entries is the number of page table entries not currently in used by the system.  This counter displays the last observed value only; it is not an average.
681
The number of threads currently active in this process. An instruction is the basic unit of execution in a processor, and a thread is the object that executes instructions. Every running process has at least one thread.
683
The current base priority of this process. Threads within a process can raise and lower their own base priority relative to the process' base priority.
685
The total elapsed time, in seconds, that this process has been running.
687
Alignment Fixups/sec is the rate, in incidents per seconds, at alignment faults were fixed by the system.
689
Exception Dispatches/sec is the rate, in incidents per second, at which exceptions were dispatched by the system.
691
Floating Emulations/sec is the rate of floating emulations performed by the system.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
693
Logon/sec is the rate of all server logons.
695
The current dynamic priority of this thread.  The system can raise the thread's dynamic priority above the base priority if the thread is handling user input, or lower it towards the base priority if the thread becomes compute bound.
697
The current base priority of this thread.  The system can raise the thread's dynamic priority above the base priority if the thread is handling user input, or lower it towards the base priority if the thread becomes compute bound.
699
The total elapsed time (in seconds) this thread has been running.
701
The Paging File performance object consists of counters that monitor the paging file(s) on the computer.  The paging file is a reserved space on disk that backs up committed physical memory on the computer.
703
The amount of the Page File instance in use in percent.  See also Process\\Page File Bytes.
705
The peak usage of the Page File instance in percent.  See also Process\\Page File Bytes Peak.
707
Starting virtual address for this thread.
709
Current User Program Counter for this thread.
711
Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  No Access protection prevents a process from writing to or reading from these pages and will generate an access violation if either is attempted.
713
Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  Read Only protection prevents the contents of these pages from being modified.  Any attempts to write or modify these pages will generate an access violation.
715
Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  Read/Write protection allows a process to read, modify and write to these pages.
717
Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  Write Copy protection is used when memory is shared for reading but not for writing.  When processes are reading this memory, they can share the same memory, however, when a sharing process wants to have write access to this shared memory, a copy of that memory is made.
719
Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  Executable memory is memory that can be executed by programs, but cannot be read or written.  This type of protection is not supported by all processor types.
721
Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  Execute/Read Only memory is memory that can be executed as well as read.
723
Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  Execute/Read/Write memory is memory that can be executed by programs as well as read and modified.
725
Mapped Space is virtual memory that has been mapped  to a specific virtual address (or range of virtual addresses) in the process' virtual address space.  Execute Write Copy is memory that can be executed by programs as well as read and written.  This type of protection is used when memory needs to be shared between processes.  If the sharing processes only read the memory, then they will all use the same memory.  If a sharing process desires write access, then a copy of this memory will be made for that process.
727
Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  No Access protection prevents a process from writing to or reading from these pages and will generate an access violation if either is attempted.
729
Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  Read Only protection prevents the contents of these pages from being modified.  Any attempts to write or modify these pages will generate an access violation.
731
Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  Read/Write protection allows a process to read, modify and write to these pages.
733
Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  Write Copy protection is used when memory is shared for reading but not for writing.  When processes are reading this memory, they can share the same memory, however, when a sharing process wants to have read/write access to this shared memory, a copy of that memory is made.
735
Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  Executable memory is memory that can be executed by programs, but cannot be read or written.  This type of protection is not supported by all processor types.
737
Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  Execute/Read Only memory is memory that can be executed as well as read.
739
Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  Execute/Read/Write memory is memory that can be executed by programs as well as read and modified.
741
The Image performance object consists of counters that monitor the virtual address usage of images executed by processes on the computer.
743
Reserved Space is virtual memory that has been reserved for future use by a process, but has not been mapped or committed.  Execute Write Copy is memory that can be executed by programs as well as read and written.  This type of protection is used when memory needs to be shared between processes.  If the sharing processes only read the memory, then they will all use the same memory.  If a sharing process desires write access, then a copy of this memory will be made for that process.
745
Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  No Access protection prevents a process from writing to or reading from these pages and will generate an access violation if either is attempted.
747
Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  Read Only protection prevents the contents of these pages from being modified.  Any attempts to write or modify these pages will generate an access violation.
749
Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  Read/Write protection allows a process to read, modify and write to these pages.
751
Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  Write Copy protection is used when memory is shared for reading but not for writing.  When processes are reading this memory, they can share the same memory, however, when a sharing process wants to have read/write access to this shared memory, a copy of that memory is made for writing to.
753
Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  Executable memory is memory that can be executed by programs, but cannot be read or written.  This type of protection is not supported by all processor types.
755
Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  Execute/Read Only memory is memory that can be executed as well as read.
757
Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  Execute/Read/Write memory is memory that can be executed by programs as well as read and written.
759
Unassigned Space is mapped and committed virtual memory in use by the process that is not attributable to any particular image being executed by that process.  Execute Write Copy is memory that can be executed by programs as well as read and written.  This type of protection is used when memory needs to be shared between processes.  If the sharing processes only read the memory, then they will all use the same memory.  If a sharing process desires write access, then a copy of this memory will be made for that process.
761
Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  No Access protection prevents a process from writing to or reading from these pages and will generate an access violation if either is attempted.
763
Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  Read Only protection prevents the contents of these pages from being modified.  Any attempts to write or modify these pages will generate an access violation.
765
Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  Read/Write protection allows a process to read, modify and write to these pages.
767
Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  Write Copy protection is used when memory is shared for reading but not for writing.  When processes are reading this memory, they can share the same memory, however, when a sharing process wants to have read/write access to this shared memory, a copy of that memory is made for writing to.
769
Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  Executable memory is memory that can be executed by programs, but cannot be read or written.  This type of protection is not supported by all processor types.
771
Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  Execute/Read-Only memory is memory that can be executed as well as read.
773
Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  Execute/Read/Write memory is memory that can be executed by programs as well as read and written and modified.
775
Image Space is the virtual address space in use by the images being executed by the process.  This is the sum of all the address space with this protection allocated by images run by the selected process  Execute Write Copy is memory that can be executed by programs as well as read and written.  This type of protection is used when memory needs to be shared between processes.  If the sharing processes only read the memory, then they will all use the same memory.  If a sharing process desires write access, then a copy of this memory will be made for that process.
777
Bytes Image Reserved is the sum of all virtual memory reserved by images within this process.
779
Bytes Image Free is the amount of virtual address space that is not in use or reserved by images within this process.
781
Bytes Reserved is the total amount of virtual memory reserved for future use by this process.
783
Bytes Free is the total unused virtual address space of this process.
785
ID Process is the unique identifier of this process. ID Process numbers are reused, so they only identify a process for the lifetime of that process.
787
The Process Address Space performance object consists of counters that monitor memory allocation and use  for a selected process.
789
Image Space is the virtual address space in use by the selected image with this protection.  No Access protection prevents a process from writing or reading these pages and will generate an access violation if either is attempted.
791
Image Space is the virtual address space in use by the selected image with this protection.  Read Only protection prevents the contents of these pages from being modified.  Any attempts to write or modify these pages will generate an access violation.
793
Image Space is the virtual address space in use by the selected image with this protection.  Read/Write protection allows a process to read, modify and write to these pages.
795
Image Space is the virtual address space in use by the selected image with this protection.  Write Copy protection is used when memory is shared for reading but not for writing.  When processes are reading this memory, they can share the same memory, however, when a sharing process wants to have read/write access to this shared memory, a copy of that memory is made for writing to.
797
Image Space is the virtual address space in use by the selected image with this protection.  Executable memory is memory that can be executed by programs, but cannot be read or written.  This type of protection is not supported by all processor types.
799
Image Space is the virtual address space in use by the selected image with this protection.  Execute/Read Only memory is memory that can be executed as well as read.
801
Image Space is the virtual address space in use by the selected image with this protection.  Execute/Read/Write memory is memory that can be executed by programs as well as read and written.
803
Image Space is the virtual address space in use by the selected image with this protection.  Execute Write Copy is memory that can be executed by programs as well as read and written.  This type of protection is used when memory needs to be shared between processes.  If the sharing processes only read the memory, then they will all use the same memory.  If a sharing process desires write access, then a copy of this memory will be made for that process.
805
ID Thread is the unique identifier of this thread.  ID Thread numbers are reused, so they only identify a thread for the lifetime of that thread.
807
Mailslot Opens Failed/sec indicates the rate at which mailslot messages to be delivered to mailslots that are not present are received by this workstation.
809
Duplicate Master Announcements indicates the number of times that the master browser has detected another master browser on the same domain.
811
Illegal Datagrams/sec is the rate at which incorrectly formatted datagrams have been received by the workstation.
813
Announcements Total/sec is the sum of Announcements Server/sec and Announcements Domain/sec.
815
Enumerations Total/sec is the rate at which browse requests have been processed by this workstation.  This is the sum of Enumerations Server/sec, Enumerations Domain/sec, and Enumerations Other/sec.
817
The Thread Details performance object  consists of counters that measure aspects of thread behavior that are difficult or time-consuming or collect.  These counters are distinguished from those in the Thread object by their high overhead.
819
Cache Bytes the size, in bytes, of the portion of the system file cache which is currently resident and active in physical memory. The Cache Bytes and Memory\\System Cache Resident Bytes counters are equivalent.  This counter displays the last observed value only; it is not an average.
821
Cache Bytes Peak is the maximum number of bytes used by the system file cache since the system was last restarted. This might be larger than the current size of the cache. This counter displays the last observed value only; it is not an average.
823
Pages Input/sec is the rate at which pages are read from disk to resolve hard page faults. Hard page faults occur when a process refers to a page in virtual memory that is not in its working set or elsewhere in physical memory, and must be retrieved from disk. When a page is faulted, the system tries to read multiple contiguous pages into memory to maximize the benefit of the read operation. Compare the value of Memory\\Pages Input/sec to the value of  Memory\\Page Reads/sec to determine the average number of pages read into memory during each read operation.
825
Transition Pages RePurposed is the rate at which the number of transition cache pages were reused for a different purpose.  These pages would have otherwise remained in the page cache to provide a (fast) soft fault (instead of retrieving it from backing store) in the event the page was accessed in the future.  Note these pages can contain private or sharable memory.
873
The number of bytes transmitted total for this connection.
875
The number of bytes received total for this connection.
877
The number of data frames transmitted total for this connection.
879
The number of data frames received total for this connection.
881
The compression ratio for bytes being transmitted.
883
The compression ratio for bytes being received.
885
The total number of CRC Errors for this connection.  CRC Errors occur when the frame received contains erroneous data.
887
The total number of Timeout Errors for this connection.  Timeout Errors occur when an expected is not received in time.
889
The total number of Serial Overrun Errors for this connection.  Serial Overrun Errors occur when the hardware cannot handle the rate at which data is received.
891
The total number of Alignment Errors for this connection.  Alignment Errors occur when a byte received is different from the byte expected.
893
The total number of Buffer Overrun Errors for this connection.  Buffer Overrun Errors when the software cannot handle the rate at which data is received.
895
The total number of CRC, Timeout, Serial Overrun, Alignment, and Buffer Overrun Errors for this connection.
897
The number of bytes transmitted per second.
899
The number of bytes received per second.
901
The number of frames transmitted per second.
903
The number of frames received per second.
905
The total number of CRC, Timeout, Serial Overrun, Alignment, and Buffer Overrun Errors per second.
909
The total number of Remote Access connections.
921
The WINS Server performance object consists of counters that monitor communications using the WINS Server service.
923
Unique Registrations/sec is the rate at which unique registration are received by the WINS server.
925
Group Registrations/sec is the rate at which group registration are received by the WINS server.
927
Total Number of Registrations/sec is the sum of the Unique and Group registrations per sec.  This is the total rate at which registration are received by the WINS server.
929
Unique Renewals/sec is the rate at which unique renewals are received by the WINS server.
931
Group Renewals/sec is the rate at which group renewals are received by the WINS server.
933
Total Number of Renewals/sec is the sum of the Unique and Group renewals per sec.  This is the total rate at which renewals are received by the WINS server.
935
Total Number of Releases/sec is the rate at which releases are received by the WINS server.
937
Total Number of Queries/sec is the rate at which queries are received by the WINS server.
939
Unique Conflicts/sec is the rate at which unique registrations/renewals received by the WINS server resulted in conflicts with records in the database.
941
Group Conflicts/sec is the rate at which group registration received by the WINS server resulted in conflicts with records in the database.
943
Total Number of Conflicts/sec is the sum of the Unique and Group conflicts per sec.  This is the total rate at which conflicts were seen by the WINS server.
945
Total Number of Successful Releases/sec
947
Total Number of Failed Releases/sec
949
Total Number of Successful Queries/sec
951
Total Number of Failed Queries/sec
953
The total number of handles currently open by this process. This number is equal to the sum of the handles currently open by each thread in this process.
1001
Services for Macintosh AFP File Server.
1003
The maximum amount of paged memory resources used by the MacFile Server.
1005
The current amount of paged memory resources used by the MacFile Server.
1007
The maximum amount of nonpaged memory resources use by the MacFile Server.
1009
The current amount of nonpaged memory resources used by the MacFile Server.
1011
The number of sessions currently connected to the MacFile server.  Indicates current server activity.
1013
The maximum number of sessions connected at one time to the MacFile server.  Indicates usage level of server.
1015
The number of internal files currently open in the MacFile server.  This count does not include files opened on behalf of Macintosh clients.
1017
The maximum number of internal files open at one time in the MacFile server.  This count does not include files opened on behalf of Macintosh clients.
1019
The number of failed logon attempts to the MacFile server.  Can indicate whether password guessing programs are being used to crack the security on the server.
1021
The number of bytes read from disk per second.
1023
The number of bytes written to disk per second.
1025
The number of bytes received from the network per second.  Indicates how busy the server is.
1027
The number of bytes sent on the network per second.  Indicates how busy the server is.
1029
The number of outstanding work items waiting to be processed.
1031
The maximum number of outstanding work items waiting at one time.
1033
The current number of threads used by MacFile server.  Indicates how busy the server is.
1035
The maximum number of threads used by MacFile server.  Indicates peak usage level of server.
1051
AppleTalk Protocol
1053
Number of packets received per second by Appletalk on this port.
1055
Number of packets sent per second by Appletalk on this port.
1057
Number of bytes received per second by Appletalk on this port.
1059
Number of bytes sent per second by Appletalk on this port.
1061
Average time in milliseconds to process a DDP packet on this port.
1063
Number of DDP packets per second received by Appletalk on this port.
1065
Average time in milliseconds to process an AARP packet on this port.
1067
Number of AARP packets per second received by Appletalk on this port.
1069
Average time in milliseconds to process an ATP packet on this port.
1071
Number of ATP packets per second received by Appletalk on this port.
1073
Average time in milliseconds to process an NBP packet on this port.
1075
Number of NBP packets per second received by Appletalk on this port.
1077
Average time in milliseconds to process a ZIP packet on this port.
1079
Number of ZIP packets per second received by Appletalk on this port.
1081
Average time in milliseconds to process an RTMP packet on this port.
1083
Number of RTMP packets per second received by Appletalk on this port.
1085
Number of ATP requests retransmitted on this port.
1087
Number of ATP release timers that have expired on this port.
1089
Number of ATP Exactly-once transaction responses per second on this port.
1091
Number of ATP At-least-once transaction responses per second on this port.
1093
Number of ATP transaction release packets per second received on this port.
1095
The current amount of nonpaged memory resources used by AppleTalk.
1097
Number of packets routed in on this port.
1099
Number of packets dropped due to resource limitations on this port.
1101
Number of ATP requests retransmitted to this port.
1103
Number of packets routed out on this port.
1111
Provides Network Statistics for the local network segment via the Network Monitor Service.
1113
The total number of frames received per second on this network segment.
1115
The number of bytes received per second on this network segment.
1117
The number of Broadcast frames received per second on this network segment.
1119
The number of Multicast frames received per second on this network segment.
1121
Percentage of network bandwidth in use on this network segment.
1125
Percentage of network bandwidth which is made up of broadcast traffic on this network segment.
1127
Percentage of network bandwidth which is made up of multicast traffic on this network segment.
1151
The Telephony System
1153
The number of telephone lines serviced by this computer.
1155
The number of telephone devices serviced by this computer.
1157
The number of telephone lines serviced by this computer that are currently active.
1159
The number of telephone devices that are currently being monitored.
1161
The rate of outgoing calls made by this computer.
1163
The rate of incoming calls answered by this computer.
1165
The number of applications that are currently using telephony services.
1167
Current outgoing calls being serviced by this computer.
1169
Current incoming calls being serviced by this computer.
1233
Packet Burst Read NCP Count/sec is the rate of NetWare Core Protocol requests for Packet Burst Read.  Packet Burst is a windowing protocol that improves performance.
1235
Packet Burst Read Timeouts/sec is the rate the NetWare Service needs to retransmit a Burst Read Request because the NetWare server took too long to respond.
1237
Packet Burst Write NCP Count/sec is the rate of NetWare Core Protocol requests for Packet Burst Write.  Packet Burst is a windowing protocol that improves performance.
1239
Packet Burst Write Timeouts/sec is the rate the NetWare Service needs to retransmit a Burst Write Request because the NetWare server took too long to respond.
1241
Packet Burst IO/sec is the sum of Packet Burst Read NCPs/sec and Packet Burst Write NCPs/sec.
1261
Logon Total indicates the total session setup attempts, including all successful logon and failed logons since the server service is started.
1263
The total number of durable handle disconnects that have occurred.
1265
The total number of durable handles that are successfully reconnected. The ratio of "reconnected durable handles"/"total durable handles" indicates the stability gain from reconnect durable handles.
1267
The number of SMB BranchCache hash requests that were for the header only received by the server. This indicates how many requests are being done to validate hashes that are already cached by the client.
1269
The number of SMB BranchCache hash generation requests that were sent by SRV2 to the SMB Hash Generation service because a client requested hashes for the file and there was either no hash content for the file or the existing hashes were out of date.
1271
The number of SMB BranchCache hash requests that were received by the server.
1273
The number of SMB BranchCache hash responses that have been sent from the server.
1275
The amount of SMB BranchCache hash data sent from the server. This includes bytes transferred for both hash header requests and full hash data requests.
1277
The total number of resilient handle disconnect that have occurred.
1279
The total number of resilient handles that are successfully reconnected. The ratio of "reconnected resilient handles"/"total resilient handles" indicates the stability gain from reconnect resilient handles.
1301
The Server Work Queues performance object consists of counters that monitor the length of the queues and objects in the queues.
1303
Queue length is the current number of workitem in Blocking queues and Nonblocking queues, which indicates how busy the server is to process outstanding workitems for this CPU. A sustained queue length greater than four might indicate processor congestion.  This is an instantaneous count, not an average over time.
1305
Active Threads is the number of threads currently working on a request from the server client for this CPU.  The system keeps this number as low as possible to minimize unnecessary context switching.  This is an instantaneous count for the CPU, not an average over time.
1307
Available Threads is the number of server threads on this CPU not currently working on requests from a client.  The server dynamically adjusts the number of threads to maximize server performance.
1309
Every request from a client is represented in the server as a 'work item,' and the server maintains a pool of available work items per CPU to speed processing.  This is the instantaneous number of available work items for this CPU.  A sustained near-zero value indicates the need to increase the MinFreeWorkItems registry value for the Server service.  This value will always be 0 in the SMB1 Blocking Queue instance.
1311
Every request from a client is represented in the server as a 'work item,' and the server maintains a pool of available work items per CPU to speed processing.  When a CPU runs out of work items, it borrows a free work item from another CPU.  An increasing value of this running counter might indicate the need to increase the 'MaxWorkItems' or 'MinFreeWorkItems' registry values for the Server service.  This value will always be 0 in the Blocking Queue and SMB2 Queue instances.
1313
Every request from a client is represented in the server as a 'work item,' and the server maintains a pool of available work items per CPU to speed processing.  A sustained value greater than zero indicates the need to increase the 'MaxWorkItems' registry value for the Server service.  This value will always be 0 in the Blocking Queue and SMB2 Queue instances.
1315
Current Clients is the instantaneous count of the clients being serviced by this CPU.  The server actively balances the client load across all of the CPU's in the system.  This value will always be 0 in the Blocking Queue instance.
1317
The rate at which the Server is receiving bytes from the network clients on this CPU.  This value is a measure of how busy the Server is.
1319
The rate at which the Server is sending bytes to the network clients on this CPU.  This value is a measure of how busy the Server is.
1321
The rate at which the Server is sending and receiving bytes with the network clients on this CPU.  This value is a measure of how busy the Server is.
1323
Read Operations/sec is the rate the server is performing file read operations for the clients on this CPU.  This value is a measure of how busy the Server is.  This value will always be 0 in the Blocking Queue instance.
1325
Read Bytes/sec is the rate the server is reading data from files for the clients on this CPU.  This value is a measure of how busy the Server is.
1327
Write Operations/sec is the rate the server is performing file write operations for the clients on this CPU.  This value is a measure of how busy the Server is.  This value will always be 0 in the Blocking Queue instance.
1329
Write Bytes/sec is the rate the server is writing data to files for the clients on this CPU.  This value is a measure of how busy the Server is.
1331
Total Bytes/sec is the rate the Server is reading and writing data to and from the files for the clients on this CPU.  This value is a measure of how busy the Server is.
1333
Total Operations/sec is the rate the Server is performing file read and file write operations for the clients on this CPU.  This value is a measure of how busy the Server is.  This value will always be 0 in the Blocking Queue instance.
1335
DPCs Queued/sec is the average rate, in incidents per second, at which deferred procedure calls (DPCs) were added to the processor's DPC queue. DPCs are interrupts that run at a lower priority than standard interrupts.  Each processor has its own DPC queue. This counter measures the rate that DPCs are added to the queue, not the number of DPCs in the queue.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
1337
DPC Rate is the rate at which deferred procedure calls (DPCs) were added to the processors DPC queues between the timer ticks of the processor clock. DPCs are interrupts that run at alower priority than standard interrupts.  Each processor has its own DPC queue. This counter measures the rate that DPCs were added to the queue, not the number of DPCs in the queue. This counter displays the last observed value only; it is not an average.
1343
Total DPCs Queued/sec is the combined rate at which deferred procedure calls (DPCs) are added to the DPC queue of all processors on the computer.  (DPCs are interrupts that run at a lower priority than standard interrupts). Each processor has its own DPC queue.  This counter measures the rate at which DPCs are added to the queue, not the number of DPCs in the queue.  It is the sum of Processor: DPCs Queued/sec for all processors on the computer, divided by the number of processors.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
1345
Total DPC Rate is the combined rate at which deferred procedure calls (DPCs) are added to the DPC queues of all processors between timer ticks of each processor's system clock.  (DPCs are interrupts that run at a lower priority than standard interrupts). Each processor has its own DPC queue.  This counter measures the rate at which DPCs are added to the queue, not the number of DPCs in the queue.  It is the sum of Processor: DPC Rate for all processors on the computer, divided by the number of processors.  This counter displays the last observed value only; it is not an average.
1351
% Registry Quota In Use is the percentage of the Total Registry Quota Allowed that is currently being used by the system.  This counter displays the current percentage value only; it is not an average.
1361
Counters that indicate the status of local and system Very Large memory allocations.
1363
VLM % Virtual Size In Use
1365
Current size of the process VLM Virtual memory space in bytes.
1367
The peak size of the process VLM virtual memory space in bytes.  This value indicates the maximum size of the process VLM virtual memory since the process started.
1369
The current size of the process VLM virtual memory space in bytes that may be allocated.  Note that the maximum allocation allowed may be smaller than this value due to fragmentation of the memory space.
1371
The current size of committed VLM memory space for the current process in bytes.
1373
The peak size of the committed VLM memory space in bytes for the current process since the process started.
1375
The current size of all committed VLM memory space in bytes for the system.
1377
The peak size of all committed VLM memory space in bytes since the system was started.
1379
The current size of all committed shared VLM memory space in bytes for the system.
1381
Available KBytes is the amount of physical memory, in Kilobytes, immediately available for allocation to a process or for system use. It is equal to the sum of memory assigned to the standby (cached), free and zero page lists.
1383
Available MBytes is the amount of physical memory, in Megabytes, immediately available for allocation to a process or for system use. It is equal to the sum of memory assigned to the standby (cached), free and zero page lists.
1401
Avg. Disk Queue Length is the average number of both read and write requests that were queued for the selected disk during the sample interval.
1403
Avg. Disk Read Queue Length is the average number of read requests that were queued for the selected disk during the sample interval.
1405
Avg. Disk Write Queue Length is the average number of write requests that were queued for the selected disk during the sample interval.
1407
% Committed Bytes In Use is the ratio of Memory\\Committed Bytes to the Memory\\Commit Limit. Committed memory is the physical memory in use for which space has been reserved in the paging file should it need to be written to disk. The commit limit is determined by the size of the paging file.  If the paging file is enlarged, the commit limit increases, and the ratio is reduced). This counter displays the current percentage value only; it is not an average.
1409
The Full Image performance object consists of counters that monitor the virtual address usage of images executed by processes on the computer.  Full Image counters are the same counters as contained in Image object with the only difference being the instance name.  In the Full Image object, the instance name includes the full file path name of the loaded modules, while in the Image object only the filename is displayed.
1411
The Creating Process ID value is the Process ID of the process that created the process. The creating process may have terminated, so this value may no longer identify a running process.
1413
The rate at which the process is issuing read I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1415
The rate at which the process is issuing write I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1417
The rate at which the process is issuing read and write I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1419
The rate at which the process is issuing I/O operations that are neither read nor write operations (for example, a control function). This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1421
The rate at which the process is reading bytes from I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1423
The rate at which the process is writing bytes to I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1425
The rate at which the process is reading and writing bytes in I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1427
The rate at which the process is issuing bytes to I/O operations that do not involve data such as control operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.
1451
Displays performance statistics about a Print Queue.
1453
Total number of jobs printed on a print queue since the last restart.
1455
Number of bytes per second printed on a print queue.
1457
Total number of pages printed through GDI on a print queue since the last restart.
1459
Current number of jobs in a print queue.
1461
Current number of references (open handles) to this printer.
1463
Peak number of references (open handles) to this printer.
1465
Current number of spooling jobs in a print queue.
1467
Maximum number of spooling jobs in a print queue since last restart.
1469
Total number of out of paper errors in a print queue since the last restart.
1471
Total number of printer not ready errors in a print queue since the last restart.
1473
Total number of job errors in a print queue since last restart.
1475
Total number of calls from browse clients to this print server to request network browse lists since last restart.
1477
Total number of calls from other print servers to add shared network printers to this server since last restart.
1479
Working Set - Private displays the size of the working set, in bytes, that is use for this process only and not shared nor sharable by other processes.
1481
Working Set - Shared displays the size of the working set, in bytes, that is sharable and may be used by other processes.  Because a portion of a process' working set is shareable, does not necessarily mean that other processes are using it.
1483
% Idle Time reports the percentage of time during the sample interval that the disk was idle.
1485
Split IO/Sec reports the rate at which I/Os to the disk were split into multiple I/Os. A split I/O may result from requesting data of a size that is too large to fit into a single I/O or that the disk is fragmented.
1501
Reports the accounting and processor usage data collected by each active named Job object.
1503
Current % Processor Time shows the percentage of the sample interval that the processes in the Job object spent executing code.
1505
Current % User mode Time shows the percentage of the sample interval that the processes in the Job object spent executing code in user mode.
1507
Current % Kernel mode Time shows the percentage of the sample interval that the processes in the Job object spent executing code in kernel or privileged mode.
1509
This Period mSec - Processor shows the time, in milliseconds, of processor time used by all the processes in the Job object, including those that have terminated or that are no longer associated with the Job object, since a time limit on the Job was established.
1511
This Period mSec - User mode shows the time, in milliseconds, of user mode processor time used by all the processes in the Job object, including those that have terminated or that are no longer associated with the Job object, since a time limit on the Job was established.
1513
This Period mSec - Kernel mode shows the time, in milliseconds, of kernel mode processor time used by all the processes in the Job object, including those that have terminated or that are no longer associated with the Job object, since a time limit on the Job was established.
1515
Pages/Sec shows the page fault rate of all the processes in the Job object.
1517
Process Count - Total shows the number of processes, both active and terminated, that are or have been associated with the Job object.
1519
Process Count - Active shows the number of processes that are currently associated with the Job object.
1521
Process Count - Terminated shows the number of processes that have been terminated because of a limit violation.
1523
Total mSec - Processor shows the time, in milliseconds, of processor time used by all the processes in the Job object, including those that have terminated or that are no longer associated with the Job object, since the Job object was created.
1525
Total mSec - User mode shows the time, in milliseconds, of user mode processor time used by all the processes in the Job object, including those that have terminated or that are no longer associated with the Job object, since the Job object was created.
1527
Total mSec - Kernel mode shows the time, in milliseconds, of kernel mode processor time used by all the processes in the Job object, including those that have terminated or that are no longer associated with the Job object, since the Job object was created.
1537
Received Packet Too Big is the number of received packets thatare larger than anticipated.
1539
Received Membership Query is the number of packets received thatquery their membership to a group.
1541
Received Membership Report is the number of packets received thatreport their membership to a group.
1543
Received Membership Reduction is the number of packets received thatcancelled their membership to a group.
1545
Received Router Solicit is the number of packets received thatsolicit the router.
1547
Received Router Advert is the number of packets received thatadvert the router.
1549
% Job object Details shows detailed performance information about the active processes that make up a Job object.
1551
Received Neighbor Solicit is the number of packets received thatsolicit a neighbor.
1553
Received Neighbor Advert is the number of packets received thatadvert a neighbor.
1555
Sent Packet Too Big is the number of sent packets thatare larger than anticipated.
1557
Sent Membership Query is the number of packets sent thatquery their membership to a group.
1559
Sent Membership Report is the number of packets sent thatreport their membership to a group.
1561
Sent Membership Reduction is the number of packets sent thatcancelled their membership to a group.
1563
Sent Router Solicit is the number of packets sent thatsolicit the router.
1565
Sent Router Advert is the number of packets sent thatadvert the router.
1567
Sent Neighbor Solicit is the number of packets sent thatsolicit a neighbor.
1569
Sent Neighbor Advert is the number of packets sent thatadvert a neighbor.
1571
These counters track authentication performance on a per second basis.
1573
This counter tracks the number of NTLM authentications processed per second for the AD on this DC or for local accounts on this member server.
1575
This counter tracks the number of times that clients use a ticket to authenticate to this computer per second.
1577
This counter tracks the number of Authentication Service (AS) requests that are being processed by the Key Distribution Center (KDC) per second. Clients use AS requests to obtain a ticket-granting ticket.
1579
This counter tracks the number of ticket-granting service (TGS) requests that are being processed by the Key Distribution Center (KDC) per second. Clients use these TGS requests to obtain a service ticket, which allows a client to access resources on other computers.
1581
This counter tracks the number of Secure Sockets Layer (SSL) entries that are currently stored in the secure channel (Schannel) session cache.  The Schannel session cache stores information about successfully established sessions, such as SSL session IDs.  Clients can use this information to reconnect to a server without performing a full SSL handshake.
1583
This counter tracks the number of Secure Sockets Layer (SSL) entries that are currently stored in the secure channel (Schannel) session cache and that are currently in use.  The Schannel session cache stores information about successfully established sessions, such as SSL session IDs.  Clients can use this information to reconnect to a server without performaing a full SSL handshake.
1585
This counter tracks the number of Secure Sockets Layer (SSL) full client-side handshakes that are being processed per second.  During a handshake, signals are exchanged to acknowledge that communication can occur between computers or other devices.
1587
This counter tracks the number of Secure Sockets Layer (SSL) client-side reconnect handshakes that are being processed per second.  Reconnect handshakes allow session keys from previous SSL sessions to be used to resume a client/server connection, and they require less memory to process than full handshakes.
1589
This counter tracks the number of Secure Sockets Layer (SSL) full server-side handshakes that are being processed per second.  During a handshake, signals are exchanged to acknowledge that communication can occur between computers or other devices.
1591
This counter tracks the number of Secure Sockets Layer (SSL) server-side reconnect handshakes that are being processed per second.  Reconnect handshakes allow session keys from previous SSL sessions to be used to resume a client/server connection, and they require less memory to process than full handshakes.
1593
This counter tracks the number of Digest authentications that are being processed per second.
1595
This counter tracks the number of Kerberos requests that a read-only domain controller (RODC) forwards to its hub, per second.  This counter is tracked only on a RODC.
1597
Offloaded Connections is the number of TCP connections (over both IPv4 and IPv6) that are currently handled by the TCP chimney offload capable network adapter.
1599
TCP Active RSC Connections is the number of TCP connections (over both IPv4 and IPv6) that are currently receiving large packets from the RSC capable network adapter on this network interface.
1601
TCP RSC Coalesced Packets/sec shows the large packet receive rate across all TCP connections on this network interface.
1603
TCP RSC Exceptions/sec shows the RSC exception rate for receive packets across all TCP connections on this network interface.
1605
TCP RSC Average Packet Size is the average size in bytes of received packets across all TCP connections on this network interface.
1621
This counter tracks the number of armored Authentication Service (AS) requests that are being processed by the Key Distribution Center (KDC) per second.
1623
This counter tracks the number of armored ticket-granting service (TGS) requests that are being processed by the Key Distribution Center (KDC) per second.
1625
This counter tracks the number of Authentication Service (AS) requests explicitly requesting claims that are being processed by the Key Distribution Center (KDC) per second.
1627
This counter tracks the number of service asserted identity (S4U2Self) TGS requests that are explicitly requesting claims. These requests are being processed by the Key Distribution Center (KDC) per second.
1629
This counter tracks the number of constrained delegation (S4U2Proxy) TGS requests that are being processed by the Key Distribution Center (KDC) by checking classic type constrained delegation configuration per second. The classic type constrained delegation is restricted to a single domain and configures the backend services SPN on the middle-tier services account object.
1631
This counter tracks the number of constrained delegation (S4U2Proxy) TGS requests that are being processed by the Key Distribution Center (KDC) by checking the resource type constrained delegation per second. The resource type constrained delegation can cross domain boundaries and configures the middle-tiers account on the backend services account object.
1633
This counter tracks the number of claims-aware ticket-granting service (TGS) requests that are being processed by the Key Distribution Center (KDC) per second. A claims-aware Kerberos client will always request claims during Authentication Service (AS) exchanges.
1635
This counter tracks the number of key trust Authentication Service (AS) requests that are being processed by the Key Distribution Center (KDC) per second.
1671
These counters track the number of security resources and handles used per process.
1673
This counter tracks the number of credential handles in use by a given process.  Credential handles are handles to pre-existing credentials, such as a password, that are associated with a user and are established through a system logon.
1675
This counter tracks the number of context handles in use by a given process.  Context handles are associated with security contexts established between a client application and a remote peer.
1677
Free & Zero Page List Bytes is the amount of physical memory, in bytes, that is assigned to the free and zero page lists. This memory does not contain cached data. It is immediately available for allocation to a process or for system use.
1679
Modified Page List Bytes is the amount of physical memory, in bytes, that is assigned to the modified page list. This memory contains cached data and code that is not actively in use by processes, the system and the system cache. This memory needs to be written out before it will be available for allocation to a process or for system use.
1681
Standby Cache Reserve Bytes is the amount of physical memory, in bytes, that is assigned to the reserve standby cache page lists. This memory contains cached data and code that is not actively in use by processes, the system and the system cache. It is immediately available for allocation to a process or for system use. If the system runs out of available free and zero memory, memory on lower priority standby cache page lists will be repurposed before memory on higher priority standby cache page lists.
1683
Standby Cache Normal Priority Bytes is the amount of physical memory, in bytes, that is assigned to the normal priority standby cache page lists. This memory contains cached data and code that is not actively in use by processes, the system and the system cache. It is immediately available for allocation to a process or for system use. If the system runs out of available free and zero memory, memory on lower priority standby cache page lists will be repurposed before memory on higher priority standby cache page lists.
1685
Standby Cache Core Bytes is the amount of physical memory, in bytes, that is assigned to the core standby cache page lists. This memory contains cached data and code that is not actively in use by processes, the system and the system cache. It is immediately available for allocation to a process or for system use. If the system runs out of available free and zero memory, memory on lower priority standby cache page lists will be repurposed before memory on higher priority standby cache page lists.
1687
Long-Term Average Standby Cache Lifetime, in seconds. The average lifetime of data in the standby cache over a long interval is measured.
1747
% Idle Time is the percentage of time the processor is idle during the sample interval
1749
% C1 Time is the percentage of time the processor spends in the C1 low-power idle state. % C1 Time is a subset of the total processor idle time. C1 low-power idle state enables the processor to maintain its entire context and quickly return to the running state. Not all systems support the % C1 state.
1751
% C2 Time is the percentage of time the processor spends in the C2 low-power idle state. % C2 Time is a subset of the total processor idle time. C2 low-power idle state enables the processor to maintain the context of the system caches. The C2 power state is a lower power and higher exit latency state than C1. Not all systems support the C2 state.
1753
% C3 Time is the percentage of time the processor spends in the C3 low-power idle state. % C3 Time is a subset of the total processor idle time. When the processor is in the C3 low-power idle state it is unable to maintain the coherency of its caches. The C3 power state is a lower power and higher exit latency state than C2. Not all systems support the C3 state.
1755
C1 Transitions/sec is the rate that the CPU enters the C1 low-power idle state. The CPU enters the C1 state when it is sufficiently idle and exits this state on any interrupt. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
1757
C2 Transitions/sec is the rate that the CPU enters the C2 low-power idle state. The CPU enters the C2 state when it is sufficiently idle and exits this state on any interrupt. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
1759
C3 Transitions/sec is the rate that the CPU enters the C3 low-power idle state. The CPU enters the C3 state when it is sufficiently idle and exits this state on any interrupt. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
1761
Heap performance counters for must used heaps
1763
Memory actively used by this heap (FreeBytes + AllocatedBytes)
1765
Total virtual address space reserved for this heap (includes uncommitted ranges)
1767
ReservedBytes minus last uncommitted range in each segment
1769
Memory on freelists in this heap (does not include uncommitted ranges or blocks in heap cache)
1771
Number of blocks on the list of free blocks >1k in size
1773
1/Average time per allocation (excluding allocs from heap cache)
1775
1/Average time per free (excluding frees to heap cache)
1777
Number of uncommitted ranges in the reserved virtual address
1779
Difference between number of allocations and frees (for leak detection)
1781
Allocations/sec from heap cache
1783
Frees/sec from heap cache
1785
Allocations/sec of size <1k bytes (including heap cache)
1787
Frees/sec of size <1k bytes (including heap cache)
1789
Allocations/sec of size 1-8k bytes
1791
Frees/sec of size 1-8k bytes
1793
Allocations/sec of size over 8k bytes
1795
Frees/sec of size over 8k bytes
1797
Allocations/sec (including from heap cache)
1799
Frees/sec (including to heap cache)
1801
Total number of blocks in the heap cache
1803
Largest number of blocks of any one size in the heap cache
1805
(FreeBytes / CommittedBytes) *100
1807
(VirtualBytes / ReservedBytes) * 100
1809
Collisions/sec on the heap lock
1811
Total number of dirty pages on the system cache
1813
Threshold for number of dirty pages on system cache
1815
Counters that report approximate memory utilization statistics per node on NUMA systems.
1817
Total amount of physical memory associated with a NUMA node in megabytes.
1819
Approximate amount of physical memory on the free and zero page lists for a NUMA node, in megabytes.
1821
The Network Adapter performance object consists of counters that measure the rates at which bytes and packets are sent and received over a physical or virtual network connection.  It includes counters that monitor connection errors.
1823
Approximate amount of physical memory on the standby page list for a NUMA node, in megabytes. This counter is available only on 64-bit systems.
1825
Approximate amount of physical memory available for allocation for a NUMA node, in megabytes. Computed as the sum of memory on the zeroed, free, and standby lists for a NUMA node. This counter is available only on 64-bit systems.
1827
The number of SMB BranchCache hash V2 requests that were for the header only received by the server. This indicates how many requests are being done to validate hashes that are already cached by the client.
1829
The number of SMB BranchCache hash V2 generation requests that were sent by SRV2 to the SMB Hash Generation service because a client requested hashes for the file and there was either no hash content for the file or the existing hashes were out of date.
1831
The number of SMB BranchCache hash V2 requests that were received by the server.
1833
The number of SMB BranchCache hash V2 responses that have been sent from the server.
1835
The amount of SMB BranchCache hash V2 data sent from the server. This includes bytes transferred for both hash header requests and full hash data requests.
1837
The amount of SMB BranchCache hash V2 requests that were served from dedup store by the server.
1847
End Marker
6775
Terminal Services per-session resource monitoring.
6777
Microsoft Distributed Transaction Coordinator performance counters
6779
Number of currently active transactions
6781
Number of committed transactions
6783
Number of aborted transactions
6785
Number of in doubt transactions
6787
Maximum number of transactions ever concurrently active
6789
Number of transactions committed by the system administrator
6791
Number of transactions aborted by the system administrator
6793
Minimum time delta between transaction begin and commit
6795
Average time delta between transaction begin and commit
6797
Maximum time delta between transaction begin and commit
6799
Transactions performed per second
6801
Transactions committed per second
6803
Transactions aborted per second
6805
MSDTC Bridge 4.0.0.0 performance counters
6807
The number of WS-AT protocol messages that the WS-AT service failed to send per second.
6809
The number of Prepare retry messages that the WS-AT service has sent per second.
6811
The number of Commit retry messages that the WS-AT service has sent per second.
6813
The number of Prepared retry messages that the WS-AT service has sent per second.
6815
The number of Replay retry messages that the WS-AT service has sent per second.
6817
The number of Fault messages that the WS-AT service has received per second.
6819
The number of Fault messages that the WS-AT service has sent per second.
6821
Average time in milliseconds for the WS-AT service to receive a Prepare message response from a participant.
6823
Base counter for the 'Average participant prepare response time' counter.
6825
Average time in milliseconds for the WS-AT service to receive a Commit message response from a participant.
6827
Base counter for the 'Average participant commit response time' counter.
6829
Help not available.
6831
The cumulative total number of socket connections established for this process since the process was started.
6833
The cumulative total number of bytes received over all open socket connections since the process was started. This number includes data and any protocol information that is not defined by the TCP/IP protocol.
6835
The cumulative total number of bytes sent over all open socket connections since the process was started. This number includes data and any protocol information that is not defined by the TCP/IP protocol.
6837
The cumulative total number of datagram packets received since the process was started.
6839
The cumulative total number of datagram packets sent since the process was started.
6841
.Net CLR Data
6843
Current number of connections, pooled or not.
6845
Current number of connections in all pools associated with the process.
6847
Current number of pools associated with the process.
6849
The highest number of connections in all pools since the process started.
6851
The total number of connection open attempts that have failed for any reason.
6853
The total number of command executes that have failed for any reason.
6855
Counters for System.Data.SqlClient
6857
The number of actual connections per second that are being made to servers
6859
The number of actual disconnects per second that are being made to servers
6861
The number of connections we get from the pool per second
6863
The number of connections we return to the pool per second
6865
The number of connections that are not using connection pooling
6867
The number of connections that are managed by the connection pooler
6869
The number of unique connection strings
6871
The number of unique connection strings waiting for pruning
6873
The number of active connection pools
6875
The number of inactive connection pools
6877
The number of connections currently in-use
6879
The number of connections currently available for use
6881
The number of connections currently waiting to be made ready for use
6883
The number of connections we reclaim from GCed external connections
6885
System.Runtime.Caching.MemoryCache Performance Counters
6887
The number of cache hits.
6889
The number of cache misses.
6891
The percentage of cache hits in the total number of cache requests.
6893
Cache Hit Ratio Base
6895
Total number of entries removed from the cache due to memory pressure or Trim invocations.
6897
The number of entries within the cache.
6899
The number of entries added to the cache or removed from the cache per second.
6901
Counters for classes in the System.Net namespace.
6903
The cumulative total number of socket connections established for this process since the process was started.
6905
The cumulative total number of bytes received over all open socket connections since the process was started. This number includes data and any protocol information that is not defined by the TCP/IP protocol.
6907
The cumulative total number of bytes sent over all open socket connections since the process was started. This number includes data and any protocol information that is not defined by the TCP/IP protocol.
6909
The cumulative total number of datagram packets received since the process was started.
6911
The cumulative total number of datagram packets sent since the process was started.
6913
The number of HttpWebRequest objects created during the last sample interval (typically 1 sec).
6915
The average lifetime of all web requests completed during the last sample interval. The lifetime is defined as the time between the creation of the HttpWebRequest object and the closing of either the HttpWebResponse object or the response stream object. Values are shown in milliseconds.
6917
HttpWebRequests Average Lifetime Base
6919
The number of HttpWebRequest objects added to a waiting queue during the last sample interval (typically 1 sec). A request is added to a waiting queue if all connections to the server are already in use when the request is submitted.
6921
The average time HttpWebRequest objects spent in a waiting queue. A request is added to a waiting queue if all connections to the server are already in use when the request is submitted, and remains there until a connection becomes available. Values are shown in milliseconds.
6923
HttpWebRequests Average Queue Time Base
6925
The number of HttpWebRequest objects aborted during the last sample interval (typically 1 sec). Typically requests are aborted either by calling HttpWebRequest.Abort() or if the request times out.
6927
The number of HttpWebRequest objects failed during the last sample interval (typically 1 sec). A request is considered failed, if after starting the request processing one of the following methods throw an exception: HttpWebRequest.EndGetRequestStream(), HttpWebRequest.GetRequestStream(), HttpWebRequest.EndGetResponse(), HttpWebRequest.GetResponse()
6929
Database provides performance statistics for each process using the ESE high performance embedded database management system.
6931
Defragmentation Tasks is the count of background database defragmentation tasks that are currently executing.
6933
Defragmentation Tasks Pending is the count of background database defragmentation tasks that are currently pending.
6935
Defragmentation Tasks Postponed is the count of background database defragmentation tasks that could not be registered for imminent execution, and have been persisted in a table for later execution. [Dev Only]
6937
Defragmentation Tasks Scheduled/sec is the number of background database defragmentation tasks scheduled for execution per second. [Dev Only]
6939
Defragmentation Tasks Completed/sec is the number of background database defragmentation tasks completing execution per second. [Dev Only]
6941
Heap Allocs/sec is the number of memory allocations from the MP Heaps per second.  [Dev Only]
6943
Heap Frees/sec is the number of memory frees to the MP Heaps per second.  [Dev Only]
6945
Heap Allocations is the current number of memory allocations in the MP Heaps.  [Dev Only]
6947
Heap Bytes Allocated is the size of all memory allocations in the MP Heaps discounting heap managemnt overhead.  [Dev Only]
6949
Page Bytes Reserved is the size of all explicitly reserved virtual address space.  [Dev Only]
6951
Page Bytes Committed is the size of all explicitly committed virtual memory backing store (page file and physical memory).  [Dev Only]
6953
FCB Async Scan/sec is the number of cached schema records (FCBs) scanned during asynchronous schema record cleanup. These records are scanned to age out older schema definitions. [Dev Only]
6955
FCB Async Purge/sec is the number of cached schema records (FCBs) purged during asynchronous schema record cleanup. These records are purged to age out older schema definitions. [Dev Only]
6957
FCB Async Purge Failures/sec is the number of failed purge attempts on cached schema records (FCBs) during asynchronous schema record cleanup.  [Dev Only]
6959
FCB Sync Purge/sec is the number of cached schema records (FCBs) being synchronously purged each second.  [Dev Only]
6961
FCB Sync Purge Stalls/sec is the number of stalls encountered while waiting for exclusive ownership of cached schema records (FCBs) in order to synchronously purge them.  [Dev Only]
6963
FCB Allocations Wait For Version Cleanup/sec is the number FCB allocations that must first wait for version cleanup in an attempt to free used FCBs for re-use. [Dev Only]
6965
FCB Purge On Cursor Close/sec is the number of cached schema records (FCBs) being synchronously purged when the cursor is closed (instead of leaving the schema record cached) each second.  [Dev Only]
6967
FCB Cache % Hit is the percentage of schema records (FCBs) opened directly from the schema record cache.  No file operations were required.  [Dev Only]
6969
No text
6971
FCB Cache Stalls/sec is the number of stalls encountered while waiting for exclusive ownership of cached schema records (FCBs) in order to update their reference count.  [Dev Only]
6973
FCB Cache Maximum is the absolute maximum number of the schema records (FCBs) that can exist in the cache.  [Dev Only]
6975
FCB Cache Preferred is the preferred maximum number of the schema records (FCBs) that should exist in the cache.  [Dev Only]
6977
FCB Cache Allocated is the number of cached schema records (FCBs) currently allocated.  [Dev Only]
6979
FCB Cache Allocated/sec is the number of cached schema records (FCBs) currently allocated per second.  [Dev Only]
6981
FCB Cache Available is the number of cached schema records (FCBs) currently allocated but not in use.  These records will be used and/or purged as required.  [Dev Only]
6983
FCB Attached RCEs is the number of revision control entries (RCEs)  attached to cached schema records (FCBs) [Dev Only]
6985
Sessions In Use is the number of database sessions currently open for use by client threads.
6987
Sessions % Used is the percentage of database sessions currently open for use by client threads.
6989
No text
6991
Resource Manager FCB Allocated indicates the amount of memory in Bytes of allocated FCBs [Dev Only]
6993
Resource Manager FCB Allocated Used indicates the amount of memory in Bytes of allocated and used FCBs [Dev Only]
6995
Resource Manager FCB Quota indicates the maximum amount of memory in Bytes for FCBs [Dev Only]
6997
Resource Manager FUCB Allocated indicates the amount of memory in Bytes of allocated FUCBs [Dev Only]
6999
Resource Manager FUCB Allocated Used indicates the amount of memory in Bytes of allocated and used FUCBs [Dev Only]
7001
Resource Manager FUCB Quota indicates the maximum amount of memory in Bytes for FUCBs [Dev Only]
7003
Resource Manager TDB Allocated indicates the amount of memory in Bytes of allocated TDBs [Dev Only]
7005
Resource Manager TDB Allocated Used indicates the amount of memory in Bytes of allocated and used TDBs [Dev Only]
7007
Resource Manager TDB Quota indicates the maximum amount of memory in Bytes for TDBs [Dev Only]
7009
Resource Manager IDB Allocated indicates the amount of memory in Bytes of allocated IDBs [Dev Only]
7011
Resource Manager IDB Allocated Used indicates the amount of memory in Bytes of allocated and used IDBs [Dev Only]
7013
Resource Manager IDB Quota indicates the maximum amount of memory in Bytes for IDBs [Dev Only]
7015
Table Open Cache % Hit is the percentage of database tables opened using cached schema information.  If this percentage is too low, the table cache size may be too small.
7017
No text
7019
Table Open Cache Hits/sec is the number of database tables opened using cached schema information per second.  If this rate is too low, the table cache size may be too small.
7021
Table Open Cache Misses/sec is the number of database tables opened without using cached schema information per second.  If this rate is too high, the table cache size may be too small.
7023
Table Open Pages Read/sec is the number of database pages read without using cached schema information per second.  If this rate is too high, the table cache size may be too small. [Dev Only]
7025
Table Open Pages Preread/sec is the number of database pages pre-read without using cached schema information per second.  If this rate is too high, the table cache size may be too small. [Dev Only]
7027
Table Opens/sec is the number of database tables opened per second.
7029
Table Closes/sec is the number of database tables closed per second.
7031
Tables Open is the number of database tables opened.
7033
Log Bytes Write per second is the rate bytes are written to the log.
7035
Log Bytes Generated per second is the rate at which data is added to the log.  This is different from Log Bytes Write per second in that each byte is generated only once whereas each byte may be written many times.
7037
Log Buffer Bytes Used is the amount of bytes in the log buffers that have not yet been flushed to the logs.  [Dev Only]
7039
Log Buffer Bytes Free is the amount of free space available in the log buffers.  [Dev Only]
7041
Log Buffer Bytes Committed is total number of committedbytes of log buffer.  [Dev Only]
7043
Log Threads Waiting is the number of threads waiting for their data to be written to the log in order to complete an update of the database.  If this number is too high, the log may be a bottleneck.
7045
Log Checkpoint Depth represents the amount of work, in bytes, that will need to be redone or undone to the database file(s) if the process crashes.  [Dev Only]
7047
Log Generation Checkpoint Depth represents the amount of work, in count of log files, that will need to be redone or undone to the database file(s) if the process crashes.  [Dev Only]
7049
Log Checkpoint Maintenance Outstanding IO Max represents how aggressive, in terms of outstanding IOs, the database engine will be to maintain the preferred checkpoint. This is a function of how far the checkpoint has fallen behind. [Dev Only]
7051
User Read Only Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that do not modify any data stored in the database engine.  [Dev Only]
7053
User Read/Write Transaction Commits to Level 0 (Durable)/sec is the count of fully committed transactions started by the calling process that modify data stored in the database engine.  [Dev Only]
7055
User Read/Write Transaction Commits to Level 0 (Lazy)/sec is the count of transactions started by the calling process and committed to log buffer.  [Dev Only]
7057
User Wait All Transaction Commits/sec is the count of signals to flush all pending transactions started by the calling process that modify data stored in the database engine.  [Dev Only]
7059
User Wait Last Transaction Commits/sec is the count of signals to flush a specific sessions pending transactions.  [Dev Only]
7061
User Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that access data stored in the database engine.  [Dev Only]
7063
User Read Only Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that do not modify any data stored in the database engine.  [Dev Only]
7065
User Read/Write Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that modify data stored in the database engine.  [Dev Only]
7067
User Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that access data stored in the database engine.  [Dev Only]
7069
System Read Only Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that do not modify any data stored in the database engine.  [Dev Only]
7071
System Read/Write Transaction Commits to Level 0 (Durable)/sec is the count of fully committed transactions started internally that modify data stored in the database engine.  [Dev Only]
7073
System Read/Write Transaction Commits to Level 0 (Lazy)/sec is the count of internal transactions committed to log buffer.  [Dev Only]
7075
System Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that access data stored in the database engine.  [Dev Only]
7077
System Read Only Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that do not modify any data stored in the database engine.  [Dev Only]
7079
System Read/Write Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that modify data stored in the database engine.  [Dev Only]
7081
System Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that access data stored in the database engine.  [Dev Only]
7083
Recovery Stalls for Read-only Transactions/sec is the number of times per second recovery had to pause to allow an older read-only transaction to complete.  [Dev Only]
7085
Recovery Long Stalls for Read-only Transactions/sec is the number of times per second recovery had to pause for an extended time to allow an older read-only transaction to complete.  [Dev Only]
7087
Recovery Stalls for Read-only Transactions (ms)/sec is the amount of time (in milliseconds per second) recovery had to pause to allow an older read-only transaction to complete.  [Dev Only]
7089
Recovery Throttles For IO Smoothing/sec is the number of times per second recovery had to pause to not recover a file faster than it was generated.  [Dev Only]
7091
Recovery Throttles For IO Smoothing Time (ms)/sec is the amount of time (in milliseconds per second) recovery had to pause to not recover a file faster than it was generated.  [Dev Only]
7093
Database Page Allocation File Extension Stalls/sec is the rate of attempts to extend the database file that stall.  [Dev Only]
7095
Log Records/sec is the count of records written to the database log buffers per second.  [Dev Only]
7097
Log Buffer Capacity Writes/sec is the count of times the database log buffers must be written per second because they are full.  [Dev Only]
7099
Log Buffer Commit Writes/sec is the count of times the database log buffers must be written per second because a transaction is fully committing its changes.  [Dev Only]
7101
Log Buffer Writes Skipped/sec is the count of times the database log buffers were intended to be written, but we skipped it due to the  desired log data already having been written.  [Dev Only]
7103
Log Buffer Writes Blocked/sec is the count of times the database log buffers were intended to be written, but we skipped it due to the  log buffer being locked for and being written by another thread.  [Dev Only]
7105
Log Writes/sec is the number of times the log buffers are written to the log file(s) per second.  If this number approaches the maximum write rate for the media holding the log file(s), the log may be a bottleneck.
7107
Log Full Segment Writes/sec is the number of times full log segments are written to the log file(s) per second. [Dev Only]
7109
Log Partial Segment Writes/sec is the number of times that a log segment that is only partially full of data is written to the log file(s) per second. [Dev Only]
7111
Log Bytes Wasted/sec is the number of bytes wasted by not reusing a partially written sector (and instead fill it up with NOPs).  [Dev Only]
7113
Log Record Stalls/sec is the number of log records that cannot be added to the log buffers per second because they are full.  If this counter is non-zero most of the time, the log buffer size may be a bottleneck.
7115
Version Buckets Allocated is the total number of version buckets allocated.
7117
Total number of version buckets allocated for FlagDelete RCEs  [Dev Only]
7119
VER Bucket Allocations Wait For Version Cleanup/sec is the number of version bucket allocations that must first wait for version cleanup in an attempt to free used version buckets  for re-use. [Dev Only]
7121
Average length of bookmark in RCE  [Dev Only]
7123
Number of times per second we look in the version store for a node whose version bit is set but which has no versions  [Dev Only]
7125
Number of times per second a version store clean task is dispatched asynchronously to be performed  [Dev Only]
7127
Number of times per second a version store clean task is performed synchronously  [Dev Only]
7129
Number of times per second a version store clean task was discarded due to load concerns  [Dev Only]
7131
Number of times per second a dispatched version store cleanup task fails  [Dev Only]
7133
Record Inserts/sec is the rate at which records are being inserted into database tables.  [Dev Only]
7135
Record Deletes/sec is the rate at which records in database tables are being flagged for deletion.  [Dev Only]
7137
Record Replaces/sec is the rate at which records in database tables are being updated.  [Dev Only]
7139
Record Unnecessary Replaces/sec is the rate at which updates to records in database tables are being discarded because the update did not actually modify the contents of the record.  [Dev Only]
7141
Record Redundant Replaces/sec is the rate at which records in database tables are being updated with the exact same content of the original record.  [Dev Only]
7143
Record Escrow-Updates/sec is the rate at which records in database tables are being escrow-updated.  [Dev Only]
7145
Secondary Index Inserts/sec is the rate at which entries are being inserted into indexes of database tables.  [Dev Only]
7147
Secondary Index Deletes/sec is the rate at which entries in indexes of database tables are being flagged for deletion.  [Dev Only]
7149
False Index Column Updates/sec is the number of times per second an attempt was made to update an index because an update to at least one of the indexed columns was detected, only to discover that none of the indexed columns had actually changed (and therefore no index update was actually required).  [Dev Only]
7151
False Tuple Index Column Updates/sec is the number of times per second an attempt was made to update a tuple index because an update to the tuple-indexed column was detected, only to discover that the column had not actually changed (and therefore no index update was actually required).  [Dev Only]
7153
Record Intrinsic Long-Values Updated/sec is the rate at which intrinsic long-values are added to or replaced in records of database tables.  [Dev Only]
7155
Record Separated Long-Values Added/sec is the rate at which separated long-values are normally added to records of database tables.  [Dev Only]
7157
Record Separated Long-Values Forced/sec is the rate at which separated long-values are added to records of a database table because they could not be accommodated in the record itself.  [Dev Only]
7159
Record Separated Long-Values All Forced/sec is the rate at which all intrinsic long-values are separated out of a record of a database table in order to accommodate updates to the record.  [Dev Only]
7161
Record Separated Long-Values Reference All/sec is the rate at which a reference is added for all the separated long-values associated with a record of a database table.  [Dev Only]
7163
Record Separated Long-Values Dereference All/sec is the rate at which a reference is removed for all the separated long-values associated with a record of a database table.  [Dev Only]
7165
Separated Long-Value Seeks/sec is the rate at which seeks for a separated long-value in a database table are performed.  [Dev Only]
7167
Separated Long-Value Retrieves/sec is the rate at which retrievals of a separated long-value in a database table are performed.  [Dev Only]
7169
Separated Long-Value Creates/sec is the rate at which new separated long-values are added to a database table.  [Dev Only]
7171
Long-Value Maximum LID is the largest LID that has been used by the database engine.  [Dev Only]
7173
Separated Long-Value Updates/sec is the rate at which existing separated long-values in a database table are modified.  [Dev Only]
7175
Separated Long-Value Deletes/sec is the rate at which separated long-values in a database table are flagged for deletion.  [Dev Only]
7177
Separated Long-Value Copies/sec is the rate at which existing separated long-values in a database table are copied.  [Dev Only]
7179
Separated Long-Value Chunk Seeks/sec is the rate at which seeks for a particular chunk of a separated long-value in a database table are performed.  [Dev Only]
7181
Separated Long-Value Chunk Retrieves/sec is the rate at which retrievals of a chunk of a separated long-value in a database table are performed.  [Dev Only]
7183
Separated Long-Value Chunk Appends/sec is the rate at which chunks are appended to separated long-values of database tables.  [Dev Only]
7185
Separated Long-Value Chunk Replaces/sec is the rate at which existing separated long-value chunks in a database table are replaced.  [Dev Only]
7187
Separated Long-Value Chunk Deletes/sec is the rate at which separated long-value chunks in a database table are flagged for deletion.  [Dev Only]
7189
Separated Long-Value Chunk Copies/sec is the rate at which existing separated long-value chunks in a database table are copied.  [Dev Only]
7191
B+ Tree Append Splits/sec is the count of times a page is appended to a database B+ Tree per second.  [Dev Only]
7193
B+ Tree Right Splits/sec is the count of times a page is split right in a database B+ Tree per second.  [Dev Only]
7195
B+ Tree Right Hotpoint Splits/sec is the count of times a page is split right in a database B+ Tree, but which is treated as an append at a local "hotpoint" in the B+ Tree per second.  [Dev Only]
7197
B+ Tree Vertical Splits/sec is the count of times a page is split vertically in a database B+ Tree per second.  [Dev Only]
7199
B+ Tree Splits/sec is the count of times a page is appended to or split in a database B+ Tree per second.  [Dev Only]
7201
B+ Tree Empty Page Merges/sec is the count of empty pages removed from a database B+ Tree per second.  [Dev Only]
7203
Right Merges/sec is the count of pages removed from a database B+ Tree per second by moving all its records to the next page to the right.  [Dev Only]
7205
B+ Tree Partial Merges/sec is the count of pages where some of its records are moved to a page on the right in a database B+ Tree per second.  [Dev Only]
7207
B+ Tree Left Merges/sec is the count of pages removed from a database B+ Tree per second by moving all its records to the previous page to the left.  [Dev Only]
7209
B+ Tree Partial Left Merges/sec is the count of pages where some of its records are moved to a page on the left in a database B+ Tree per second.  [Dev Only]
7211
B+ Tree Page Moves/sec is the count of B+ Tree pages per second where all the records are moved to a new page. [Dev Only]
7213
B+ Tree Merges/sec is the count of pages merged in a database B+ Tree per second.  [Dev Only]
7215
B+ Tree Failed Simple Page Cleanup Attempts/sec is the rate that attempts to reclaim deleted node space on a page are unsuccessful due to a conflict when attempting to write-latch the page. The cleanup is re-tried by locking the root of the B+ Tree.  [Dev Only]
7217
B+ Tree Seek Short Circuits/sec is the count of repeated seeks to the same record in a database B+ Tree that are saved by jumping directly to the cached physical location of that record per second.  [Dev Only]
7219
B+ Tree Opportune Prereads/sec is the number of pages per second that are preread because they are adjacent to a page read by a seek.  [Dev Only]
7221
B+ Tree Unnecessary Sibling Latches/sec is the count of sibling pages latched during a database B+ Tree Delete in the hopes of performing a merge where a merge is not possible, making that latch unnecessary.  [Dev Only]
7223
B+ Tree Move Nexts/sec is the count of times the database engine moves to the next record in a B+ Tree per second.  [Dev Only]
7225
B+ Tree Move Nexts (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the next visible record in a B+ Tree per second.  [Dev Only]
7227
B+ Tree Move Nexts (Nodes Filtered)/sec is the count of times the database engine filters records while attempting to move to the next record in a B+ Tree per second.  [Dev Only]
7229
B+ Tree Move Prevs/sec is the count of times the database engine moves to the previous record in a B+ Tree per second.  [Dev Only]
7231
B+ Tree Move Prevs (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the previous visible record in a B+ Tree per second.  [Dev Only]
7233
B+ Tree Move Prevs (Nodes Filtered)/sec is the count of times the database engine filters records while attempting to move to the previous record in a B+ Tree per second.  [Dev Only]
7235
B+ Tree Seeks/sec is the count of times a record is seeked to by a key in a database B+ Tree per second.  [Dev Only]
7237
B+ Tree Inserts/sec is the count of times a record is inserted in a database B+ Tree per second.  [Dev Only]
7239
B+ Tree Replaces/sec is the count of times a record is replaced in a database B+ Tree per second.  [Dev Only]
7241
B+ Tree Flag Deletes/sec is the count of times a record is flag deleted in a database B+ Tree per second.  [Dev Only]
7243
B+ Tree Deletes/sec is the count of times a record is deleted in a database B+ Tree per second.  [Dev Only]
7245
B+ Tree Appends/sec is the count of times a record is appended to a database B+ Tree per second.  [Dev Only]
7247
Pages Trimmed/sec is the number of database pages that are trimmed and the allocated space is released to the file system.  [Dev Only]
7249
Pages Not Trimmed Unaligned/sec is the number of database pages that are not trimmed because the trim request was not on an aligned boundary that the operating system supports. For example, if the supported trim granulariy is 64k, and the requested trim range is from (64k-1 page) to (128k+1 page), then this counter is increased by two. [Dev Only]
7251
Database Cache Misses per second is the rate at which database file page requests were fulfilled by the database cache by causing a file operation.  If this rate is high then the database cache size may be too small.
7253
Database Cache % Hit is the percentage of database file page requests that were fulfilled by the database cache without causing a file operation.  If this percentage is too low, the database cache size may be too small.
7255
No text
7257
Database Cache % Hit (Unique) is the percentage of unique  database file page requests that were fulfilled by the database cache.
7259
No text
7261
Database Cache Requests/sec (Unique) is the rate at which unique pages are requested from the database cache.
7263
Database Cache Requests/sec is the rate that pages are requested from the database cache.
7265
Database Cache % Pinned is the percentage of the database cache that pinned in the memory.  [Dev Only]
7267
No text
7269
Database Cache % Clean is the percentage of the database cache that does not contain modified data.  [Dev Only]
7271
No text
7273
Database Pages Read Async/sec is the rate that pages are asynchronously read from the database file(s) into the database cache.  [Dev Only]
7275
Database Pages Read Sync/sec is the rate that pages are synchronously read from the database file(s) into the database cache.  [Dev Only]
7277
Database Pages Dirtied/sec is the rate that pages are dirtied in the database cache.  [Dev Only]
7279
Database Pages Dirtied (Repeatedly)/sec is the rate that pages are  repeatedly dirtied / redirtied in the database cache.  [Dev Only]
7281
Database Pages Written/sec is the rate that pages are written to the database file(s) from the database cache.  [Dev Only]
7283
Database Opportune Write Issued (Total) is the count of IO operationshas been issued for opportune write. [Dev Only]
7285
Database Pages Transferred/sec is the rate that pages are transferred from the database file(s) to the database cache and vice versa.  [Dev Only]
7287
Database Pages Non-Resident Trimmed by OS/sec is the number of databases pages trimmed or partially trimmed per second from the buffer cache.  [Dev Only]
7289
Database Pages Non-Resident Reclaimed (Soft Faulted)/sec is the number  of OS soft faults attempted and succeeded against database pages in the buffer cache. [Dev Only]
7291
Database Pages Non-Resident Reclaimed (Failed)/sec is the number of OS soft faults attempted and failed against database pages in the buffer cache. [Dev Only]
7293
Database Pages Non-Resident Re-read/sec is the number of pages that could not be reclaimed by soft fault, and must be redirected to the database file as a re-read of the page. [Dev Only]
7295
Database Pages Non-Resident Evicted (Normally)/sec is the number of pages that were paged / trimmed by the OS memory manager, and got evicted normally before being re-used or re-latched. [Dev Only]
7297
Database Pages Non-Resident Reclaimed (Hard Faulted)/sec is the number of (probably) hard fault operations per second. [Dev Only]
7299
Database Pages Non-Resident Hard Faulted In Latency (us)/sec is the length of time, in microseconds, spent in OS Memory Manager hard fault operations  per sec. [Dev Only]
7301
Database Page Latches/sec is the rate that database pages are latched for access to their data.  [Dev Only]
7303
Database Page Fast Latches/sec is the rate that database pages are latched for access to their data using a hint to tell the cache manager where that page might be in memory.  [Dev Only]
7305
Database Page Bad Latch Hints/sec is the rate that incorrect hints to the location of a given page in the cache are given to the cache manager.  These hints are used to perform fast latches.  [Dev Only]
7307
Database Cache % Fast Latch is the percentage of database pages latched for access to their data using a hint to tell the cache manager where that page might be in memory.  Ideally, this percentage should match Database Cache % Hit.  [Dev Only]
7309
No text
7311
Database Pages Colded (Ext) per second is the rate at which database pages are deprioritized by sub-components other than the buffer manager to send  for early eviction.  [Dev Only]
7313
Database Pages Colded (Int) per second is the rate at which database pages are deprioritized by the buffer manager itself to maintain minimal  cache usage.  [Dev Only]
7315
Database Page Latch Conflicts/sec is the rate that users latching a database page for access to its data fail due to a conflicting latch owned on that same page by another user.  [Dev Only]
7317
Database Page Latch Stalls/sec is the rate that users latching a database page for access to its data must wait for another user to release a latch on that same page.  [Dev Only]
7319
Database Cache % Available is the percentage of the database cache that can be allocated to cache database pages that are newly created or read in from the database file(s).  [Dev Only]
7321
No text
7323
Database Page Faults/sec is the rate that database file page requests require the database cache manager to allocate a new page from the database cache.
7325
Database Page Evictions/sec is the rate that database file page requests, which require the database cache manager to allocate a new page from the database cache, force another database page out of the cache.  The eviction count is charged when the page is allocated and not when the previous owner of that page was actually evicted from the cache.  If this rate is too high, the database cache size may be too small.
7327
Database Page Evictions (Preread Untouched)/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache that were subsequently thrown out without being used. This is non-ideal behavior that represents a waste of I/O bandwidth and processing time.  [Dev Only]
7329
Database Page Evictions (k=1)/sec is the rate that database file pages are evicted that were of limited usefulness (k=1 pool).  [Dev Only]
7331
Database Page Evictions (k=2)/sec is the rate that database file pages are evicted that were of high usefulness (k=2 pool).  [Dev Only]
7333
Database Page Evictions (Scavenging.AvailPool)/sec is the rate at which cached pages are evicted during scavenging to replenish the pool of available buffers.  [Dev Only]
7335
Database Page Evictions (Scavenging.SuperCold.Int)/sec is the rate at which internally deprioritized cached pages (such as older version pages) are evicted  during scavenging.  [Dev Only]
7337
Database Page Evictions (Scavenging.SuperCold.Ext)/sec is the rate at which  externally deprioritized cached pages (such as those scaned by DB maintenance)  are evicted during scavenging.  [Dev Only]
7339
Database Page Evictions (Scavenging.Shrink)/sec is the rate that cached pages are evicted during scavenging due to the database cache shrinking.  [Dev Only]
7341
Database Page Evictions (Other)/sec is the rate that cached pages are evicted due to do-time page patching or purging a cached context / database or individual pages at runtime.  [Dev Only]
7343
Database Page Fault Stalls/sec is the rate of page faults that cannot be serviced because there are no pages available for allocation from the database cache.  If this counter is nonzero most of the time, the clean threshold may be too low.
7345
Database Cache Size (MB) is the amount of system memory, in megabytes, used by the database cache manager to hold commonly used information from the database file(s) to prevent file operations. If the database cache size seems to be too small for optimal performance, and there is very little available memory on the system (see Memory/Available Bytes), an increase of memory in the system may increase performance. If there is a large amount of available memory on the system, and the database cache size is not growing beyond a certain point, the database cache size may be capped at an artificially low limit. An increase in this limit may increase performance.
7347
Database Cache Size is the amount of system memory used by the database cache manager to hold commonly used information from the database file(s) to prevent file operations. If the database cache size seems to be too small for optimal performance and there is very little available memory on the system (see Memory/Available Bytes), adding more memory to the system may increase performance. If there is lots of available memory on the system and the database cache size is not growing beyond a certain point, the database cache size may be capped at an artificially low limit. Increasing this limit may increase performance.
7349
Database Cache Size Effective (MB) is the amount of system memory, in megabytes, that, hypothetically, would be used by the database cache manager if all used dehydrated/compressed database cache buffers were rehydrated/uncompressed.
7351
Database Cache Size Effective is the amount of system memory that, hypothetically, would be used by the database cache manager if all used dehydrated/compressed database cache buffers were rehydrated/uncompressed.
7353
Database Cache Memory Committed (MB) is the amount of memory (in megabytes) committed and ready to use or already in use by the database cache manager. If view-cache is enabled, this counter reflects the expected amount of Windows file cache memory consumed by this application to host database data.
7355
Database Cache Memory Committed is the amount of memory  committed and ready to use or already in use by the database cache manager. If view-cache is enabled, this counter reflects the expected amount of Windows file cache memory consumed by this application to host database data.
7357
Database Cache Memory Reserved (MB) is the amount of memory (in megabytes) reserved for use by the database cache manager. If view-cache is enabled, this counter is zero because the Windows file cache is used to host database data.
7359
Database Cache Memory Reserved is the amount of memory reserved for use by the database cache manager. If view-cache is enabled, this counter is zero because the Windows file cache is used to host database data.
7361
Database Cache Size Target (MB) is the amount of system memory (in MegaBytes) that the database cache manager considers to be ideal to use, given the configuration parameters provided by the application and the overall memory usage of the system. [Dev Only]
7363
Database Cache Size Target is the amount of system memory that the database cache manager considers to be ideal to use, given the configuration parameters provided by the application and the overall memory usage of the system. [Dev Only]
7365
Database Cache Size Min is the minimum amount of system memory configured for use by the database cache manager to hold commonly used information from the database file(s) to prevent file operations.  [Dev Only]
7367
Database Cache Size Max is the maximum amount of system memory configured for use by the database cache manager to hold commonly used information from the database file(s) to prevent file operations.  [Dev Only]
7369
Database Cache Size Resident is the amount of system memory used by the database cache that is currently part of the working set of the process.  If Database Cache Size Resident is ever significantly smaller than Database Cache Size then the operating system has chosen to reclaim that system memory for use in other parts of the system.  The database cache will recover from this event but if this is a common occurrence then it can lead to significant performance problems.
7371
Database Cache Size Resident (MB) is the amount of system memory (in megabytes) used by the database cache that is currently part of the working set of the process.  If Database Cache Size Resident (MB) is ever significantly smaller than Database Cache Size (MB) then the operating system has chosen to reclaim that system memory for use in other parts of the system.  The database cache will recover from this event but if this is a common occurrence then it can lead to significant performance problems.
7373
Database Cache Size Unattached (MB) is the amount of system memory (in MegaBytes) that the database cache manager is holding in case the database gets  re-attached and the cache becomes useful again. [Dev Only]
7375
Database Cache Sizing Duration is the time elapsed, in seconds, since a currently outstanding cache sizing operation started. This counter displays zero if cache sizing is not running. [Dev Only]
7377
Database Cache % Available Min is the minimum percentage of the database cache that is kept to be allocated to cache database pages that are newly created or read in from the database file(s).  If the percentage of available pages drops below this minimum, pages are thrown out of the database cache until the maximum percentage of available pages is reached.  This percentage should be set as low as possible without causing the actual percentage to drop to zero, causing cache fault stalls.  [Dev Only]
7379
No text
7381
Database Cache % Available Max is the maximum percentage of the database cache that is kept to be allocated to cache database pages that are newly created or read in from the database file(s).  This percentage should be set as low as possible but far enough above the minimum percentage so that efficient production of availible pages is possible.  [Dev Only]
7383
No text
7385
Database Pages Preread/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache.  [Dev Only]
7387
Database Page Preread Stalls/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache but did not complete preread before intended use.  [Dev Only]
7389
Database Pages Preread (Unnecessary)/sec is the rate that pages are  requested in anticipation of future use but that are already cached by the database cache.  [Dev Only]
7391
Database Pages Dehydrated/sec is the rate that pages are compressed to memory usage in the buffer manager. [Dev Only]
7393
Database Pages Rehydrated/sec is the rate that pages are uncompressed for active usage or flushing to the database. [Dev Only]
7395
Database Pages Versioned/sec is the rate at which pages in the database cache are being copied into new pages in the cache for the purpose of being asynchronously written while the current version of that page in the database file is still being modified.  This feature is primarily used to avoid cycles, branches, or long chains of flush order dependencies without requiring the pages involved to be synchronously written to disk.  [Dev Only]
7397
Database Pages Version Copied/sec is the rate at which pages in the database cache are being copied into new pages in the cache for the purpose of being asynchronously written while the current version of that page in the database file is still being modified.  This feature is primarily used to avoid cycles, branches, or long chains of flush order dependencies without requiring the pages involved to be synchronously written to disk.  [Dev Only]
7399
Database Cache % Versioned is the percentage of the database cache that contains older versions of currently cached pages that have not yet been written to disk and thrown out of the cache.  [Dev Only]
7401
No text
7403
Database Pages Repeatedly Written/sec is the rate that pages are written to the database file(s) from the database cache more than once in their lifetime in the cache.  These page writes represent extra writes above the theoretical minimum and can therefore be considered overhead.  [Dev Only]
7405
Database Pages Flushed (Scavenging.Shrink)/sec is the rate that pages are written to the database file(s) from the database cache during scavenging because the cache size  must shrink.  [Dev Only]
7407
Database Pages Flushed (Checkpoint)/sec is the rate that pages are written to the database file(s) from the database cache to keep the checkpoint depth down to configured levels.  [Dev Only]
7409
Database Pages Flushed (Checkpoint Foreground)/sec is the rate that pages are written to the database file(s) from the database cache to keep the checkpoint depth down to configured levels.  [Dev Only]
7411
Database Pages Flushed (Context Flush)/sec is the rate that pages are written to the database file(s) from the database cache due to a requested flush of a buffer context.  [Dev Only]
7413
Database Pages Flushed (Filthy Foreground)/sec is the rate that pages are written to the database file(s) from the database cache because they are marked for filthy / immediate flush.  [Dev Only]
7415
Database Pages Flushed (Scavenging.AvailPool)/sec is the rate at which pages are written to the database file(s) from the database cache during scavenging to replenish the pool of available buffers.  [Dev Only]
7417
Database Pages Flushed (Scavenging.SuperCold.Int)/sec is the rate at which  internally deprioritized cached pages (such as older version pages) are  written to the database file(s) from the database cache during to scavenging.  [Dev Only]
7419
Database Pages Flushed (Scavenging.SuperCold.Ext)/sec is the rate at which  externally deprioritized cached pages (such as those scaned by DB maintenance)  are written to the database file(s) from the database cache during to scavenging.  [Dev Only]
7421
Database Pages Flushed Opportunely/sec is the rate that pages are written to the database file(s) from the database cache because they happen to be near other pages that must be written.  These additional writes are performed before they must happen in the hope that the total number of IOs required to write all the pages is reduced.  [Dev Only]
7423
Database Pages Flushed Opportunely Clean/sec is the rate that clean pages are opportunely written to the database file(s) from the database  cache because they happen to be betweeen two other pages that must  be written.  These additional writes are performed in the hope that the total number of IOs required to write all the dirty pages is reduced.  [Dev Only]
7425
Database Pages Coalesced Written/sec is the rate that pages are written to the database file(s) from the database cache coalesced with another page. [Dev Only]
7427
Database Pages Coalesced Read/sec is the rate that pages are read from the database file(s) to the database cache coalesced with another page. [Dev Only]
7429
Provides an estimate of the database cache lifetime, based on the most recently evicted resource.  A database page which is currently entering the cache should expect to remain in the cache for approximately this amount of time (in seconds) if not requested multiple times afterwards (i.e., if it doesn't become "hot").  [Dev Only]
7431
Provides an estimate of the database cache lifetime, based on the most recently evicted resource, though not considering resources which are out of order in our eviction queue.  A database page which is currently entering the cache should expect to remain in the cache for approximately this amount of time (in seconds) if not requested multiple times afterwards (i.e., if it doesn't become "hot").  [Dev Only]
7433
Provides an estimate of the database cache lifetime, based on the oldest most recently scanned resource.  A database page which is currently entering the cache should expect to remain in the cache for approximately this amount of time (in seconds) if not requested multiple times afterwards (i.e., if it doesn't become "hot").  [Dev Only]
7435
Provides the delta (in ms) of "Database Cache Lifetime" and "Database Cache Lifetime (smooth)".  [Dev Only]
7437
Provides the database cache lifetime (in seconds) of the most recently evicted resource that was cached and subsequently used only a single time.  It can also be viewed as the expected cache lifetime of singly-touched resources.  [Dev Only]
7439
Provides the database cache lifetime (in seconds) of the most recently evicted resource that was cached and subsequently used twice or more.  It can also be viewed as the expected cache lifetime of doubly-touched resources.  Note that this counter also captures the lifetime of resources that were touched more than twice, in which case the true lifetime reported is below the actual lifetime of such resources.  [Dev Only]
7441
Database Cache Scan Pages Evaluated/sec is the rate at which database pages are considered for eviction from the database page cache.  [Dev Only]
7443
Database Cache Scan Pages Moved/sec is the rate at which database pages are evaluated for returning from the database eviction data structure but instead re-indexed.  [Dev Only]
7445
Database Cache Scan Page Evaluated Out-of-order/sec is the rate at which database pages are considered for eviction from the database page cache in a priority counter to the page replacement algorithm.  [Dev Only]
7447
No text
7449
Provides the number of entries returned by LRU-k.  [Dev Only]
7451
Provides the number of buckets required to evaluate by LRU-k to do the  last scan.  [Dev Only]
7453
Provides the number of buckets that were empty to evaluate LRU-k during the last scan.  [Dev Only]
7455
Provides the raw ID range from the approximate index covered during last scan.  [Dev Only]
7457
Provides the scan range in seconds evaluated from the LRU-k.  [Dev Only]
7459
Provides the delta (in ms) between the first found resource during scavenge scan and the last evicted resource.  [Dev Only]
7461
Provides the number of currently super colded resources.  It is not hundred percent accurate.  [Dev Only]
7463
Provides the rate at which the engine is attempting to mark pages super  cold, for immediate eviction.  [Dev Only]
7465
Provides the rate at which the engine has successfully marked pages super  cold, for immediate eviction.  [Dev Only]
7467
Database Page History Records is the current number of database page access history records retained for supporting the LRU-K page replacment algorithm.  [Dev Only]
7469
Database Page History % Hit is the percentage of database page access history record lookups that were successful.  [Dev Only]
7471
No text
7473
Database Cache % Resident is the percentage of the database cache that are currently in the process's working set.  [Dev Only]
7475
No text
7477
Database Cache % Dehydrated is the percentage of pages in the database  cache that are currently compressed.
7479
No text
7481
Database Pages Repeatedly Read/sec is the rate that pages are read from the database file(s) into the database cache more than once a short period of time / within history tracking.  [Dev Only]
7483
Streaming Backup Pages Read/sec is the rate of database read operations performed for the purpose of streaming backups.  [Dev Only]
7485
Online Defrag Pages Read/sec is the rate of database read operations being performed by online defragmentation. [Dev Only]
7487
Online Defrag Pages Preread/sec is the rate at which database pages are read in anticipation of future use by online defragmentation.  [Dev Only]
7489
Online Defrag Pages Dirtied/sec is the rate at which online defragmentation is modifying clean database pages. [Dev Only]
7491
Pages Freed/sec is the number of pages per second that are freed from the database by the online defragmentation process [Dev Only]
7493
Data Moves/sec is the number of times per second that data is moved from one page to another by the online defragmentation process [Dev Only]
7495
Online Defrag Pages Moved/sec is the number of times per second that data is moved from one page to a new page by the online defragmentation process [Dev Only]
7497
Online Defrag Log Bytes/sec is the rate at which online defragmentation is generating log bytes.  [Dev Only]
7499
Database Maintenance Duration is the number of hours that have passed since maintenance last completed for this database.
7501
Database Maintenance Pages Read is the number of pages read by database maintenance. [Dev Only]
7503
Database Maintenance Pages Read/sec is the rate at which pages are read by database maintenance. [Dev Only]
7505
Database Maintenance Pages Zeroed is the number of pages zeroed/scrubbed by database maintenance. [Dev Only]
7507
Database Maintenance Pages Zeroed/sec is the rate at which pages are zeroed/scrubbed by database maintenance. [Dev Only]
7509
Database Maintenance Zero Ref Count LVs is the number of zero ref counted LVs deleted by database maintenance. [Dev Only]
7511
Database Maintenance Pages with Flag Deleted LVs Reclaimed  is the number of LV pages with flag deleted LVs reclaimed  by database maintenance. [Dev Only]
7513
Database Maintenance IO Reads/sec is the approximate number of Database Maintenance read IO operations generated/sec. [Dev Only]
7515
Database Maintenance IO Reads Average Bytes is the approximate average size in bytes of Database Maintenance read IO. [Dev Only]
7517
No text
7519
Database Maintenance IO Re-Reads/sec is the approximate number of Database Maintenance read IO operations for pages already cached in the buffer manager generated/sec. [Dev Only]
7521
Database Tasks Pages Referenced/sec is the rate at which background database tasks are touching database pages. [Dev Only]
7523
Database Tasks Pages Read/sec is the rate of database read operations being performed by background database tasks. [Dev Only]
7525
Database Tasks Pages Preread/sec is the rate at which database pages are read in anticipation of future use by background database tasks.  [Dev Only]
7527
Database Tasks Pages Dirtied/sec is the rate at which background database tasks are modifying clean database pages. [Dev Only]
7529
Database Tasks Pages Re-Dirtied/sec is the rate at which background databases tasks are modifying database pages that already contained modifications.  [Dev Only]
7531
Database Tasks Log Records/sec is the rate at which background database tasks are generating log records.  [Dev Only]
7533
Database Tasks Average Log Bytes is the average size of the log records being generated by background database tasks.  [Dev Only]
7535
No text
7537
Database Tasks Log Bytes/sec is the rate at which background database tasks are generating log bytes.  [Dev Only]
7539
I/O Database Reads (Attached)/sec is the rate of database read operations completed.
7541
I/O Database Reads (Attached) Average Latency is the average length of time,  in milliseconds, per database read operation.
7543
No text
7545
I/O Database Reads (Attached) Average Bytes is the average number of bytes transferred per database read operation.  [Dev Only]
7547
No text
7549
I/O Database Reads (Attached) In Heap is the number of database read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
7551
I/O Database Reads (Attached) Async Pending is the number of database read operations asynchronously pending completion.  [Dev Only]
7553
I/O Database Reads (Recovery)/sec is the rate of database read operations completed.
7555
I/O Database Reads (Recovery) Average Latency is the average length of time,  in milliseconds, per database read operation.
7557
No text
7559
I/O Database Reads (Recovery) Average Bytes is the average number of bytes transferred per database read operation.  [Dev Only]
7561
No text
7563
I/O Database Reads (Recovery) In Heap is the number of database read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
7565
I/O Database Reads (Recovery) Async Pending is the number of database read operations asynchronously pending completion.  [Dev Only]
7567
I/O Database Reads/sec is the rate of database read operations completed.
7569
I/O Database Reads Average Latency is the average length of time,  in milliseconds, per database read operation.
7571
No text
7573
I/O Database Reads Average Bytes is the average number of bytes transferred per database read operation.  [Dev Only]
7575
No text
7577
I/O Database Reads In Heap is the number of database read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
7579
I/O Database Reads Async Pending is the number of database read operations asynchronously pending completion.  [Dev Only]
7581
I/O Log Reads/sec is the rate of logfile read operations completed.
7583
I/O Log Reads Average Latency is the average length of time, in milliseconds, per logfile read operation.
7585
No text
7587
I/O Log Reads Average Bytes is the average number of bytes transferred per logfile read operation.  [Dev Only]
7589
No text
7591
I/O Log Reads In Heap is the number of logfile read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
7593
I/O Log Reads Async Pending is the number of logfile read operations asynchronously pending completion.  [Dev Only]
7595
I/O Database Writes (Attached)/sec is the rate of database write operations completed.
7597
I/O Database Writes (Attached) Average Latency is the average length of time,  in milliseconds, per database write operation.
7599
No text
7601
I/O Database Writes (Attached) Average Bytes is the average number of bytes transferred per database write operation.  [Dev Only]
7603
No text
7605
I/O Database Writes (Attached) In Heap is the number of database write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
7607
I/O Database Writes (Attached) Async Pending is the number of database write operations asynchronously pending completion.  [Dev Only]
7609
I/O Database Writes (Recovery)/sec is the rate of database write operations completed.
7611
I/O Database Writes (Recovery) Average Latency is the average length of time,  in milliseconds, per database write operation.
7613
No text
7615
I/O Database Writes (Recovery) Average Bytes is the average number of bytes transferred per database write operation.  [Dev Only]
7617
No text
7619
I/O Database Writes (Recovery) In Heap is the number of database write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
7621
I/O Database Writes (Recovery) Async Pending is the number of database write operations asynchronously pending completion.  [Dev Only]
7623
I/O Database Writes/sec is the rate of database write operations completed.
7625
I/O Database Writes Average Latency is the average length of time,  in milliseconds, per database write operation.
7627
No text
7629
I/O Database Writes Average Bytes is the average number of bytes transferred per database write operation.  [Dev Only]
7631
No text
7633
I/O Database Writes In Heap is the number of database write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
7635
I/O Database Writes Async Pending is the number of database write operations asynchronously pending completion.  [Dev Only]
7637
I/O Flush Map Writes/sec is the rate of flush map write operations completed.
7639
I/O Flush Map Writes Average Latency is the average length of time,  in milliseconds, per flush map write operation.
7641
No text
7643
I/O Flush Map Writes Average Bytes is the average number of bytes transferred per flush map write operation.  [Dev Only]
7645
No text
7647
I/O Log Writes/sec is the rate of log file write operations completed.
7649
I/O Log Writes Average Latency is the average length of time, in milliseconds, per log file write operation.
7651
No text
7653
I/O Log Writes Average Bytes is the average number of bytes transferred per logfile write operation.  [Dev Only]
7655
No text
7657
I/O Log Writes In Heap is the number of logfile write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
7659
I/O Log Writes Async Pending is the number of logfile write operations asynchronously pending completion.  [Dev Only]
7661
FlushFileBuffers ops/sec is the rate of FlushFileBuffers operations completed.  [Dev Only]
7663
FlushFileBuffers Average Latency is the average length of time, in milliseconds, per FlushFileBuffers operation.  [Dev Only]
7665
No text
7667
Threads Blocked/sec is the rate at which the execution of threads are suspended to wait for a specific event to occur or for the acquisition of a resource currently owned by another thread. [Dev Only]
7669
Threads Blocked is the current number of threads whose execution has been suspended to wait for a specific event to occur or for the acquisition of a resource currently owned by another thread. [Dev Only]
7671
Encryption Bytes/sec is the number of bytes per second that were encrypted.  [Dev Only]
7673
Encryption Ops/sec is the number of encryption operations per second that were performed.  [Dev Only]
7675
Encryption average latency (us) is the average latency (in microseconds) per encryption operation.  [Dev Only]
7677
No text
7679
Decryption Bytes/sec is the number of bytes per second that were decrypted.  [Dev Only]
7681
Decryption Ops/sec is the number of decryption operations per second that were performed.  [Dev Only]
7683
Decryption average latency (us) is the average latency (in microseconds) per decryption operation.  [Dev Only]
7685
No text
7687
Pages Reorganized (Other)/sec is the number of times per second a page was reorganized for some other / unknown reason.  [Dev Only]
7689
Pages Reorganized (Free Space Request)/sec is the number of times per second a page was reorganized due to a free space request that could not be satisfied by the existing contiguous space on the page.  [Dev Only]
7691
Pages Reorganized (Page Move Logging)/sec is the number of times per second a page was reorganized for minimizing a page size for logging page move.  [Dev Only]
7693
Pages Reorganized (Dehydrate Buffer)/sec is the number of times per second a page is reorganized to minimize our in-memory buffer usage.  [Dev Only]
7695
Program Marker is a generic marker that may be set by some clients to delimit program execution, usually for debugging or testing purposes. [Dev Only]
7697
Database Cache Miss (Attached) Average Latency is the average length of time, in milliseconds, per page cache miss that is satisfied by waiting for a database read operation to be completed.
7699
No text
7701
Database Cache Size Unused is the amount of system memory used by the database cache manager to hold information from the database file(s) that may be used in the near future but that hasnt yet been referenced.  [Dev Only]
7703
Statistics for the ESE high performance embedded database management system by Table Class.
7705
Record Inserts/sec is the rate at which records are being inserted into database tables.  [Dev Only]
7707
Record Deletes/sec is the rate at which records in database tables are being flagged for deletion.  [Dev Only]
7709
Record Replaces/sec is the rate at which records in database tables are being updated.  [Dev Only]
7711
Record Unnecessary Replaces/sec is the rate at which updates to records in database tables are being discarded because the update did not actually modify the contents of the record.  [Dev Only]
7713
Record Redundant Replaces/sec is the rate at which records in database tables are being updated with the exact same content of the original record.  [Dev Only]
7715
Record Escrow-Updates/sec is the rate at which records in database tables are being escrow-updated.  [Dev Only]
7717
Secondary Index Inserts/sec is the rate at which entries are being inserted into indexes of database tables.  [Dev Only]
7719
Secondary Index Deletes/sec is the rate at which entries in indexes of database tables are being flagged for deletion.  [Dev Only]
7721
False Index Column Updates/sec is the number of times per second an attempt was made to update an index because an update to at least one of the indexed columns was detected, only to discover that none of the indexed columns had actually changed (and therefore no index update was actually required).  [Dev Only]
7723
False Tuple Index Column Updates/sec is the number of times per second an attempt was made to update a tuple index because an update to the tuple-indexed column was detected, only to discover that the column had not actually changed (and therefore no index update was actually required).  [Dev Only]
7725
Record Intrinsic Long-Values Updated/sec is the rate at which intrinsic long-values are added to or replaced in records of database tables.  [Dev Only]
7727
Record Separated Long-Values Added/sec is the rate at which separated long-values are normally added to records of database tables.  [Dev Only]
7729
Record Separated Long-Values Forced/sec is the rate at which separated long-values are added to records of a database table because they could not be accommodated in the record itself.  [Dev Only]
7731
Record Separated Long-Values All Forced/sec is the rate at which all intrinsic long-values are separated out of a record of a database table in order to accommodate updates to the record.  [Dev Only]
7733
Record Separated Long-Values Reference All/sec is the rate at which a reference is added for all the separated long-values associated with a record of a database table.  [Dev Only]
7735
Record Separated Long-Values Dereference All/sec is the rate at which a reference is removed for all the separated long-values associated with a record of a database table.  [Dev Only]
7737
Separated Long-Value Seeks/sec is the rate at which seeks for a separated long-value in a database table are performed.  [Dev Only]
7739
Separated Long-Value Retrieves/sec is the rate at which retrievals of a separated long-value in a database table are performed.  [Dev Only]
7741
Separated Long-Value Creates/sec is the rate at which new separated long-values are added to a database table.  [Dev Only]
7743
Long-Value Maximum LID is the largest LID that has been used by the database engine for this table class.  [Dev Only]
7745
Separated Long-Value Updates/sec is the rate at which existing separated long-values in a database table are modified.  [Dev Only]
7747
Separated Long-Value Deletes/sec is the rate at which separated long-values in a database table are flagged for deletion.  [Dev Only]
7749
Separated Long-Value Copies/sec is the rate at which existing separated long-values in a database table are copied.  [Dev Only]
7751
Separated Long-Value Chunk Seeks/sec is the rate at which seeks for a particular chunk of a separated long-value in a database table are performed.  [Dev Only]
7753
Separated Long-Value Chunk Retrieves/sec is the rate at which retrievals of a chunk of a separated long-value in a database table are performed.  [Dev Only]
7755
Separated Long-Value Chunk Appends/sec is the rate at which chunks are appended to separated long-values of database tables.  [Dev Only]
7757
Separated Long-Value Chunk Replaces/sec is the rate at which existing separated long-value chunks in a database table are replaced.  [Dev Only]
7759
Separated Long-Value Chunk Deletes/sec is the rate at which separated long-value chunks in a database table are flagged for deletion.  [Dev Only]
7761
Separated Long-Value Chunk Copies/sec is the rate at which existing separated long-value chunks in a database table are copied.  [Dev Only]
7763
B+ Tree Append Splits/sec is the count of times a page is appended to a database B+ Tree per second.  [Dev Only]
7765
B+ Tree Right Splits/sec is the count of times a page is split right in a database B+ Tree per second.  [Dev Only]
7767
B+ Tree Right Hotpoint Splits/sec is the count of times a page is split right in a database B+ Tree, but which is treated as an append at a local "hotpoint" in the B+ Tree per second.  [Dev Only]
7769
B+ Tree Vertical Splits/sec is the count of times a page is split vertically in a database B+ Tree per second.  [Dev Only]
7771
B+ Tree Splits/sec is the count of times a page is appended to or split in a database B+ Tree per second.  [Dev Only]
7773
B+ Tree Empty Page Merges/sec is the count of empty pages removed from a database B+ Tree per second.  [Dev Only]
7775
Right Merges/sec is the count of pages removed from a database B+ Tree per second by moving all its records to the next page to the right.  [Dev Only]
7777
B+ Tree Partial Merges/sec is the count of pages where some of its records are moved to a page on the right in a database B+ Tree per second.  [Dev Only]
7779
B+ Tree Left Merges/sec is the count of pages removed from a database B+ Tree per second by moving all its records to the previous page to the left.  [Dev Only]
7781
B+ Tree Partial Left Merges/sec is the count of pages where some of its records are moved to a page on the left in a database B+ Tree per second.  [Dev Only]
7783
B+ Tree Page Moves/sec is the count of B+ Tree pages per second where all the records are moved to a new page. [Dev Only]
7785
B+ Tree Merges/sec is the count of pages merged in a database B+ Tree per second.  [Dev Only]
7787
B+ Tree Failed Simple Page Cleanup Attempts/sec is the rate that attempts to reclaim deleted node space on a page are unsuccessful due to a conflict when attempting to write-latch the page. The cleanup is re-tried by locking the root of the B+ Tree.  [Dev Only]
7789
B+ Tree Seek Short Circuits/sec is the count of repeated seeks to the same record in a database B+ Tree that are saved by jumping directly to the cached physical location of that record per second.  [Dev Only]
7791
B+ Tree Opportune Prereads/sec is the number of pages per second that are preread because they are adjacent to a page read by a seek.  [Dev Only]
7793
B+ Tree Unnecessary Sibling Latches/sec is the count of sibling pages latched during a database B+ Tree Delete in the hopes of performing a merge where a merge is not possible, making that latch unnecessary.  [Dev Only]
7795
B+ Tree Move Nexts/sec is the count of times the database engine moves to the next record in a B+ Tree per second.  [Dev Only]
7797
B+ Tree Move Nexts (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the next visible record in a B+ Tree per second.  [Dev Only]
7799
B+ Tree Move Nexts (Nodes Filtered)/sec is the count of times the database engine filters records while attempting to move to the next record in a B+ Tree per second.  [Dev Only]
7801
B+ Tree Move Prevs/sec is the count of times the database engine moves to the previous record in a B+ Tree per second.  [Dev Only]
7803
B+ Tree Move Prevs (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the previous visible record in a B+ Tree per second.  [Dev Only]
7805
B+ Tree Move Prevs (Nodes Filtered)/sec is the count of times the database engine filters records while attempting to move to the previous record in a B+ Tree per second.  [Dev Only]
7807
B+ Tree Seeks/sec is the count of times a record is seeked to by a key in a database B+ Tree per second.  [Dev Only]
7809
B+ Tree Inserts/sec is the count of times a record is inserted in a database B+ Tree per second.  [Dev Only]
7811
B+ Tree Replaces/sec is the count of times a record is replaced in a database B+ Tree per second.  [Dev Only]
7813
B+ Tree Flag Deletes/sec is the count of times a record is flag deleted in a database B+ Tree per second.  [Dev Only]
7815
B+ Tree Deletes/sec is the count of times a record is deleted in a database B+ Tree per second.  [Dev Only]
7817
B+ Tree Appends/sec is the count of times a record is appended to a database B+ Tree per second.  [Dev Only]
7819
Database Pages Preread Untouched/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache that were subsequently thrown out without being used. This is non-ideal behavior that represents a waste of I/O bandwidth and processing time .  [Dev Only]
7821
Database Page Evictions (k=1)/sec is the rate that database file pages are evicted that were of limited usefulness (k=1 pool).  [Dev Only]
7823
Database Page Evictions (k=2)/sec is the rate that database file pages are evicted that were of high usefulness (k=2 pool).  [Dev Only]
7825
Database Page Evictions (Scavenging.AvailPool)/sec is the rate at which cached pages are evicted during scavenging to replenish the pool of available buffers.  [Dev Only]
7827
Database Page Evictions (Scavenging.Shrink)/sec is the rate that cached pages are evicted during scavenging due to the database cache shrinking.  [Dev Only]
7829
Database Page Evictions (Other)/sec is the rate that cached pages are evicted due to do-time page patching or purging a cached context / database or individual pages at runtime.  [Dev Only]
7831
Database Cache Size (MB) is the amount of system memory (in megabytes) used by the database cache manager to hold commonly used information from the database file(s) to prevent file operations.  If the database cache size seems to be too small for optimal performance and there is very little available memory on the system (see Memory/Available Bytes), adding more memory to the system may increase performance.  If there is a lot of available memory on the system and the database cache size is not growing beyond a certain point, the database cache size may be capped at an artificially low limit.  Increasing this limit may increase performance.
7833
Database Cache Size is the amount of system memory used by the database cache manager to hold commonly used information from the database file(s) to prevent file operations.  If the database cache size seems to be too small for optimal performance and there is very little available memory on the system (see Memory/Available Bytes), adding more memory to the system may increase performance.  If there is a lot of available memory on the system and the database cache size is not growing beyond a certain point, the database cache size may be capped at an artificially low limit.  Increasing this limit may increase performance.
7835
Database Cache Misses per second is the rate at which database file page requests were fulfilled by the database cache by causing a file operation.  If this rate is high, then the database cache size may be too small.
7837
Database Cache % Hit is the percentage of database file page requests that were fulfilled by the database cache without causing a file operation.  If this percentage is too low, the database cache size may be too small.
7839
No text
7841
Database Cache % Hit (Unique) is the percentage of unique  database file page requests that were fulfilled by the database cache.
7843
No text
7845
Database Cache Requests/sec (Unique) is the rate at which unique pages are requested from the database cache.
7847
Database Cache Requests/sec is the rate that pages are requested from the database cache.
7849
Database Pages Read Async/sec is the rate that pages are asynchronously read from the database file(s) into the database cache.  [Dev Only]
7851
Database Pages Read Sync/sec is the rate that pages are synchronously read from the database file(s) into the database cache.  [Dev Only]
7853
Database Pages Dirtied/sec is the rate that pages are dirtied in the database cache.  [Dev Only]
7855
Database Pages Dirtied (Repeatedly)/sec is the rate that pages are  repeatedly dirtied / redirtied in the database cache.  [Dev Only]
7857
Database Pages Written/sec is the rate that pages are written to the database file(s) from the database cache.  [Dev Only]
7859
Database Pages Transferred/sec is the rate that pages are transferred from the database file(s) to the database cache and vice versa.  [Dev Only]
7861
Database Pages Colded (Ext) per second is the rate at which database pages are deprioritized by sub-components other than the buffer manager to send  for early eviction.  [Dev Only]
7863
Database Pages Colded (Int) per second is the rate at which database pages are deprioritized by the buffer manager itself to maintain minimal  cache usage.  [Dev Only]
7865
Database Pages Preread/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache.  [Dev Only]
7867
Database Page Preread Stalls/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache but did not complete preread before intended use.  [Dev Only]
7869
Database Pages Preread (Unnecessary)/sec is the rate that pages are  requested in anticipation of future use but that are already cached by the database cache.  [Dev Only]
7871
Database Pages Dehydrated/sec is the rate that pages are compressed to memory usage in the buffer manager. [Dev Only]
7873
Database Pages Rehydrated/sec is the rate that pages are uncompressed for active usage or flushing to the database. [Dev Only]
7875
Database Pages Versioned/sec is the rate at which pages in the database cache are being copied into new pages in the cache for the purpose of being asynchronously written while the current version of that page in the database file is still being modified.  This feature is primarily used to avoid cycles, branches, or long chains of flush order dependencies without requiring the pages involved to be synchronously written to disk.  [Dev Only]
7877
Database Pages Version Copied/sec is the rate at which pages in the database cache are being copied into new pages in the cache for the purpose of being asynchronously written while the current version of that page in the database file is still being modified.  This feature is primarily used to avoid cycles, branches, or long chains of flush order dependencies without requiring the pages involved to be synchronously written to disk.  [Dev Only]
7879
Database Pages Repeatedly Written/sec is the rate that pages are written to the database file(s) from the database cache more than once in their lifetime in the cache.  These page writes represent extra writes above the theoretical minimum and can therefore be considered overhead.  [Dev Only]
7881
Database Pages Flushed (Scavenging.Shrink)/sec is the rate that pages are written to the database file(s) from the database cache during scavenging because the cache size  must shrink.  [Dev Only]
7883
Database Pages Flushed (Checkpoint)/sec is the rate that pages are written to the database file(s) from the database cache to keep the checkpoint depth down to configured levels.  [Dev Only]
7885
Database Pages Flushed (Checkpoint Foreground)/sec is the rate that pages are written to the database file(s) from the database cache to keep the checkpoint depth down to configured levels.  [Dev Only]
7887
Database Pages Flushed (Context Flush)/sec is the rate that pages are written to the database file(s) from the database cache due to a requested flush of a buffer context.  [Dev Only]
7889
Database Pages Flushed (Filthy Foreground)/sec is the rate that pages are written to the database file(s) from the database cache because they are marked for filthy / immediate flush.  [Dev Only]
7891
Database Pages Flushed (Scavenging.AvailPool)/sec is the rate at which pages are written to the database file(s) from the database cache during scavenging to replenish the pool of available buffers.  [Dev Only]
7893
Database Pages Flushed Opportunely/sec is the rate that pages are written to the database file(s) from the database cache because they happen to be near other pages that must be written.  These additional writes are performed before they must happen in the hope that the total number of IOs required to write all the pages is reduced.  [Dev Only]
7895
Database Pages Flushed Opportunely Clean/sec is the rate that clean pages are opportunely written to the database file(s) from the database  cache because they happen to be betweeen two other pages that must  be written.  These additional writes are performed in the hope that the total number of IOs required to write all the dirty pages is reduced.  [Dev Only]
7897
Database Pages Coalesced Written/sec is the rate that pages are written to the database file(s) from the database cache coalesced with another page. [Dev Only]
7899
Database Pages Coalesced Read/sec is the rate that pages are read from the database file(s) to the database cache coalesced with another page. [Dev Only]
7901
Database Pages Repeatedly Read/sec is the rate that pages are read from the database file(s) into the database cache more than once a short period of time / within history tracking.  [Dev Only]
7903
FCB Async Scan/sec is the number of cached schema records (FCBs) scanned during asynchronous schema record cleanup. These records are scanned to age out older schema definitions. [Dev Only]
7905
FCB Async Purge/sec is the number of cached schema records (FCBs) purged during asynchronous schema record cleanup. These records are purged to age out older schema definitions. [Dev Only]
7907
FCB Async Threshold Purge Failures/sec is the number of failed purge attempts on cached schema records (FCBs) during asynchronous schema record cleanup.  [Dev Only]
7909
Table Open Pages Read/sec is the number of database pages read without using cached schema information per second.  If this rate is too high, the table cache size may be too small. [Dev Only]
7911
Table Open Pages Preread/sec is the number of database pages pre-read without using cached schema information per second.  If this rate is too high, the table cache size may be too small. [Dev Only]
7913
Database Cache Miss (Attached) Average Latency is the average length of time, in milliseconds, per page cache miss that is satisfied by waiting for a database read operation to be completed.
7915
No text
7917
Database Cache Size Unused is the amount of system memory used by the database cache manager to hold information from the database file(s) that may be used in the near future but that hasnt yet been referenced.  [Dev Only]
7919
Encryption Bytes/sec is the number of bytes per second that were encrypted.  [Dev Only]
7921
Encryption Ops/sec is the number of encryption operations per second that were performed.  [Dev Only]
7923
Encryption average latency (us) is the average latency (in microseconds) per encryption operation.  [Dev Only]
7925
No text
7927
Decryption Bytes/sec is the number of bytes per second that were decrypted.  [Dev Only]
7929
Decryption Ops/sec is the number of decryption operations per second that were performed.  [Dev Only]
7931
Decryption average latency (us) is the average latency (in microseconds) per decryption operation.  [Dev Only]
7933
No text
7935
Instances in this process
7937
Defragmentation Tasks is the count of background database defragmentation tasks that are currently executing.
7939
Defragmentation Tasks Pending is the count of background database defragmentation tasks that are currently pending.
7941
Defragmentation Tasks Postponed is the count of background database defragmentation tasks that could not be registered for imminent execution, and have been persisted in a table for later execution. [Dev Only]
7943
Defragmentation Tasks Scheduled/sec is the number of background database defragmentation tasks scheduled for execution per second. [Dev Only]
7945
Defragmentation Tasks Completed/sec is the number of background database defragmentation tasks completing execution per second. [Dev Only]
7947
FCB Async Scan/sec is the number of cached schema records (FCBs) scanned during asynchronous schema record cleanup. These records are scanned to age out older schema definitions. [Dev Only]
7949
FCB Async Purge/sec is the number of cached schema records (FCBs) purged during asynchronous schema record cleanup. These records are purged to age out older schema definitions. [Dev Only]
7951
FCB Async Threshold Purge Failures/sec is the number of failed purge attempts on cached schema records (FCBs) during asynchronous schema record cleanup.  [Dev Only]
7953
FCB Sync Purge/sec is the number of cached schema records (FCBs) being synchronously purged each second.  [Dev Only]
7955
FCB Sync Purge Stalls/sec is the number of stalls encountered while waiting for exclusive ownership of cached schema records (FCBs) in order to synchronously purge them.  [Dev Only]
7957
FCB Allocations Wait For Version Cleanup/sec is the number of FCB allocations that must first wait for version cleanup in an attempt to free used FCBs for re-use. [Dev Only]
7959
FCB Purge On Cursor Close/sec is the number of cached schema records (FCBs) being synchronously purged when the cursor is closed (instead of leaving the schema record cached) each second.  [Dev Only]
7961
FCB Cache % Hit is the percentage of schema records (FCBs) opened directly from the schema record cache.  No file operations were required.  [Dev Only]
7963
No text
7965
FCB Cache Stalls/sec is the number of stalls encountered while waiting for exclusive ownership of cached schema records (FCBs) in order to update their reference count.  [Dev Only]
7967
FCB Cache Maximum is the absolute maximum number of the schema records (FCBs) that can exist in the cache.  [Dev Only]
7969
FCB Cache Preferred is the preferred maximum number of the schema records (FCBs) that should exist in the cache.  [Dev Only]
7971
FCB Cache Allocated is the number of cached schema records (FCBs) currently allocated.  [Dev Only]
7973
FCB Cache Allocated/sec is the number of cached schema records (FCBs) currently allocated per second.  [Dev Only]
7975
FCB Cache Available is the number of cached schema records (FCBs) currently allocated but not in use.  These records will be used and/or purged as required.  [Dev Only]
7977
FCB Cache Allocations Failed is the number of schema records (FCBs) attempts that fail to allocate. [Dev Only]
7979
FCB Cache Allocation Average Latency (ms) is the average latency in allocating cached schema records (FCBs).  [Dev Only]
7981
No text
7983
FCB Attached RCEs is the number of revision control entries (RCEs)  attached to cached schema records (FCBs) [Dev Only]
7985
Sessions In Use is the number of database sessions currently open for use by client threads.
7987
Sessions % Used is the percentage of database sessions currently open for use by client threads.
7989
No text
7991
Table Open Cache % Hit is the percentage of database tables opened using cached schema information.  If this percentage is too low, the table cache size may be too small.
7993
No text
7995
Table Open Cache Hits/sec is the number of database tables opened using cached schema information per second.  If this rate is too low, the table cache size may be too small.
7997
Table Open Cache Misses/sec is the number of database tables opened without using cached schema information per second.  If this rate is too high, the table cache size may be too small.
7999
Table Open Pages Read/sec is the number of database pages read without using cached schema information per second.  If this rate is too high, the table cache size may be too small. [Dev Only]
8001
Table Open Pages Preread/sec is the number of database pages pre-read without using cached schema information per second.  If this rate is too high, the table cache size may be too small. [Dev Only]
8003
Table Opens/sec is the number of database tables opened per second.
8005
Table Closes/sec is the number of database tables closed per second.
8007
Tables Open is the number of database tables opened.
8009
Log Bytes Write per second is the rate bytes are written to the log.
8011
Log Bytes Generated per second is the rate at which data is added to the log.  This is different from Log Bytes Write per second in that each byte is generated only once whereas each byte may be written many times.
8013
Log Buffer Size is the amount of memory, in bytes, allocated for the database log buffers.  [Dev Only]
8015
Log Buffer Bytes Used is the amount of bytes in the log buffers that have not yet been flushed to the logs.  [Dev Only]
8017
Log Buffer Bytes Free is the amount of free space available in the log buffers.  [Dev Only]
8019
Log Buffer Bytes Committed is total number of committedbytes of log buffer.  [Dev Only]
8021
Log Threads Waiting is the number of threads waiting for their data to be written to the log in order to complete an update of the database.  If this number is too high, the log may be a bottleneck.
8023
Log File Size is the size, in bytes, of the database log files.  [Dev Only]
8025
Log Checkpoint Depth represents the amount of work, in bytes, that will need to be redone or undone to the database file(s) if the process crashes.  [Dev Only]
8027
Log Generation Checkpoint Depth represents the amount of work, in count of log files, that will need to be redone or undone to the database file(s) if the process crashes.
8029
Log Generation Database Consistency Depth represents the amount of work, in count of log files, that will need to be redone or undone to the database file(s) if the process crashes and rebuilding the associated persisted flush map(s) is not required. [Dev Only]
8031
Log Checkpoint Maintenance Outstanding IO Max represents how aggressive, in terms of outstanding IOs, the database engine will be to maintain the preferred checkpoint. This is a function of how far the checkpoint has fallen behind. [Dev Only]
8033
Log Generation Checkpoint Depth Target represents the ideal target for the amount of work, in number of log files, that may be redone or undone to the database file(s) if the process crashes.
8035
Log Checkpoint Depth as a % of Target is an expression of the current checkpoint depth in terms of a percentage of the checkpoint depth target.  For example, if the current checkpoint depth is 5 generations and the checkpoint depth target is 4 generations then this will be reported as 125% of target.
8037
No text
8039
Log Generation Checkpoint Depth Max represents the maximum allowable amount of work, in number of log files, that may be redone or undone to the database file(s) if the process crashes.
8041
Log Generation Loss Resiliency Depth represents the amount of work, in number of log files, that may be lost while still allowing the database file(s) to recover (with data loss) if the process crashes.
8043
Log Files Generated represents the total number of log files generated by an instance since that instance was last initialized.
8045
Log Files Generated Prematurely represents the total number of log files generated by an instance since that instance was last initialized and that have not been entirely filled with useful data.  Under certain conditions the database engine will choose to switch to a new log file before it has been completely filled with useful data.
8047
Log File Current Generation gives the generation number of the current log file of an instance.
8049
User Read Only Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that do not modify any data stored in the database engine.  [Dev Only]
8051
User Read/Write Transaction Commits to Level 0 (Durable)/sec is the count of fully committed transactions started by the calling process that modify data stored in the database engine.  [Dev Only]
8053
User Read/Write Transaction Commits to Level 0 (Lazy)/sec is the count of transactions started by the calling process and committed to log buffer.  [Dev Only]
8055
User Wait All Transaction Commits/sec is the count of signals to flush all pending transactions started by the calling process that modify data stored in the database engine.  [Dev Only]
8057
User Wait Last Transaction Commits/sec is the count of signals to flush a specific sessions pending transactions.  [Dev Only]
8059
User Transaction Commits to Level 0/sec is the count of fully committed transactions started by the calling process that access data stored in the database engine.  [Dev Only]
8061
User Read Only Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that do not modify any data stored in the database engine.  [Dev Only]
8063
User Read/Write Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that modify data stored in the database engine.  [Dev Only]
8065
User Transaction Rollbacks to Level 0/sec is the count of aborted transactions started by the calling process that access data stored in the database engine.  [Dev Only]
8067
System Read Only Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that do not modify any data stored in the database engine.  [Dev Only]
8069
System Read/Write Transaction Commits to Level 0 (Durable)/sec is the count of fully committed transactions started internally that modify data stored in the database engine.  [Dev Only]
8071
System Read/Write Transaction Commits to Level 0 (Lazy)/sec is the count of internal transactions committed to log buffer.  [Dev Only]
8073
System Transaction Commits to Level 0/sec is the count of fully committed transactions started internally that access data stored in the database engine.  [Dev Only]
8075
System Read Only Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that do not modify any data stored in the database engine.  [Dev Only]
8077
System Read/Write Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that modify data stored in the database engine.  [Dev Only]
8079
System Transaction Rollbacks to Level 0/sec is the count of aborted transactions started internally that access data stored in the database engine.  [Dev Only]
8081
Recovery Stalls for Read-only Transactions/sec is the number of times per second recovery had to pause to allow an older read-only transaction to complete.  [Dev Only]
8083
Recovery Long Stalls for Read-only Transactions/sec is the number of times per second recovery had to pause for an extended time to allow an older read-only transaction to complete.  [Dev Only]
8085
Recovery Stalls for Read-only Transactions (ms)/sec is the amount of time (in milliseconds per second) recovery had to pause to allow an older read-only transaction to complete.  [Dev Only]
8087
Recovery Throttles For IO Smoothing/sec is the number of times per second recovery had to pause to not recover a file faster than it was generated.  [Dev Only]
8089
Recovery Throttles For IO Smoothing Time (ms)/sec is the amount of time (in milliseconds per second) recovery had to pause to not recover a file faster than it was generated.  [Dev Only]
8091
Database Page Allocation File Extension Stalls/sec is the rate of page allocations from a database file that must be serviced by extending the database file and which stall when doing so.  [Dev Only]
8093
Log Records/sec is the count of records written to the database log buffers per second.  [Dev Only]
8095
Log Buffer Capacity Writes/sec is the count of times the database log buffers must be written per second because they are full.  [Dev Only]
8097
Log Buffer Commit Writes/sec is the count of times the database log buffers must be written per second because a transaction is fully committing its changes.  [Dev Only]
8099
Log Buffer Writes Skipped/sec is the count of times the database log buffers were intended to be written, but we skipped it due to the  desired log data already having been written.  [Dev Only]
8101
Log Buffer Writes Blocked/sec is the count of times the database log buffers were intended to be written, but we skipped it due to the  log buffer being locked for and being written by another thread.  [Dev Only]
8103
Log Writes/sec is the number of times the log buffers are written to the log file(s) per second.  If this number approaches the maximum write rate for the media holding the log file(s), the log may be a bottleneck.
8105
Log Full Segment Writes/sec is the number of times full log segments are written to the log file(s) per second.  [Dev Only]
8107
Log Partial Segment Writes/sec is the number of times that a log segment that is only partially full of data is written to the log file(s) per second.  [Dev Only]
8109
Log Bytes Wasted/sec is the number of bytes wasted by not reusing a partially written sector (and instead fill it up with NOPs). [Dev Only]
8111
Log Record Stalls/sec is the number of log records that cannot be added to the log buffers per second because they are full.  If this counter is non-zero most of the time, the log buffer size may be a bottleneck.
8113
Total number of version buckets allocated
8115
Total number of version buckets allocated for FlagDelete RCEs  [Dev Only]
8117
VER Bucket Allocations Wait For Version Cleanup/sec is the number of version bucket allocations that must first wait for version cleanup in an attempt to free used version buckets  for re-use. [Dev Only]
8119
Average length of bookmark in RCE  [Dev Only]
8121
Number of times per second we look in the version store for a node whose version bit is set but which has no versions  [Dev Only]
8123
Number of times per second a version store clean task is dispatched asynchronously to be performed  [Dev Only]
8125
Number of times per second a version store clean task is performed synchronously  [Dev Only]
8127
Number of times per second a version store clean task was discarded due to load concerns  [Dev Only]
8129
Number of times per second a dispatched version store cleanup task fails  [Dev Only]
8131
Record Inserts/sec is the rate at which records are being inserted into database tables.  [Dev Only]
8133
Record Deletes/sec is the rate at which records in database tables are being flagged for deletion.  [Dev Only]
8135
Record Replaces/sec is the rate at which records in database tables are being updated.  [Dev Only]
8137
Record Unnecessary Replaces/sec is the rate at which updates to records in database tables are being discarded because the update did not actually modify the contents of the record.  [Dev Only]
8139
Record Redundant Replaces/sec is the rate at which records in database tables are being updated with the exact same content of the original record.  [Dev Only]
8141
Record Escrow-Updates/sec is the rate at which records in database tables are being escrow-updated.  [Dev Only]
8143
Secondary Index Inserts/sec is the rate at which entries are being inserted into indexes of database tables.  [Dev Only]
8145
Secondary Index Deletes/sec is the rate at which entries in indexes of database tables are being flagged for deletion.  [Dev Only]
8147
False Index Column Updates/sec is the number of times per second an attempt was made to update an index because an update to at least one of the indexed columns was detected, only to discover that none of the indexed columns had actually changed (and therefore no index update was actually required).  [Dev Only]
8149
False Tuple Index Column Updates/sec is the number of times per second an attempt was made to update a tuple index because an update to the tuple-indexed column was detected, only to discover that the column had not actually changed (and therefore no index update was actually required).  [Dev Only]
8151
Record Intrinsic Long-Values Updated/sec is the rate at which intrinsic long-values are added to or replaced in records of database tables.  [Dev Only]
8153
Record Separated Long-Values Added/sec is the rate at which separated long-values are normally added to records of database tables.  [Dev Only]
8155
Record Separated Long-Values Forced/sec is the rate at which separated long-values are added to records of a database table because they could not be accommodated in the record itself.  [Dev Only]
8157
Record Separated Long-Values All Forced/sec is the rate at which all intrinsic long-values are separated out of a record of a database table in order to accommodate updates to the record.  [Dev Only]
8159
Record Separated Long-Values Reference All/sec is the rate at which a reference is added for all the separated long-values associated with a record of a database table.  [Dev Only]
8161
Record Separated Long-Values Dereference All/sec is the rate at which a reference is removed for all the separated long-values associated with a record of a database table.  [Dev Only]
8163
Separated Long-Value Seeks/sec is the rate at which seeks for a separated long-value in a database table are performed.  [Dev Only]
8165
Separated Long-Value Retrieves/sec is the rate at which retrievals of a separated long-value in a database table are performed.  [Dev Only]
8167
Separated Long-Value Creates/sec is the rate at which new separated long-values are added to a database table.  [Dev Only]
8169
Long-Value Maximum LID is the largest LID that has been used by the database engine for this instance.  [Dev Only]
8171
Separated Long-Value Updates/sec is the rate at which existing separated long-values in a database table are modified.  [Dev Only]
8173
Separated Long-Value Deletes/sec is the rate at which separated long-values in a database table are flagged for deletion.  [Dev Only]
8175
Separated Long-Value Copies/sec is the rate at which existing separated long-values in a database table are copied.  [Dev Only]
8177
Separated Long-Value Chunk Seeks/sec is the rate at which seeks for a particular chunk of a separated long-value in a database table are performed.  [Dev Only]
8179
Separated Long-Value Chunk Retrieves/sec is the rate at which retrievals of a chunk of a separated long-value in a database table are performed.  [Dev Only]
8181
Separated Long-Value Chunk Appends/sec is the rate at which chunks are appended to separated long-values of database tables.  [Dev Only]
8183
Separated Long-Value Chunk Replaces/sec is the rate at which existing separated long-value chunks in a database table are replaced.  [Dev Only]
8185
Separated Long-Value Chunk Deletes/sec is the rate at which separated long-value chunks in a database table are flagged for deletion.  [Dev Only]
8187
Separated Long-Value Chunk Copies/sec is the rate at which existing separated long-value chunks in a database table are copied.  [Dev Only]
8189
B+ Tree Append Splits/sec is the count of times a page is appended to a database B+ Tree per second.  [Dev Only]
8191
B+ Tree Right Splits/sec is the count of times a page is split right in a database B+ Tree per second.  [Dev Only]
8193
B+ Tree Right Hotpoint Splits/sec is the count of times a page is split right in a database B+ Tree, but which is treated as an append at a local "hotpoint" in the B+ Tree per second.  [Dev Only]
8195
B+ Tree Vertical Splits/sec is the count of times a page is split vertically in a database B+ Tree per second.  [Dev Only]
8197
B+ Tree Splits/sec is the count of times a page is appended to or split in a database B+ Tree per second.  [Dev Only]
8199
B+ Tree Empty Page Merges/sec is the count of empty pages removed from a database B+ Tree per second.  [Dev Only]
8201
Right Merges/sec is the count of pages removed from a database B+ Tree per second by moving all its records to the next page to the right.  [Dev Only]
8203
B+ Tree Partial Merges/sec is the count of pages where some of its records are moved to a page on the right in a database B+ Tree per second.  [Dev Only]
8205
B+ Tree Left Merges/sec is the count of pages removed from a database B+ Tree per second by moving all its records to the previous page to the left.  [Dev Only]
8207
B+ Tree Partial Left Merges/sec is the count of pages where some of its records are moved to a page on the left in a database B+ Tree per second.  [Dev Only]
8209
B+ Tree Page Moves/sec is the count of B+ Tree pages per second where all the records are moved to a new page. [Dev Only]
8211
B+ Tree Merges/sec is the count of pages merged in a database B+ Tree per second.  [Dev Only]
8213
B+ Tree Failed Simple Page Cleanup Attempts/sec is the rate that attempts to reclaim deleted node space on a page are unsuccessful due to a conflict when attempting to write-latch the page. The cleanup is re-tried by locking the root of the B+ Tree.  [Dev Only]
8215
B+ Tree Seek Short Circuits/sec is the count of repeated seeks to the same record in a database B+ Tree that are saved by jumping directly to the cached physical location of that record per second.  [Dev Only]
8217
B+ Tree Opportune Prereads/sec is the number of pages per second that are preread because they are adjacent to a page read by a seek.  [Dev Only]
8219
B+ Tree Unnecessary Sibling Latches/sec is the count of sibling pages latched during a database B+ Tree Delete in the hopes of performing a merge where a merge is not possible, making that latch unnecessary.  [Dev Only]
8221
B+ Tree Move Nexts/sec is the count of times the database engine moves to the next record in a B+ Tree per second.  [Dev Only]
8223
B+ Tree Move Nexts (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the next visible record in a B+ Tree per second.  [Dev Only]
8225
B+ Tree Move Nexts (Nodes Filtered)/sec is the count of times the database engine filters records while attempting to move to the next record in a B+ Tree per second.  [Dev Only]
8227
B+ Tree Move Prevs/sec is the count of times the database engine moves to the previous record in a B+ Tree per second.  [Dev Only]
8229
B+ Tree Move Prevs (Non-Visible Nodes Skipped)/sec is the count of times the database engine skips non-visible records while attempting to move to the previous visible record in a B+ Tree per second.  [Dev Only]
8231
B+ Tree Move Prevs (Nodes Filtered)/sec is the count of times the database engine filters records while attempting to move to the previous record in a B+ Tree per second.  [Dev Only]
8233
B+ Tree Seeks/sec is the count of times a record is seeked to by a key in a database B+ Tree per second.  [Dev Only]
8235
B+ Tree Inserts/sec is the count of times a record is inserted in a database B+ Tree per second.  [Dev Only]
8237
B+ Tree Replaces/sec is the count of times a record is replaced in a database B+ Tree per second.  [Dev Only]
8239
B+ Tree Flag Deletes/sec is the count of times a record is flag deleted in a database B+ Tree per second.  [Dev Only]
8241
B+ Tree Deletes/sec is the count of times a record is deleted in a database B+ Tree per second.  [Dev Only]
8243
B+ Tree Appends/sec is the count of times a record is appended to a database B+ Tree per second.  [Dev Only]
8245
Pages Trimmed/sec is the number of database pages that are trimmed and the allocated space is released to the file system.  [Dev Only]
8247
Pages Not Trimmed Unaligned/sec is the number of database pages that are not trimmed because the trim request was not on an aligned boundary that the operating system supports. For example, if the supported trim granulariy is 64k, and the requested trim range is from (64k-1 page) to (128k+1 page), then this counter is increased by two. [Dev Only]
8249
Database Pages Preread Untouched/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache that were subsequently thrown out without being used. This is non-ideal behavior that represents a waste of I/O bandwidth and processing time.  [Dev Only]
8251
Database Page Evictions (k=1)/sec is the rate that database file pages are evicted that were of limited usefulness (k=1 pool).  [Dev Only]
8253
Database Page Evictions (k=2)/sec is the rate that database file pages are evicted that were of high usefulness (k=2 pool).  [Dev Only]
8255
Database Page Evictions (Scavenging.AvailPool)/sec is the rate at which cached pages are evicted during scavenging to replenish the pool of available buffers.  [Dev Only]
8257
Database Page Evictions (Scavenging.Shrink)/sec is the rate that cached pages are evicted during scavenging due to the database cache shrinking.  [Dev Only]
8259
Database Page Evictions (Other)/sec is the rate that cached pages are evicted due to do-time page patching or purging a cached context / database or individual pages at runtime.  [Dev Only]
8261
Database Cache Size (MB) is the amount of system memory (in megabytes) used by the database cache manager to hold commonly used information from the database file(s) to prevent file operations.  If the database cache size seems to be too small for optimal performance and there is very little available memory on the system (see Memory/Available Bytes), adding more memory to the system may increase performance.  If there is a lot of available memory on the system and the database cache size is not growing beyond a certain point, the database cache size may be capped at an artificially low limit.  Increasing this limit may increase performance.
8263
Database Cache Misses per second is the rate at which database file page requests were fulfilled by the database cache by causing a file operation.  If this rate is high, then the database cache size may be too small.
8265
Database Cache % Hit is the percentage of database file page requests that were fulfilled by the database cache without causing a file operation.  If this percentage is too low, the database cache size may be too small.
8267
No text
8269
Database Cache % Hit (Unique) is the percentage of unique  database file page requests that were fulfilled by the database cache.
8271
No text
8273
Database Cache Requests/sec (Unique) is the rate at which unique pages are requested from the database cache.
8275
Database Cache Requests/sec is the rate that pages are requested from the database cache.
8277
Instance Status indicates the current runtime state of the instance. Values are 1 (recovery redo), 2 (recovery undo), 3 (runtime),  4 (shutdown), 5 (error).  [Dev Only]
8279
Database Pages Read Async/sec is the rate that pages are asynchronously read from the database file(s) into the database cache.  [Dev Only]
8281
Database Pages Read Sync/sec is the rate that pages are synchronously read from the database file(s) into the database cache.  [Dev Only]
8283
Database Pages Dirtied/sec is the rate that pages are dirtied in the database cache.  [Dev Only]
8285
Database Pages Dirtied (Repeatedly)/sec is the rate that pages are  repeatedly dirtied / redirtied in the database cache.  [Dev Only]
8287
Database Pages Written/sec is the rate that pages are written to the database file(s) from the database cache.  [Dev Only]
8289
Database Pages Transferred/sec is the rate that pages are transferred from the database file(s) to the database cache and vice versa.  [Dev Only]
8291
Database Pages Colded (Ext) per second is the rate at which database pages are deprioritized by sub-components other than the buffer manager to send  for early eviction.  [Dev Only]
8293
Database Pages Colded (Int) per second is the rate at which database pages are deprioritized by the buffer manager itself to maintain minimal  cache usage.  [Dev Only]
8295
Database Pages Preread/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache.  [Dev Only]
8297
Database Page Preread Stalls/sec is the rate that pages are read in anticipation of future use from the database file(s) into the database cache but did not complete preread before intended use.  [Dev Only]
8299
Database Pages Preread (Unnecessary)/sec is the rate that pages are  requested in anticipation of future use but that are already cached by the database cache.  [Dev Only]
8301
Database Pages Dehydrated/sec is the rate that pages are compressed to memory usage in the buffer manager. [Dev Only]
8303
Database Pages Rehydrated/sec is the rate that pages are uncompressed for active usage or flushing to the database. [Dev Only]
8305
Database Pages Versioned/sec is the rate at which pages in the database cache are being copied into new pages in the cache for the purpose of being asynchronously written while the current version of that page in the database file is still being modified.  This feature is primarily used to avoid cycles, branches, or long chains of flush order dependencies without requiring the pages involved to be synchronously written to disk.  [Dev Only]
8307
Database Pages Version Copied/sec is the rate at which pages in the database cache are being copied into new pages in the cache for the purpose of being asynchronously written while the current version of that page in the database file is still being modified.  This feature is primarily used to avoid cycles, branches, or long chains of flush order dependencies without requiring the pages involved to be synchronously written to disk.  [Dev Only]
8309
Database Pages Repeatedly Written/sec is the rate that pages are written to the database file(s) from the database cache more than once in their lifetime in the cache.  These page writes represent extra writes above the theoretical minimum and can therefore be considered overhead.  [Dev Only]
8311
Database Pages Flushed (Scavenging.Shrink)/sec is the rate that pages are written to the database file(s) from the database cache during scavenging because the cache size  must shrink.  [Dev Only]
8313
Database Pages Flushed (Checkpoint)/sec is the rate that pages are written to the database file(s) from the database cache to keep the checkpoint depth down to configured levels.  [Dev Only]
8315
Database Pages Flushed (Checkpoint Foreground)/sec is the rate that pages are written to the database file(s) from the database cache to keep the checkpoint depth down to configured levels.  [Dev Only]
8317
Database Pages Flushed (Context Flush)/sec is the rate that pages are written to the database file(s) from the database cache due to a requested flush of a buffer context.  [Dev Only]
8319
Database Pages Flushed (Filthy Foreground)/sec is the rate that pages are written to the database file(s) from the database cache because they are marked for filthy / immediate flush.  [Dev Only]
8321
Database Pages Flushed (Scavenging.AvailPool)/sec is the rate at which pages are written to the database file(s) from the database cache during scavenging to replenish the pool of available buffers.  [Dev Only]
8323
Database Pages Flushed Opportunely/sec is the rate that pages are written to the database file(s) from the database cache because they happen to be near other pages that must be written.  These additional writes are performed before they must happen in the hope that the total number of IOs required to write all the pages is reduced.  [Dev Only]
8325
Database Pages Flushed Opportunely Clean/sec is the rate that clean pages are opportunely written to the database file(s) from the database  cache because they happen to be betweeen two other pages that must  be written.  These additional writes are performed in the hope that the total number of IOs required to write all the dirty pages is reduced.  [Dev Only]
8327
Database Pages Coalesced Written/sec is the rate that pages are written to the database file(s) from the database cache coalesced with another page. [Dev Only]
8329
Database Pages Coalesced Read/sec is the rate that pages are read from the database file(s) to the database cache coalesced with another page. [Dev Only]
8331
Database Pages Repeatedly Read/sec is the rate that pages are read from the database file(s) into the database cache more than once a short period of time / within history tracking.  [Dev Only]
8333
Flush Map % Dirty is the percentage of the flush map that has been modified and not persisted since the associated database was attached.  [Dev Only]
8335
No text
8337
Flush Map Pages Written Async/sec is the rate at which flush map pages are asynchronously written to the flush map file.  [Dev Only]
8339
Flush Map Pages Written Sync/sec is the rate at which flush map pages are synchronously written to the flush map file.  [Dev Only]
8341
Streaming Backup Pages Read/sec is the rate of database read operations performed for the purpose of streaming backups.
8343
Online Defrag Pages Read/sec is the rate of database read operations being performed by online defragmentation. [Dev Only]
8345
Online Defrag Pages Preread/sec is the rate at which database pages are read in anticipation of future use by online defragmentation.  [Dev Only]
8347
Online Defrag Pages Dirtied/sec is the rate at which online defragmentation is modifying clean database pages. [Dev Only]
8349
Pages Freed/sec is the number of pages per second that are freed from the database by the online defragmentation process [Dev Only]
8351
Data Moves/sec is the number of times per second that data is moved from one page to another by the online defragmentation process [Dev Only]
8353
Online Defrag Pages Moved/sec is the number of times per second that data is moved from one page to a new page by the online defragmentation process [Dev Only]
8355
Online Defrag Log Bytes/sec is the rate at which online defragmentation is generating log bytes.  [Dev Only]
8357
Database Maintenance Duration is the number of hours that have passed since maintenance last completed for this database.
8359
Database Maintenance Pages Read is the number of pages read by database maintenance. [Dev Only]
8361
Database Maintenance Pages Read/sec is the rate at which pages are read by database maintenance. [Dev Only]
8363
Database Maintenance Pages Zeroed is the number of pages zeroed/scrubbed by database maintenance. [Dev Only]
8365
Database Maintenance Pages Zeroed/sec is the rate at which pages are zeroed/scrubbed by database maintenance. [Dev Only]
8367
Database Maintenance Zero Ref Count LVs is the number of zero ref counted LVs deleted by database maintenance. [Dev Only]
8369
Database Maintenance Pages with Flag Deleted LVs Reclaimed  is the number of LV pages with flag deleted LVs reclaimed  by database maintenance. [Dev Only]
8371
Database Maintenance IO Reads/sec is the approximate number of Database Maintenance read IO operations generated/sec. [Dev Only]
8373
Database Maintenance IO Reads Average Bytes is the approximate average size in bytes of Database Maintenance read IO. [Dev Only]
8375
No text
8377
Database Maintenance Throttle Setting is the current Database Maintenance throttle setting. [Dev Only]
8379
Database Maintenance IO Re-Reads/sec is the approximate number of Database Maintenance read IO operations for pages already cached in the buffer manager generated/sec. [Dev Only]
8381
Database Maintenance Pages Skipped by Recovery is the number of pages that were not scanned as instructed by the transaction log, typically because urgent recovery is needed.  [Dev Only]
8383
Database Maintenance Pages Skipped by Recovery/sec is the  rate at which pages instructed by the transaction log to be scanned were skipped, typically because urgent recovery is needed.  [Dev Only]
8385
Database Maintenance Pages Checked for Divergences is the number of pages that were scanned for possible divergence against the tracked scan check log records. [Dev Only]
8387
Database Maintenance Pages Checked for Divergences/sec is the rate at which pages were scanned for possible divergence against the tracked scan check log records. [Dev Only]
8389
Database Tasks Pages Referenced/sec is the rate at which background database tasks are touching database pages. [Dev Only]
8391
Database Tasks Pages Read/sec is the rate of database read operations being performed by background database tasks. [Dev Only]
8393
Database Tasks Pages Preread/sec is the rate at which database pages are read in anticipation of future use by background database tasks.  [Dev Only]
8395
Database Tasks Pages Dirtied/sec is the rate at which background database tasks are modifying clean database pages. [Dev Only]
8397
Database Tasks Pages Re-Dirtied/sec is the rate at which background databases tasks are modifying database pages that already contained modifications.  [Dev Only]
8399
Database Tasks Log Records/sec is the rate at which background database tasks are generating log records.  [Dev Only]
8401
Database Tasks Average Log Bytes is the average size of the log records being generated by background database tasks.  [Dev Only]
8403
No text
8405
Database Tasks Log Bytes/sec is the rate at which background database tasks are generating log bytes.  [Dev Only]
8407
I/O Database Reads (Attached)/sec is the rate of database read operations completed.
8409
I/O Database Reads (Attached) Average Latency is the average length of time,  in milliseconds, per database read operation.
8411
No text
8413
I/O Database Reads (Attached) Average Bytes is the average number of bytes transferred per database read operation.  [Dev Only]
8415
No text
8417
I/O Database Reads (Attached) In Heap is the number of database read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
8419
I/O Database Reads (Attached) Async Pending is the number of database read operations asynchronously pending completion.  [Dev Only]
8421
I/O Database Reads (Recovery)/sec is the rate of database read operations completed.
8423
I/O Database Reads (Recovery) Average Latency is the average length of time,  in milliseconds, per database read operation.
8425
No text
8427
I/O Database Reads (Recovery) Average Bytes is the average number of bytes transferred per database read operation.  [Dev Only]
8429
No text
8431
I/O Database Reads (Recovery) In Heap is the number of database read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
8433
I/O Database Reads (Recovery) Async Pending is the number of database read operations asynchronously pending completion.  [Dev Only]
8435
I/O Database Reads/sec is the rate of database read operations completed.
8437
I/O Database Reads Average Latency is the average length of time,  in milliseconds, per database read operation.
8439
No text
8441
I/O Database Reads Average Bytes is the average number of bytes transferred per database read operation.  [Dev Only]
8443
No text
8445
I/O Database Reads In Heap is the number of database read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
8447
I/O Database Reads Async Pending is the number of database read operations asynchronously pending completion.  [Dev Only]
8449
I/O Log Reads/sec is the rate of logfile read operations completed.
8451
I/O Log Reads Average Latency is the average length of time, in milliseconds, per logfile read operation.
8453
No text
8455
I/O Log Reads Average Bytes is the average number of bytes transferred per logfile read operation.  [Dev Only]
8457
No text
8459
I/O Log Reads In Heap is the number of logfile read operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
8461
I/O Log Reads Async Pending is the number of logfile read operations asynchronously pending completion.  [Dev Only]
8463
I/O Database Writes (Attached)/sec is the rate of database write operations completed.
8465
I/O Database Writes (Attached) Average Latency is the average length of time,  in milliseconds, per database write operation.
8467
No text
8469
I/O Database Writes (Attached) Average Bytes is the average number of bytes transferred per database write operation.  [Dev Only]
8471
No text
8473
I/O Database Writes (Attached) In Heap is the number of database write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
8475
I/O Database Writes (Attached) Async Pending is the number of database write operations asynchronously pending completion.  [Dev Only]
8477
I/O Database Writes (Recovery)/sec is the rate of database write operations completed.
8479
I/O Database Writes (Recovery) Average Latency is the average length of time,  in milliseconds, per database write operation.
8481
No text
8483
I/O Database Writes (Recovery) Average Bytes is the average number of bytes transferred per database write operation.  [Dev Only]
8485
No text
8487
I/O Database Writes (Recovery) In Heap is the number of database write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
8489
I/O Database Writes (Recovery) Async Pending is the number of database write operations asynchronously pending completion.  [Dev Only]
8491
I/O Database Writes/sec is the rate of database write operations completed.
8493
I/O Database Writes Average Latency is the average length of time,  in milliseconds, per database write operation.
8495
No text
8497
I/O Database Writes Average Bytes is the average number of bytes transferred per database write operation.  [Dev Only]
8499
No text
8501
I/O Database Writes In Heap is the number of database write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
8503
I/O Database Writes Async Pending is the number of database write operations asynchronously pending completion.  [Dev Only]
8505
I/O Flush Map Writes/sec is the rate of flush map write operations completed.
8507
I/O Flush Map Writes Average Latency is the average length of time,  in milliseconds, per flush map write operation.
8509
No text
8511
I/O Flush Map Writes Average Bytes is the average number of bytes transferred per flush map write operation.  [Dev Only]
8513
No text
8515
I/O Log Writes/sec is the rate of log file write operations completed.
8517
I/O Log Writes Average Latency is the average length of time, in milliseconds, per log file write operation.
8519
No text
8521
I/O Log Writes Average Bytes is the average number of bytes transferred per logfile write operation.  [Dev Only]
8523
No text
8525
I/O Log Writes In Heap is the number of logfile write operations queued in the database engine's I/O heap and waiting to be issued.  [Dev Only]
8527
I/O Log Writes Async Pending is the number of logfile write operations asynchronously pending completion.  [Dev Only]
8529
FlushFileBuffers ops/sec is the rate of FlushFileBuffers operations completed.  [Dev Only]
8531
FlushFileBuffers Average Latency is the average length of time, in milliseconds, per FlushFileBuffers operation.  [Dev Only]
8533
No text
8535
Encryption Bytes/sec is the number of bytes per second that were encrypted.  [Dev Only]
8537
Encryption Ops/sec is the number of encryption operations per second that were performed.  [Dev Only]
8539
encryption average latency (us) is the average latency (in microseconds) per encryption operation.  [Dev Only]
8541
No text
8543
Decryption Bytes/sec is the number of bytes per second that were decrypted.  [Dev Only]
8545
Decryption Ops/sec is the number of decryption operations per second that were performed.  [Dev Only]
8547
Decryption average latency (us) is the average latency (in microseconds) per decryption operation.  [Dev Only]
8549
No text
8551
Compressed Bytes/sec is the number of bytes per second that were compressed during DML operations.  [Dev Only]
8553
Compression Ops/sec is the number of compression operations per second that were performed during DML operations.  [Dev Only]
8555
Average latency per compression operation in microseconds.  [Dev Only]
8557
No text
8559
Compression ratio calculated as: uncompressed size / compressed size.  [Dev Only]
8561
No text
8563
Decompressed Bytes/sec is the number of bytes per second that were decompressed during DML operations.  [Dev Only]
8565
Decompression Ops/sec is the number of decompression operations per second that were performed during DML operations.  [Dev Only]
8567
Average latency per decompression operation in microseconds.  [Dev Only]
8569
No text
8571
Cpu Xpress9 Compressed Bytes/sec is the number of bytes per second that were compressed during DML operations using Xpress9 on the system cpu.  [Dev Only]
8573
Cpu Xpress9 Compression Ops/sec is the number of compression operations per second that were performed during DML operations using Xpress9 on the system cpu.  [Dev Only]
8575
Cpu Xpress9 Average latency per compression operation in microseconds.  [Dev Only]
8577
No text
8579
Cpu Xpress9 Compression ratio calculated as: uncompressed size / compressed size.  [Dev Only]
8581
No text
8583
Cpu Xpress9 Decompressed Bytes/sec is the number of bytes per second that were decompressed during DML operations using Xpress9 on the system cpu.  [Dev Only]
8585
Cpu Xpress9 Decompression Ops/sec is the number of decompression operations per second that were performed during DML operations using Xpress9 on the system cpu.  [Dev Only]
8587
Cpu Xpress9 Average latency per decompression operation in microseconds.  [Dev Only]
8589
No text
8591
Fpga Xpress9 Compressed Bytes/sec is the number of bytes per second that were compressed during DML operations using Xpress9 on the Fpga.  [Dev Only]
8593
Fpga Xpress9 Compression Ops/sec is the number of compression operations per second that were performed during DML operations using Xpress9 on the Fpga.  [Dev Only]
8595
Fpga Xpress9 Average latency per compression operation in microseconds.  [Dev Only]
8597
No text
8599
Fpga Xpress9 Compression ratio calculated as: uncompressed size / compressed size.  [Dev Only]
8601
No text
8603
Fpga Xpress9 Decompressed Bytes/sec is the number of bytes per second that were decompressed during DML operations using Xpress9 on the Fpga.  [Dev Only]
8605
Fpga Xpress9 Decompression Ops/sec is the number of decompression operations per second that were performed during DML operations using Xpress9 on the Fpga.  [Dev Only]
8607
Fpga Xpress9 Average latency per decompression operation in microseconds.  [Dev Only]
8609
No text
8611
Pages Reorganized (Other)/sec is the number of times per second a page was reorganized for some other / unknown reason.  [Dev Only]
8613
Pages Reorganized (Free Space Request)/sec is the number of times per second a page was reorganized due to a free space request that could not be satisfied by the existing contiguous space on the page.  [Dev Only]
8615
Pages Reorganized (Page Move Logging)/sec is the number of times per second a page was reorganized for minimizing a page size for logging page move.  [Dev Only]
8617
Pages Reorganized (Dehydrate Buffer)/sec is the number of times per second a page is reorganized to minimize our in-memory buffer usage.  [Dev Only]
8619
Database Cache Miss (Attached) Average Latency is the average length of time, in milliseconds, per page cache miss that is satisfied by waiting for a database read operation to be completed.
8621
No text
8623
Database Cache Size Unused is the amount of system memory used by the database cache manager to hold information from the database file(s) that may be used in the near future but that hasnt yet been referenced.  [Dev Only]
8625
Provides an estimate of the oldest running transaction by elapsed time in milliseconds.
8627
Databases attached to this process
8629
Database Cache Size (MB) is the amount of system memory, in megabytes, used by the database cache manager to hold commonly used information from the database file(s) to prevent file operations. If the database cache size seems to be too small for optimal performance, and there is very little available memory on the system (see Memory/Available Bytes), an increase of memory in the system may increase performance. If there is a large amount of available memory on the system, and the database cache size is not growing beyond a certain point, the database cache size may be capped at an artificially low limit. An increase in this limit may increase performance.
8631
I/O Database Reads/sec is the rate of database read operations completed.
8633
I/O Database Reads Average Latency is the average length of time,  in milliseconds, per database read operation.
8635
No text
8637
I/O Database Reads Average Bytes is the average number of bytes transferred per database read operation.  [Dev Only]
8639
No text
8641
I/O Database Writes/sec is the rate of database write operations completed.
8643
I/O Database Writes Average Latency is the average length of time,  in milliseconds, per database write operation.
8645
No text
8647
I/O Database Writes Average Bytes is the average number of bytes transferred per database write operation. [Dev Only]
8649
No text
8651
I/O Database Reads (Transactional) Total IO is the number of IOs accumulated   for the database read operation latency counters. [Dev Only]
8653
I/O Database Reads (Transactional) Mean Latency is the average length of time,  in microseconds, per database read operation. [Dev Only]
8655
I/O Database Reads (Transactional) 50th Pct Latency is the length of time for  the median or 50th percentile IO, in microseconds, per database read  operation. [Dev Only]
8657
I/O Database Reads (Transactional) 90th Pct Latency is the length of time for,  the 90th percentile IO, in microseconds, per database read operation. [Dev Only]
8659
I/O Database Reads (Transactional) 99th Pct Latency is the length of time for,  the 99th percentile IO, in microseconds, per database read operation. [Dev Only]
8661
I/O Database Reads (Transactional) Max Pct Latency is the length of time for,  the max or 100th percentile IO latency, in microseconds, per database read operation. [Dev Only]
8663
I/O Database Reads (Maintenance) Total IO is the number of IOs accumulated   for the database read operation latency counters. [Dev Only]
8665
I/O Database Reads (Maintenance) Mean Latency is the average length of time,  in microseconds, per database read operation. [Dev Only]
8667
I/O Database Reads (Maintenance) 50th Pct Latency is the length of time for  the median or 50th percentile IO, in microseconds, per database read  operation. [Dev Only]
8669
I/O Database Reads (Maintenance) 90th Pct Latency is the length of time for,  the 90th percentile IO, in microseconds, per database read operation. [Dev Only]
8671
I/O Database Reads (Maintenance) 99th Pct Latency is the length of time for,  the 99th percentile IO, in microseconds, per database read operation. [Dev Only]
8673
I/O Database Reads (Maintenance) Max Pct Latency is the length of time for,  the max or 100th percentile IO latency, in microseconds, per database read operation. [Dev Only]
8675
I/O Database Writes (Transactional) Total IO is the number of IOs accumulated   for the database write operation latency counters. [Dev Only]
8677
I/O Database Writes (Transactional) Mean Latency is the average length of time,  in microseconds, per database write operation. [Dev Only]
8679
I/O Database Writes (Transactional) 50th Pct Latency is the length of time for  the median or 50th percentile IO, in microseconds, per database write  operation. [Dev Only]
8681
I/O Database Writes (Transactional) 90th Pct Latency is the length of time for,  the 90th percentile IO, in microseconds, per database write operation. [Dev Only]
8683
I/O Database Writes (Transactional) 99th Pct Latency is the length of time for,  the 99th percentile IO, in microseconds, per database write operation. [Dev Only]
8685
I/O Database Writes (Transactional) Max Pct Latency is the length of time for,  the max or 100th percentile IO latency, in microseconds, per database write operation. [Dev Only]
8687
I/O Database Writes (Maintenance) Total IO is the number of IOs accumulated   for the database write operation latency counters. [Dev Only]
8689
I/O Database Writes (Maintenance) Mean Latency is the average length of time,  in microseconds, per database write operation. [Dev Only]
8691
I/O Database Writes (Maintenance) 50th Pct Latency is the length of time for  the median or 50th percentile IO, in microseconds, per database write  operation. [Dev Only]
8693
I/O Database Writes (Maintenance) 90th Pct Latency is the length of time for,  the 90th percentile IO, in microseconds, per database write operation. [Dev Only]
8695
I/O Database Writes (Maintenance) 99th Pct Latency is the length of time for,  the 99th percentile IO, in microseconds, per database write operation. [Dev Only]
8697
I/O Database Writes (Maintenance) Max Pct Latency is the length of time for,  the max or 100th percentile IO latency, in microseconds, per database write operation. [Dev Only]
8699
I/O Database Meted Queue Depth is queued and pending IO operations awaiting an open async IO slot. [Dev Only]
8701
I/O Database Meted Outstanding Max is the limit on number of Meted Queue IO operations that may be outstanding or issued to the OS at any given time. [Dev Only]
8703
I/O Database Async Read Pending is the number of async read IO operations outstanding to the OS. [Dev Only]
8705
Database Cache % Hit (Unique) is the percentage of unique  database file page requests that were fulfilled by the database cache.
8707
No text
8709
Database Cache Requests/sec (Unique) is the rate at which unique pages are requested from the database cache.
8711
SMSvcHost 4.0.0.0 performance counters
8713
The total number of failures at the protocol layer of net.tcp.
8715
The total number of failures at the protocol layer of net.pipe.
8717
The total number of failures dispatching messages received over net.tcp.
8719
The total number of failures dispatching messages received over net.pipe.
8721
The total number of connections dispatched over net.tcp.
8723
The total number of connections dispatched over net.pipe.
8725
The total number of TCP connections accepted over net.tcp.
8727
The total number of named pipe connections accepted over net.pipe.
8729
The number of uri registrations currently active for net.tcp.
8731
The number of uri registrations currently active for net.pipe.
8733
The total number of uris that were succesfully registered for net.tcp.
8735
The total number of uris that were succesfully registered for net.pipe.
8737
The total number of uris that were succesfully unregistered for net.tcp.
8739
The total number of uris that were succesfully unregistered for net.pipe.
8741
Counters for CLR Garbage Collected heap.
8743
This counter displays the number of times the generation 0 objects (youngest; most recently allocated) are garbage collected (Gen 0 GC) since the start of the application. Gen 0 GC occurs when the available memory in generation 0 is not sufficient to satisfy an allocation request. This counter is incremented at the end of a Gen 0 GC. Higher generation GCs include all lower generation GCs. This counter is explicitly incremented when a higher generation (Gen 1 or Gen 2) GC occurs. _Global_ counter value is not accurate and should be ignored. This counter displays the last observed value.
8745
This counter displays the number of times the generation 1 objects are garbage collected since the start of the application. The counter is incremented at the end of a Gen 1 GC. Higher generation GCs include all lower generation GCs. This counter is explicitly incremented when a higher generation (Gen 2) GC occurs. _Global_ counter value is not accurate and should be ignored. This counter displays the last observed value.
8747
This counter displays the number of times the generation 2 objects (older) are garbage collected since the start of the application. The counter is incremented at the end of a Gen 2 GC (also called full GC). _Global_ counter value is not accurate and should be ignored. This counter displays the last observed value.
8749
This counter displays the bytes of memory that survive garbage collection (GC) and are promoted from generation 0 to generation 1; objects that are promoted just because they are waiting to be finalized are not included in this counter. This counter displays the value observed at the end of the last GC; its not a cumulative counter.
8751
This counter displays the bytes of memory that survive garbage collection (GC) and are promoted from generation 1 to generation 2; objects that are promoted just because they are waiting to be finalized are not included in this counter. This counter displays the value observed at the end of the last GC; its not a cumulative counter. This counter is reset to 0 if the last GC was a Gen 0 GC only.
8753
This counter displays the bytes per second that are promoted from generation 0 (youngest) to generation 1; objects that are promoted just because they are waiting to be finalized are not included in this counter. Memory is promoted when it survives a garbage collection. This counter was designed as an indicator of relatively long-lived objects being created per sec. This counter displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8755
This counter displays the bytes per second that are promoted from generation 1 to generation 2 (oldest); objects that are promoted just because they are waiting to be finalized are not included in this counter. Memory is promoted when it survives a garbage collection. Nothing is promoted from generation 2 since it is the oldest. This counter was designed as an indicator of very long-lived objects being created per sec. This counter displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8757
This counter displays the bytes of memory that are promoted from generation 0 to generation 1 just because they are waiting to be finalized. This counter displays the value observed at the end of the last GC; its not a cumulative counter.
8759
This counter displays the process ID of the CLR process instance being monitored. The value displayed will be 0 until after the first garbage collection.
8761
This counter displays the maximum bytes that can be allocated in generation 0 (Gen 0); its does not indicate the current number of bytes allocated in Gen 0. A Gen 0 GC is triggered when the allocations since the last GC exceed this size. The Gen 0 size is tuned by the Garbage Collector and can change during the execution of the application. At the end of a Gen 0 collection the size of the Gen 0 heap is infact 0 bytes; this counter displays the size (in bytes) of allocations that would trigger the next Gen 0 GC. This counter is updated at the end of a GC; its not updated on every allocation.
8763
This counter displays the current number of bytes in generation 1 (Gen 1); this counter does not display the maximum size of Gen 1. Objects are not directly allocated in this generation; they are promoted from previous Gen 0 GCs. This counter is updated at the end of a GC; its not updated on every allocation.
8765
This counter displays the current number of bytes in generation 2 (Gen 2). Objects are not directly allocated in this generation; they are promoted from Gen 1 during previous Gen 1 GCs. This counter is updated at the end of a GC; its not updated on every allocation.
8767
This counter displays the current size of the Large Object Heap in bytes. Objects greater than a threshold are treated as large objects by the Garbage Collector and are directly allocated in a special heap; they are not promoted through the generations. In CLR v1.1 and above this threshold is equal to 85000 bytes. This counter is updated at the end of a GC; it’s not updated on every allocation.
8769
This counter displays the number of garbage collected objects that survive a collection because they are waiting to be finalized. If these objects hold references to other objects then those objects also survive but are not counted by this counter; the "Promoted Finalization-Memory from Gen 0" and "Promoted Finalization-Memory from Gen 1" counters represent all the memory that survived due to finalization. This counter is not a cumulative counter; its updated at the end of every GC with count of the survivors during that particular GC only. This counter was designed to indicate the extra overhead that the application might incur because of finalization.
8771
This counter displays the current number of GC Handles in use. GCHandles are handles to resources external to the CLR and the managed environment. Handles occupy small amounts of memory in the GCHeap but potentially expensive unmanaged resources.
8773
This counter displays the rate of bytes per second allocated on the GC Heap. This counter is updated at the end of every GC; not at each allocation. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8775
This counter displays the peak number of times a garbage collection was performed because of an explicit call to GC.Collect. Its a good practice to let the GC tune the frequency of its collections.
8777
% Time in GC is the percentage of elapsed time that was spent in performing a garbage collection (GC) since the last GC cycle. This counter is usually an indicator of the work done by the Garbage Collector on behalf of the application to collect and compact memory. This counter is updated only at the end of every GC and the counter value reflects the last observed value; its not an average.
8779
Not Displayed.
8781
This counter is the sum of four other counters; Gen 0 Heap Size; Gen 1 Heap Size; Gen 2 Heap Size and the Large Object Heap Size. This counter indicates the current memory allocated in bytes on the GC Heaps.
8783
This counter displays the amount of virtual memory (in bytes) currently committed by the Garbage Collector. (Committed memory is the physical memory for which space has been reserved on the disk paging file).
8785
This counter displays the amount of virtual memory (in bytes) currently reserved by the Garbage Collector. (Reserved memory is the virtual memory space reserved for the application but no disk or main memory pages have been used.)
8787
This counter displays the number of pinned objects encountered in the last GC. This counter tracks the pinned objects only in the heaps that were garbage collected e.g. a Gen 0 GC would cause enumeration of pinned objects in the generation 0 heap only. A pinned object is one that the Garbage Collector cannot move in memory.
8789
This counter displays the current number of sync blocks in use. Sync blocks are per-object data structures allocated for storing synchronization information. Sync blocks hold weak references to managed objects and need to be scanned by the Garbage Collector. Sync blocks are not limited to storing synchronization information and can also store COM interop metadata. This counter was designed to indicate performance problems with heavy use of synchronization primitives.
8791
Statistics for CLR Class Loader.
8793
This counter displays the cumulative number of classes loaded in all Assemblies since the start of this application.
8795
Reserved for future use.
8797
Reserved for future use.
8799
This counter displays the peak number of classes that have failed to load since the start of the application. These load failures could be due to many reasons like inadequate security or illegal format. Full details can be found in the profiling services help.
8801
This counter displays the number of classes that failed to load per second. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval. These load failures could be due to many reasons like inadequate security or illegal format. Full details can be found in the profiling services help.
8803
This counter displays the current size (in bytes) of the memory committed by the class loader across all AppDomains. (Committed memory is the physical memory for which space has been reserved on the disk paging file.)
8805
This counter displays the total number of AppDomains unloaded since the start of the application. If an AppDomain is loaded and unloaded multiple times this counter would count each of those unloads as separate.
8807
This counter displays the number of AppDomains unloaded per second. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8809
This counter displays the current number of classes loaded in all Assemblies.
8811
This counter displays the number of classes loaded per second in all Assemblies. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8813
This counter displays the current number of AppDomains loaded in this application. AppDomains (application domains) provide a secure and versatile unit of processing that the CLR can use to provide isolation between applications running in the same process.
8815
This counter displays the peak number of AppDomains loaded since the start of this application. AppDomains (application domains) provide a secure and versatile unit of processing that the CLR can use to provide isolation between applications running in the same process.
8817
This counter displays the number of AppDomains loaded per second. AppDomains (application domains) provide a secure and versatile unit of processing that the CLR can use to provide isolation between applications running in the same process. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8819
This counter displays the current number of Assemblies loaded across all AppDomains in this application. If the Assembly is loaded as domain-neutral from multiple AppDomains then this counter is incremented once only. Assemblies can be loaded as domain-neutral when their code can be shared by all AppDomains or they can be loaded as domain-specific when their code is private to the AppDomain.
8821
This counter displays the total number of Assemblies loaded since the start of this application. If the Assembly is loaded as domain-neutral from multiple AppDomains then this counter is incremented once only. Assemblies can be loaded as domain-neutral when their code can be shared by all AppDomains or they can be loaded as domain-specific when their code is private to the AppDomain.
8823
This counter displays the number of Assemblies loaded across all AppDomains per second. If the Assembly is loaded as domain-neutral from multiple AppDomains then this counter is incremented once only. Assemblies can be loaded as domain-neutral when their code can be shared by all AppDomains or they can be loaded as domain-specific when their code is private to the AppDomain. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8825
Stats for CLR Jit.
8827
This counter displays the total number of methods compiled Just-In-Time (JIT) by the CLR JIT compiler since the start of the application. This counter does not include the pre-jitted methods.
8829
This counter displays the total IL bytes jitted since the start of the application. This counter is exactly equivalent to the "Total # of IL Bytes Jitted" counter.
8831
This counter displays the total IL bytes jitted since the start of the application. This counter is exactly equivalent to the "# of IL Bytes Jitted" counter.
8833
This counter displays the rate at which IL bytes are jitted per second. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8835
This counter displays the peak number of methods the JIT compiler has failed to JIT since the start of the application. This failure can occur if the IL cannot be verified or if there was an internal error in the JIT compiler.
8837
This counter displays the percentage of elapsed time spent in JIT compilation since the last JIT compilation phase. This counter is updated at the end of every JIT compilation phase. A JIT compilation phase is the phase when a method and its dependencies are being compiled.
8839
Not Displayed.
8841
Stats for CLR interop.
8843
This counter displays the current number of Com-Callable-Wrappers (CCWs). A CCW is a proxy for the .NET managed object being referenced from unmanaged COM client(s). This counter was designed to indicate the number of managed objects being referenced by unmanaged COM code.
8845
This counter displays the current number of stubs created by the CLR. Stubs are responsible for marshalling arguments and return values from managed to unmanaged code and vice versa; during a COM Interop call or PInvoke call.
8847
This counter displays the total number of times arguments and return values have been marshaled from managed to unmanaged code and vice versa since the start of the application. This counter is not incremented if the stubs are inlined. (Stubs are responsible for marshalling arguments and return values). Stubs usually get inlined if the marshalling overhead is small.
8849
Reserved for future use.
8851
Reserved for future use.
8853
Stats for CLR Locks and Threads.
8855
This counter displays the total number of times threads in the CLR have attempted to acquire a managed lock unsuccessfully. Managed locks can be acquired in many ways; by the "lock" statement in C# or by calling System.Monitor.Enter or by using MethodImplOptions.Synchronized custom attribute.
8857
Rate at which threads in the runtime attempt to acquire a managed lock unsuccessfully. Managed locks can be acquired in many ways; by the "lock" statement in C# or by calling System.Monitor.Enter or by using MethodImplOptions.Synchronized custom attribute.
8859
This counter displays the total number of threads currently waiting to acquire some managed lock in the application. This counter is not an average over time; it displays the last observed value.
8861
This counter displays the total number of threads that waited to acquire some managed lock since the start of the application.
8863
This counter displays the number of threads per second waiting to acquire some lock in the application. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8865
This counter displays the number of current .NET thread objects in the application. A .NET thread object is created either by new System.Threading.Thread or when an unmanaged thread enters the managed environment. This counters maintains the count of both running and stopped threads. This counter is not an average over time; it just displays the last observed value.
8867
This counter displays the number of native OS threads created and owned by the CLR to act as underlying threads for .NET thread objects. This counters value does not include the threads used by the CLR in its internal operations; it is a subset of the threads in the OS process.
8869
This counter displays the number of threads that are currently recognized by the CLR; they have a corresponding .NET thread object associated with them. These threads are not created by the CLR; they are created outside the CLR but have since run inside the CLR at least once. Only unique threads are tracked; threads with same thread ID re-entering the CLR or recreated after thread exit are not counted twice.
8871
This counter displays the total number of threads that have been recognized by the CLR since the start of this application; these threads have a corresponding .NET thread object associated with them. These threads are not created by the CLR; they are created outside the CLR but have since run inside the CLR at least once. Only unique threads are tracked; threads with same thread ID re-entering the CLR or recreated after thread exit are not counted twice.
8873
This counter displays the number of threads per second that have been recognized by the CLR; these threads have a corresponding .NET thread object associated with them. These threads are not created by the CLR; they are created outside the CLR but have since run inside the CLR at least once. Only unique threads are tracked; threads with same thread ID re-entering the CLR or recreated after thread exit are not counted twice. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8875
Stats for CLR Security.
8877
This counter displays the total number of runtime Code Access Security (CAS) checks performed since the start of the application. Runtime CAS checks are performed when a caller makes a call to a callee demanding a particular permission; the runtime check is made on every call by the caller; the check is done by examining the current thread stack of the caller. This counter used together with "Stack Walk Depth" is indicative of performance penalty for security checks.
8879
Reserved for future use.
8881
This counter displays the total number of linktime Code Access Security (CAS) checks since the start of the application. Linktime CAS checks are performed when a caller makes a call to a callee demanding a particular permission at JIT compile time; linktime check is performed once per caller. This count is not indicative of serious performance issues; its indicative of the security system activity.
8883
This counter displays the percentage of elapsed time spent in performing runtime Code Access Security (CAS) checks since the last such check. CAS allows code to be trusted to varying degrees and enforces these varying levels of trust depending on code identity. This counter is updated at the end of a runtime security check; it represents the last observed value; its not an average.
8885
Not Displayed.
8887
This counter displays the depth of the stack during that last runtime Code Access Security check. Runtime Code Access Security check is performed by crawling the stack. This counter is not an average; it just displays the last observed value.
8889
Stats for CLR Remoting.
8891
This counter displays the number of remote procedure calls invoked per second. A remote procedure call is a call on any object outside the caller;s AppDomain. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8893
This counter displays the total number of remoting channels registered across all AppDomains since the start of the application. Channels are used to transport messages to and from remote objects.
8895
This counter displays the total number of remoting proxy objects created in this process since the start of the process. Proxy object acts as a representative of the remote objects and ensures that all calls made on the proxy are forwarded to the correct remote object instance.
8897
This counter displays the current number of context-bound classes loaded. Classes that can be bound to a context are called context-bound classes; context-bound classes are marked with Context Attributes which provide usage rules for synchronization; thread affinity; transactions etc.
8899
This counter displays the number of context-bound objects allocated per second. Instances of classes that can be bound to a context are called context-bound objects; context-bound classes are marked with Context Attributes which provide usage rules for synchronization; thread affinity; transactions etc. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8901
This counter displays the current number of remoting contexts in the application. A context is a boundary containing a collection of objects with the same usage rules like synchronization; thread affinity; transactions etc.
8903
This counter displays the total number of remote procedure calls invoked since the start of this application. A remote procedure call is a call on any object outside the caller;s AppDomain.
8905
Runtime statistics on CLR exception handling.
8907
This counter displays the total number of exceptions thrown since the start of the application. These include both .NET exceptions and unmanaged exceptions that get converted into .NET exceptions e.g. null pointer reference exception in unmanaged code would get re-thrown in managed code as a .NET System.NullReferenceException; this counter includes both handled and unhandled exceptions. Exceptions that are re-thrown would get counted again. Exceptions should only occur in rare situations and not in the normal control flow of the program.
8909
This counter displays the number of exceptions thrown per second. These include both .NET exceptions and unmanaged exceptions that get converted into .NET exceptions e.g. null pointer reference exception in unmanaged code would get re-thrown in managed code as a .NET System.NullReferenceException; this counter includes both handled and unhandled exceptions. Exceptions should only occur in rare situations and not in the normal control flow of the program; this counter was designed as an indicator of potential performance problems due to large (>100s) rate of exceptions thrown. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8911
This counter displays the number of .NET exception filters executed per second. An exception filter evaluates whether an exception should be handled or not. This counter tracks the rate of exception filters evaluated; irrespective of whether the exception was handled or not. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8913
This counter displays the number of finally blocks executed per second. A finally block is guaranteed to be executed regardless of how the try block was exited. Only the finally blocks that are executed for an exception are counted; finally blocks on normal code paths are not counted by this counter. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8915
This counter displays the number of stack frames traversed from the frame that threw the .NET exception to the frame that handled the exception per second. This counter resets to 0 when an exception handler is entered; so nested exceptions would show the handler to handler stack depth. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
8917
Counters for System.Data.OracleClient
8919
The number of actual connections per second that are being made to servers
8921
The number of actual disconnects per second that are being made to servers
8923
The number of connections we get from the pool per second
8925
The number of connections we return to the pool per second
8927
The number of connections that are not using connection pooling
8929
The number of connections that are managed by the connection pooler
8931
The number of unique connection strings
8933
The number of unique connection strings waiting for pruning
8935
The number of active connection pools
8937
The number of inactive connection pools
8939
The number of connections currently in-use
8941
The number of connections currently available for use
8943
The number of connections currently waiting to be made ready for use
8945
The number of connections we reclaim from GCed external connections
8947
The Telphony System
8949
The number of telephone lines serviced by this computer.
8951
The number of telephone devices serviced by this computer.
8953
the number of telephone lines serviced by this computer that are currently active.
8955
The number of telephone devices that are currently being monitored.
8957
The rate of outgoing calls made by this computer.
8959
The rate of incoming calls answered by this computer.
8961
The number of applications that are currently using telephony services.
8963
Current outgoing calls being serviced by this computer.
8965
Current incoming calls being serviced by this computer.
8967
BITS Per Job Network Utilization
8969
Estimate of Remote Server Speed (Bits/Sec)
8971
Estimate of the local netcard's speed (Bits/Sec)
8973
Estimate of most recent percent network interface utilization
8975
Estimate of the IGD's Internet connection speed (Bits/Sec)
8977
Estimate of most recent percent IGD Internet connection utilization
8979
Size of the next download block for BITS
8981
BITS download response interval (msec)
8983
Estimated bandwidth available to the remote system (Bits/sec)
8985
Displays performance statistics about ReadyBoost Caches.
8987
The total (uncompressed) amount of data currently stored in ReadyBoost caches.
8989
Amount of space in bytes taken by data cached in ReadyBoost caches.
8991
(Cache space used) / (Bytes cached)
8993
Total size, in bytes, of all caches regardless of how much data they contain.
8995
Number of I/Os satisfied from ReadyBoost caches per second.
8997
Bytes of I/Os satisfied from ReadyBoost caches per second.
8999
Number of read I/Os ignored by ReadyBoost due to policy.
9001
Bytes of read I/Os ignored by ReadyBoost due to policy.
9003
Number of read I/Os that are received by ReadyBoost. This counter includes all reads whether or not they were satisfied by ReadyBoost caches.
9005
Bytes of read I/Os that are received by ReadyBoost. This counter includes all reads whether or not they were satisfied by ReadyBoost caches.
9007
Displays the current bulk transfer rate in bytes/sec.
9009
Displays the current isochronous transfer rate in bytes/sec.
9011
Displays the current interrupt transfer rate in bytes/sec.
9013
Displays the current control transfer rate in bytes/sec.
9015
Displays the rate of PCI interrupt generation by the USB controller. For controller instances only.
9017
Displays the current rate Work Signals generated per second by the usbport driver.  For controller instances only.
9019
Displays the percentage of BW reserved for interrupt transfers
9021
Displays the percentage of BW reserved for ISO transfers
9023
USB I/O Counters
9025
Displays the average size of all transfer URBs. For device instances only.
9027
Number of ISO packets that are NOT late, but complete with an error. For device instances only.
9029
Avg number of ms between the current frame and the start frame of an ISO transfer when scheduled.  For device instances only.
9031
Number of Transfer URBs completing with an error status. For device instances only.
9033
Non-zero value if the host controller is not running(idle).
9035
Non-Zero value if the host controller async schedule is not running(idle).
9037
Incremented each time the controller async cache is flushed.
9039
Non-Zero if the periodic schedule is not running(idle).
9041
Incremented each time the controller periodic cache is flushed.
9043
Process Level Statistics for User Input Delay
9045
Session Level Statistics for User Input Delay
9047
Maximum value for queuing delay across all user input waiting to be picked-up by the process during a target time interval
9049
Maximum value for queuing delay across all user input waiting to be picked-up by any process in the session during a target time interval
9051
The RAS Object Type handles individual ports of the RAS device on your system.
9053
The number of bytes transmitted total for this connection.
9055
The number of bytes received total for this connection.
9057
The number of data frames transmitted total for this connection.
9059
The number of data frames received total for this connection.
9061
The compression ratio for bytes being transmitted.
9063
The compression ratio for bytes being received.
9065
The total number of CRC Errors for this connection.  CRC Errors occur when the frame received contains erroneous data.
9067
The total number of Timeout Errors for this connection.  Timeout Errors occur when an expected is not received in time.
9069
The total number of Serial Overrun Errors for this connection.  Serial Overrun Errors occur when the hardware cannot handle the rate at which data is received.
9071
The total number of Alignment Errors for this connection.  Alignment Errors occur when a byte received is different from the byte expected.
9073
The total number of Buffer Overrun Errors for this connection.  Buffer Overrun Errors when the software cannot handle the rate at which data is received.
9075
The total number of CRC, Timeout, Serial Overrun, Alignment, and Buffer Overrun Errors for this connection.
9077
The number of bytes transmitted per second.
9079
The number of bytes received per second.
9081
The number of frames transmitted per second.
9083
The number of frames received per second.
9085
The total number of CRC, Timeout, Serial Overrun, Alignment, and Buffer Overrun Errors per second.
9087
The RAS Object Type handles all combined ports of the RAS device on your system.
9089
The total number of Remote Access connections.
9091
Windows Workflow Foundation Performance Counters
9093
Total number of workflows created.
9095
Rate of workflows created per second.
9097
Total number of workflows unloaded.
9099
Rate of workflows unloaded per second.
9101
Total number of workflows loaded.
9103
Rate of workflows loaded per second.
9105
Total number of workflows completed.
9107
Rate of workflows completed per second.
9109
Total number of workflows suspended.
9111
Rate of workflows suspended per second.
9113
Total number of workflows terminated.
9115
Rate of workflows terminated per second.
9117
Total number of workflows in memory.
9119
Total number of workflows aborted.
9121
Rate of workflows aborted per second.
9123
Total number of workflows persisted.
9125
Rate of workflows persisted per second.
9127
Total number of workflow instances actively executing.
9129
Rate of workflows becoming idle per second.
9131
Total number of workflows ready to execute.
9133
Total number of workflows waiting for a thread.
9135
Counters for the Windows Search Service Gatherer Project object
9137
The number of add notifications.
9139
The number of document additions per second.
9141
The number of delete notifications.
9143
The number of document deletes per second.
9145
The number of modify notifications.
9147
The number of modify notifications per second.
9149
The number of documents waiting to be processed. When this number goes to zero the catalog is idle. This number indicates the total queue size of unprocessed documents in the gatherer.
9151
The number of documents in progress.
9153
The number of documents on hold because a document with the same URL is currently in process.
9155
The number of documents delayed due to site hit frequency rules.
9157
The number of files (URLs) in the history list. This indicates the total size of your document corpus that was indexed.
9159
The number of documents processed since the history has been reset.
9161
The number of documents processed per second.
9163
The number of successfully filtered documents.
9165
The number of successfully filtered documents per second.
9167
The number of filtered documents which returned an error.
9169
The number of filtered documents which returned an error per second.
9175
The number of file protocol errors received while getting documents.
9177
The number of file protocol errors received per second.
9183
The number of documents accessed via file system.
9185
The number of documents accessed via file system per second.
9191
The number of office documents filtered.
9193
The number of office documents filtered per second.
9195
The number of text documents filtered.
9197
The number of text documents filtered per second.
9199
Number of crawls in progress.
9201
The Gatherer paused flag indicates if the Gatherer has been paused.
9203
The recovery in progress flag indicates if recovery is currently in progress. Indexing will not be resumed until this flag is off.
9205
The number of documents which were not filtered because no modification was detected since the last crawl.
9207
The Iterating history in progress flag indicates if the Gatherer is currently iterating over the URL history.
9209
Number of incremental crawls in progress.
9211
The number of documents currently being filtered.
9213
The number of documents initiated into the Gatherer service. This includes the number of documents on hold, in the active queue, and currently filtered. When this number goes to zero during a crawl, it means the crawl will be done soon.
9215
The total number of times a document access has been retried. Having this number high may indicate a problem with accessing the data.
9217
The number of retries per second.
9225
Documents incorrectly rejected by adaptive crawl
9231
Documents which have changed since the last crawl
9233
The number of Move/Rename notifications.
9235
The number of document Moves and Renames per second.
9237
Number of unique documents in the system. Documents are considered not unique if their contents is the same.
9239
Percentage of the history recovery completed
9241
Counters for the Windows Search Service Gathering service object
9243
Currently connected external notification sources.
9245
The total number of notifications received from all notification sources excluding file system.
9247
The rate of external notifications received per second.
9249
The number of currently connected administrative clients.
9251
The total number of heartbeats counted since startup. A heartbeat occurs once every 10 seconds while the service is running. If the service is not running there will be no heartbeat and the number of ticks will not be incremented.
9253
Displays one heartbeat every 10 seconds.
9255
The total number of filtering threads in the system. This number is calculated based on your system resources.
9257
The number of threads waiting for documents.
9259
The number of document entries currently in memory. Zero means no indexing activity is going on.
9261
Indicates the level of the amount of system resources that the Gatherer service is allowed to use.
9263
The number of documents waiting for robot threads. If this number is not 0, all threads should be filtering.
9265
The number of filtering processes in the system.
9267
The maximum number of filtering processes that have existed in the system since startup.
9269
The total number of times a filter process was created or restarted. Having too many filter processes created indicates that filtering is having trouble with the data in the documents.
9271
The number of documents delayed due to site hit frequency rules.
9273
The number of servers recently accessed by the system.
9275
The number of times a new server object had to be created.
9277
The number of filter objects in the system. Each filter object corresponds to a URL currently being filtered.
9279
The number of times a filter object was created. This corresponds to the total number of documents filtered in the system since startup.
9281
The number of documents filtered per second.
9283
The total number of timeouts detected by the system since startup.
9285
A server becomes unavailable when a number of requests to that server time out.
9287
A server becomes unavailable when a number of requests to that server time out.
9289
The number of threads waiting for a response from the filter process. If no activity is going on and this number is equal to number of filtering threads, it may indicate a network problem or unavailability of the server it is crawling.
9291
The number of threads waiting for plug-ins to complete an operation.
9293
The number of documents successfully filtered.
9295
The number of successfully filtered documents per second.
9297
The number of documents that will be retried after time-out. When this is non-zero, it means that the local server it is crawling is shut down.
9299
Number of available cached word breakers instances
9301
Number of available cached stemmer instances. Too many may indicate a resource usage problem.
9303
The total number of notifications received from all notification sources including file system.
9305
The rate of external notifications received per second.
9307
System IO (disk) traffic rate in KB/s detected by back off logic
9309
The code describing why the Gatherer service went into back off state. 0 - up and running 1 - high system IO traffic 2 - high notifications rate 3 - delayed recovery in progress (not implemented) 4 - back off due to user activity 5 - Battery Low 6 - Memory Low 99 - back off for some internal reason (forced by Search itself) While backing off, no indexing is performed. To resume the indexing you must eliminate the reason for back off. If the Gatherer service is in back off state, the Search service is paused and there is a message in the event log.
9311
The number of threads blocked due to back off event
9313
Indexer PlugIn statistics
9315
The level of the master index.
9317
Number of Master Merges to Date
9319
Master Merge Progress
9321
Shadow Merge Levels
9323
Shadow Merge Levels Threshold
9325
Number of Persistent Indexes
9327
Size of Index
9329
Number of Unique Keys
9331
Number of Documents Filtered
9333
Number of invalidator work items that were created
9335
Number of invalidator work items that were deleted
9337
Number of clean WidSets
9339
Number of dirty WidSets
9341
Indicator if a master merge is going on.
9343
Active Connections
9345
Number of Queries
9347
Number of Queries Failed
9349
Number of Queries Succeeded
9351
The number of L0 Indexes (Wordlists)
9353
The number of L0 merges (flushes) in progress at any one moment.
9355
The average value [documents/hour] computed for the speed of L0 merges (flushes) since the catalog has been loaded
9357
The number of L0 merges (flushes) since the catalog was loaded
9359
The last value [documents/hour] computed for the speed of L0 merges (flushes).
9361
The number of L1 Indexes
9363
The number of L1 merges in progress at any one moment.
9365
The average value [documents/hour] computed for the speed of L1 merges since the catalog has been loaded
9367
The number of L1 merges since the catalog was loaded
9369
The last value [documents/hour] computed for the speed of L1 merges.
9371
The number of L2 Indexes
9373
The number of L2 merges in progress at any one moment.
9375
The average value [documents/hour] computed for the speed of L2 merges since the catalog has been loaded
9377
The number of L2 merges since the catalog was loaded
9379
The last value [documents/hour] computed for the speed of L2 merges.
9381
The number of L3 Indexes
9383
The number of L3 merges in progress at any one moment.
9385
The average value [documents/hour] computed for the speed of L3 merges since the catalog has been loaded
9387
The number of L3 merges since the catalog was loaded
9389
The last value [documents/hour] computed for the speed of L3 merges.
9391
The number of L4 Indexes
9393
The number of L4 merges in progress at any one moment.
9395
The average value [documents/hour] computed for the speed of L4 merges since the catalog has been loaded
9397
The number of L4 merges since the catalog was loaded
9399
The last value [documents/hour] computed for the speed of L4 merges.
9401
The number of L5 Indexes
9403
The number of L5 merges in progress at any one moment.
9405
The average value [documents/hour] computed for the speed of L5 merges since the catalog has been loaded
9407
The number of L5 merges since the catalog was loaded
9409
The last value [documents/hour] computed for the speed of L5 merges.
9411
The number of L6 Indexes
9413
The number of L6 merges in progress at any one moment.
9415
The average value [documents/hour] computed for the speed of L6 merges since the catalog has been loaded
9417
The number of L6 merges since the catalog was loaded
9419
The last value [documents/hour] computed for the speed of L6 merges.
9421
The number of L7 Indexes
9423
The number of L7 merges in progress at any one moment.
9425
The average value [documents/hour] computed for the speed of L7 merges since the catalog has been loaded
9427
The number of L7 merges since the catalog was loaded
9429
The last value [documents/hour] computed for the speed of L7 merges.
9431
The number of L8 Indexes
9433
The number of L8 merges in progress at any one moment.
9435
The average value [documents/hour] computed for the speed of L8 merges since the catalog has been loaded
9437
The number of L8 merges since the catalog was loaded
9439
The last value [documents/hour] computed for the speed of L8 merges.
10331
Windows Workflow Foundation Performance Counters
10333
Total number of workflows created.
10335
Rate of workflows created per second.
10337
Total number of workflows unloaded.
10339
Rate of workflows unloaded per second.
10341
Total number of workflows loaded.
10343
Rate of workflows loaded per second.
10345
Total number of workflows completed.
10347
Rate of workflows completed per second.
10349
Total number of workflows suspended.
10351
Rate of workflows suspended per second.
10353
Total number of workflows terminated.
10355
Rate of workflows terminated per second.
10357
Total number of workflows in memory.
10359
Total number of workflows aborted.
10361
Rate of workflows aborted per second.
10363
Total number of workflows persisted.
10365
Rate of workflows persisted per second.
10367
Total number of workflow instances actively executing.
10369
Rate of workflows becoming idle per second.
10371
Total number of workflows ready to execute.
10373
Total number of workflows waiting for a thread.
10375
SMSvcHost 3.0.0.0 performance counters
10377
The total number of failures at the protocol layer of net.tcp.
10379
The total number of failures at the protocol layer of net.pipe.
10381
The total number of failures dispatching messages received over net.tcp.
10383
The total number of failures dispatching messages received over net.pipe.
10385
The total number of connections dispatched over net.tcp.
10387
The total number of connections dispatched over net.pipe.
10389
The total number of TCP connections accepted over net.tcp.
10391
The total number of named pipe connections accepted over net.pipe.
10393
The number of uri registrations currently active for net.tcp.
10395
The number of uri registrations currently active for net.pipe.
10397
The total number of uris that were succesfully registered for net.tcp.
10399
The total number of uris that were succesfully registered for net.pipe.
10401
The total number of uris that were succesfully unregistered for net.tcp.
10403
The total number of uris that were succesfully unregistered for net.pipe.
10405
ServiceModelService 3.0.0.0 performance counters
10407
The number of calls to this service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.Calls.aspx
10409
The number of calls to this service per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsPerSecond.aspx
10411
The number of calls to this service that are in progress. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsOutstanding.aspx
10413
The number of calls with unhandled exceptions in this service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsFailed.aspx
10415
The number of calls with unhandled exceptions in this service per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsFailedPerSecond.aspx
10417
The number of calls to this service that returned faults. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsFaulted.aspx
10419
The number of calls to this service that returned faults per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallsFaultedPerSecond.aspx
10421
The average duration of calls to this service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.CallDuration.aspx
10423
Base counter for the 'Calls Duration' counter.
10425
The number of transactions that flowed to operations in this service. This counter is incremented any time a transaction ID is present in the message that is sent to the service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxFlowed.aspx
10427
The number of transactions that flowed to operations in this service per second. This counter is incremented any time a transaction ID is present in the message that is sent to the service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxFlowedPerSecond.aspx
10429
The number of transacted operations with the outcome committed in this service. Work done under such operations is fully committed. Resources are updated in accordance with the work done in the operation. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxCommitted.aspx
10431
The number of transacted operations with the outcome committed in this service per second. Work done under such operations is fully committed. Resources are updated in accordance with the work done in the operation. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxCommittedPerSecond.aspx
10433
The number of transacted operations with the outcome aborted in this service. Work done under such operations is rolled back. Resources are reverted to their previous state. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxAborted.aspx
10435
The number of transacted operations with the outcome aborted in this service per second. Work done under such operations is rolled back. Resources are reverted to their previous state. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxAbortedPerSecond.aspx
10437
The number of transacted operations with an outcome in doubt in this service. Work done with an outcome in doubt is in an indeterminate state. Resources are held pending outcome. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxInDoubt.aspx
10439
The number of transacted operations with an outcome in doubt in this service per second. Work done with an outcome in doubt is in an indeterminate state. Resources are held pending outcome. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.TxInDoubtPerSecond.aspx
10441
The number of calls to this service that failed validation or authentication. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.SecurityValidationAuthenticationFailures.aspx
10443
The number of calls to this service that failed validation or authentication per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.SecurityValidationAuthenticationFailuresPerSecond.aspx
10445
The number of calls to this service that failed authorization. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.SecurityCallsNotAuthorized.aspx
10447
The number of calls to this service that failed authorization per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.SecurityCallsNotAuthorizedPerSecond.aspx
10449
The total number of instances of the service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.Instances.aspx
10451
The creation rate of service instances per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.InstancesPerSecond.aspx
10453
The number of reliable messaging sessions that were faulted in this service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.RMSessionsFaulted.aspx
10455
The number of reliable messaging sessions that were faulted in this service per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.RMSessionsFaultedPerSecond.aspx
10457
The number of reliable messaging messages that were dropped in this service. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.RMMessagesDropped.aspx
10459
The number of reliable messaging messages that were dropped in this service per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Service.RMMessagesDroppedPerSecond.aspx
10461
The number of messages to this service that were marked poisoned by the queued transport. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqPoisonMessages.aspx
10463
The number of messages to this service that were marked poisoned by the queued transport per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqPoisonMessagesPerSecond.aspx
10465
The number of messages to this servcie that were rejected by the queued transport. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqRejectedMessages.aspx
10467
The number of messages to this service that were rejected by the queued transport per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqRejectedMessagesPerSecond.aspx
10469
The number of messages to this service that were dropped by the queued transport. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqDroppedMessages.aspx
10471
The number of messages to this service that were dropped by the queued transport per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.MsmqDroppedMessagesPerSecond.aspx
10473
ServiceModelOperation 3.0.0.0 performance counters
10475
The number of calls to this operation. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.Calls.aspx
10477
The number of calls to this operation per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsPerSecond.aspx
10479
The number of calls to this operation that are in progress. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsOutstanding.aspx
10481
The number of calls with unhandled exceptions in this operation. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsFailed.aspx
10483
The number of calls with unhandled exceptions in this operation per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsFailedPerSecond.aspx
10485
The number of calls to this operation that returned faults. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsFaulted.aspx
10487
The number of calls to this operation that returned faults per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallsFaultedPerSecond.aspx
10489
The average duration of calls to this operation. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.CallDuration.aspx
10491
Base counter for the 'Calls Duration' counter.
10493
The number of transactions that flowed to this operation. This counter is incremented any time a transaction ID is present in the message sent to the operation. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.TxFlowed.aspx
10495
The number of transactions that flowed to this operation per second. This counter is incremented any time a transaction ID is present in the message sent to the operation. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.TxFlowedPerSecond.aspx
10497
The number of calls to this operation that failed validation or authentication. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.SecurityValidationAuthenticationFailures.aspx
10499
The number of calls to this operation that failed validation or authentication per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.SecurityValidationAuthenticationFailuresPerSecond.aspx
10501
The number of calls to this operation that failed authorization. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.SecurityCallsNotAuthorized.aspx
10503
The number of calls to this operation that failed authorization per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Operation.SecurityCallsNotAuthorizedPerSecond.aspx
10505
ServiceModelEndpoint 3.0.0.0 performance counters
10507
The number of calls to this endpoint. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.Calls.aspx
10509
The number of calls to this endpoint per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsPerSecond.aspx
10511
The number of calls to this endpoint that are in progress. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsOutstanding.aspx
10513
The number of calls with unhandled exceptions at this endpoint. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsFailed.aspx
10515
The number of calls with unhandled exceptions at this endpoint per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsFailedPerSecond.aspx
10517
The number of calls to this endpoint that returned faults. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsFaulted.aspx
10519
The number of calls to this endpoint that returned faults per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallsFaultedPerSecond.aspx
10521
The average duration of calls to this endpoint. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.CallDuration.aspx
10523
Base counter for the 'Calls Duration' counter.
10525
The number of transactions that flowed to operations at this endpoint. This counter is incremented any time a transaction ID is present in the message that is sent to the endpoint. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.TxFlowed.aspx
10527
The number of transactions that flowed to operations at this endpoint per second. This counter is incremented any time a transaction ID is present in the message that is sent to the endpoint. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.TxFlowedPerSecond.aspx
10529
The number of calls to this endpoint that failed validation or authentication. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.SecurityValidationAuthenticationFailures.aspx
10531
The number of calls to this endpoint that failed validation or authentication per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.SecurityValidationAuthenticationFailuresPerSecond.aspx
10533
The number of calls to this endpoint that failed authorization. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.SecurityCallsNotAuthorized.aspx
10535
The number of calls to this endpoint that failed authorization per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.SecurityCallsNotAuthorizedPerSecond.aspx
10537
The number of reliable messaging sessions that faulted at this endpoint. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.RMSessionsFaulted.aspx
10539
The number of reliable messaging sessions that faulted at this endpoint per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.RMSessionsFaultedPerSecond.aspx
10541
The number of reliable messaging messages that were dropped at this endpoint. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.RMMessagesDropped.aspx
10543
The number of reliable messaging messages that were dropped at this endpoint per second. http://msdn.microsoft.com/en-US/library/System.ServiceModel.Diagnostics.PerformanceCounters.Endpoint.RMMessagesDroppedPerSecond.aspx
10545
MSDTC Bridge 3.0.0.0 performance counters
10547
The number of WS-AT protocol messages that the WS-AT service failed to send per second.
10549
The number of Prepare retry messages that the WS-AT service has sent per second.
10551
The number of Commit retry messages that the WS-AT service has sent per second.
10553
The number of Prepared retry messages that the WS-AT service has sent per second.
10555
The number of Replay retry messages that the WS-AT service has sent per second.
10557
The number of Fault messages that the WS-AT service has received per second.
10559
The number of Fault messages that the WS-AT service has sent per second.
10561
Average time in milliseconds for the WS-AT service to receive a Prepare message response from a participant.
10563
Base counter for the 'Average participant prepare response time' counter.
10565
Average time in milliseconds for the WS-AT service to receive a Commit message response from a participant.
10567
Base counter for the 'Average participant commit response time' counter.
10785
Gives performance metrics for outlook server connectivity.
10787
Number of RPCs that outlook attempted to send to the server.
10789
Number of RPCs that outlook successfully sent to the server.
10791
Number of RPCs that were attempted, but failed.
10793
Number of RPCs that were sent to the server, but the user cancelled.
10795
Number of RPCs that were sent to the server, and took long enough to show progress UI.
10797
Number of RPCs that outlook attempted that blocked the UI.
10799
The average amount of time (ms) it took for all RPCs to complete successfully.
10801
The average amount of time (ms)it took for the last 10 RPCs to complete successfully.
10803
The average amount of time (ms) it took for the last 50 RPCs to complete successfully.
10805
The average amount of time (ms) it took for the last 200 RPCs to complete successfully.
10807
The minimum amount of time (ms) it took for an RPC to complete successfully.
10809
The maximum amount of time (ms) it took for an RPC to complete successfully.
10811
The number of connection objects that are currently being used.
10813
The number of active objects in the hcot/hsot table.
10815
The number of context handles (AD) that are currently open on the client.
10817
The number of binding handles (AD) that are currently open on the client.
10819
The number of context handles (store) that are currently open on the client.
10821
The number of binding handles (store) that are currently open on the client.
10823
Number of WMI High Performance provider returned by WMI Adapter
10825
Shows High Performance Classes
10827
Shows if High Performance Classes are valid
10829
BatteryStatus
10831
ChargeRate
10833
DischargeRate
10835
RemainingCapacity
10837
Tag
10839
Voltage
10841
ESIF LF Participant
10843
Active 0 trip point value in 1/10 K
10845
Active 1 trip point value in 1/10 K
10847
Active 2 trip point value in 1/10 K
10849
Active 3 trip point value in 1/10 K
10851
Active 4 trip point value in 1/10 K
10853
Active 5 trip point value in 1/10 K
10855
Active 6 trip point value in 1/10 K
10857
Active 7 trip point value in 1/10 K
10859
Active 8 trip point value in 1/10 K
10861
Active 9 trip point value in 1/10 K
10863
AUX 0 trip point value in 1/10 K
10865
AUX 1 trip point value in 1/10 K
10867
Critical trip point value in 1/10 K
10869
Hot trip point value in 1/10 K
10871
Participant RAPL Power Value In .1 Watts
10873
Pasive trip point value in 1/10 K
10875
Participant Temperature Value In 1/10 K
10877
MSiSCSI_ConnectionStatistics
10879
BytesReceived
10881
BytesSent
10883
PDUCommandsSent
10885
PDUResponsesReceived
10887
MSiSCSI_InitiatorInstanceStatistics
10889
SessionConnectionTimeoutErrorCount
10891
SessionDigestErrorCount
10893
SessionFailureCount
10895
SessionFormatErrorCount
10897
MSiSCSI_InitiatorLoginStatistics
10899
LoginAcceptRsps
10901
LoginAuthenticateFails
10903
LoginAuthFailRsps
10905
LoginFailures
10907
LoginNegotiateFails
10909
LoginOtherFailRsps
10911
LoginRedirectRsps
10913
LogoutNormals
10915
LogoutOtherCodes
10917
MSiSCSI_MMIPSECStats
10919
AcquireFailures
10921
AcquireHeapSize
10923
ActiveAcquire
10925
ActiveReceive
10927
AuthenticationFailures
10929
ConnectionListSize
10931
GetSPIFailures
10933
InvalidCookiesReceived
10935
InvalidPackets
10937
KeyAdditionFailures
10939
KeyAdditions
10941
KeyUpdateFailures
10943
KeyUpdates
10945
NegotiationFailures
10947
OakleyMainMode
10949
OakleyQuickMode
10951
ReceiveFailures
10953
ReceiveHeapSize
10955
SendFailures
10957
SoftAssociations
10959
TotalGetSPI
10961
MSiSCSI_NICPerformance
10963
BytesReceived
10965
BytesTransmitted
10967
PDUReceived
10969
PDUTransmitted
10971
MSiSCSI_QMIPSECStats
10973
ActiveSA
10975
ActiveTunnels
10977
AuthenticatedBytesReceived
10979
AuthenticatedBytesSent
10981
BadSPIPackets
10983
ConfidentialBytesReceived
10985
ConfidentialBytesSent
10987
KeyAdditions
10989
KeyDeletions
10991
PacketsNotAuthenticated
10993
PacketsNotDecrypted
10995
PacketsWithReplayDetection
10997
PendingKeyOperations
10999
ReKeys
11001
TransportBytesReceived
11003
TransportBytesSent
11005
TunnelBytesReceived
11007
TunnelBytesSent
11009
MSiSCSI_RequestTimeStatistics
11011
AverageProcessingTime
11013
MaximumProcessingTime
11015
MSiSCSI_SessionStatistics
11017
BytesReceived
11019
BytesSent
11021
ConnectionTimeoutErrors
11023
DigestErrors
11025
FormatErrors
11027
PDUCommandsSent
11029
PDUResponsesReceived
11031
ProcessorPerformance
11033
frequency
11035
percentage
11037
power
6243
WorkflowServiceHost performance counters for workflow service
6245
Total number of workflow instances created since workflow host started.
6247
Rate of workflow instances created per second.
6249
Total number of workflow instances actively executing.
6251
Total  number of workflow instances completed since workflow host started.
6253
Rate of workflow instances completed per second.
6255
Total number of workflow instances aborted since workflow host started.
6257
Rate of workflow instances aborted per second.
6259
Total number of workflow instances currently in memory.
6261
Total number of workflow instances persisted since workflow host started.
6263
Rate of workflow instances persisted per second.
6265
Total number of workflow instances terminated since workflow host started.
6267
Rate of workflow instances terminated per second.
6269
Total number of workflow instances loaded since workflow host started.
6271
Rate of workflow instances loaded per second.
6273
Total number of workflow instances unloaded since workflow host started.
6275
Rate of workflow instances unloaded per second.
6277
Total number of workflow instances suspended since workflow host started.
6279
Rate of workflow instances suspended per second.
6281
Rate of workflow instances becoming idle per second.
6283
Average amount of time to load a workflow instance.
6285
Average base amount of time to load a workflow instance.
6287
Average amount of time to persist a workflow instance.
6289
Average base amount of time to persist a workflow instance.
6325
Terminal Services Summary Information
6327
Number of active Terminal Services sessions
6329
Number of inactive Terminal Services sessions
6331
Total number Terminal services sessions
4807
Information on logical processors.
4809
The global time on this logical processor.
4811
The total time (in 100ns) spent by the processor in guest and hypervisor code.
4813
The total time (in 100ns) spent by the processor in hypervisor code.
4815
The rate of hardware interrupts on the processor (excluding hypervisor interrupts).
4817
The rate of virtual processor context switches on the processor.
4819
The rate of hypervisor inter-processor interrupts delivered to the processor.
4821
The rate of hypervisor scheduler interrupts on the processor.
4823
The rate of hypervisor timer interrupts on the processor.
4825
The rate of hypervisor inter-processor interrupts sent by the processor.
4827
The rate of entries into a halt state by the processor.
4829
The hardware cost of transitions into the hypervisor.
4831
The total time (in nanoseconds) spent switching between virtual processors.
4833
C1 Transitions/sec is the rate that CPU enters the C1 low-power idle state.
4835
% C1 Time is the percentage of time the processor spends in the C1 low-power idle state. % C1 Time is a subset of the total processor idle time.
4837
C2 Transitions/sec is the rate that CPU enters the C2 low-power idle state.
4839
% C2 Time is the percentage of time the processor spends in the C2 low-power idle state. % C2 Time is a subset of the total processor idle time.
4841
C3 Transitions/sec is the rate that CPU enters the C3 low-power idle state.
4843
% C3 Time is the percentage of time the processor spends in the C3 low-power idle state. % C3 Time is a subset of the total processor idle time.
4845
Processor Frequency is the frequency of the current processor in megahertz.
4847
% of Maximum Frequency is the percentage of the current processor's maximum frequency.
4849
Parking Status represents whether a processor is parked or not.
4851
Processor State Flags
4853
Index of the root virtual processor that is affinity bound to this logical processor.  A value that is greater than the maximum possible root VP index indicates no binding.
4855
Idle Sequence Number.
4857
The Global TSC count on this logical processor
4859
Counter that accumulates TSC counts for active periods
4861
Counter that accumulates idle time (in 100ns)
4863
Montonically increasing counter running at processor's nominal rate.
4865
Montonically increasing counter running at processor's actual rate.
4867
Montonically increasing counter running at processor's nominal rate.
4869
Montonically increasing counter running at processor's actual rate.
4871
Proximity Domain Id of the node to which the LP belongs.
4873
The rate of posted interrupt notifications on the processor.
4875
The rate of hypervisor branch predictor flushes.
4877
The rate of hypervisor L1 data cache flushes.
4879
The rate of hypervisor immediate L1 data cache flushes.
4881
The rate of hypervisor microarchitectural buffer flushes.
4883
Sequence number which is incremented when performance counter refresh begins and ends.
4885
Reference time when performance counters were last refreshed.
4887
Counter that accumulates idle time (in 100ns). Updated when performance counters are refreshed.
4889
Counter that accumulates TSC counts for active periods. Updated when performance counters are refreshed.
4891
The rate of hypervisor HWP_REQUEST MSR context switches.
4893
The total time (in 100ns) spent by the processor in guest code.
4895
The total time (in 100ns) spent by the processor in an idle state.
4897
The percentage of time spent by the processor in guest and hypervisor code.
4899
The percentage of time spent by the processor in hypervisor code.
4901
The percentage of time spent by the processor in guest code.
4903
The percentage of time spent by the processor in an idle state.
4905
The rate of hardware and hypervisor interrupts/sec.
4789
Information on the hypervisor.
4791
The number of logical processors present in the system.
4793
The number of partitions (virtual machines) present in the system.
4795
The number of bootstrap and deposited pages in the hypervisor.
4797
The number of virtual processors present in the system.
4799
The number of monitored notifications registered with the hypervisor.
4801
The number of modern/connected standby entry notifications received.
4803
The number of platform idle transitions.
4805
Cycles for Hypervisor Startup on the bootstrap processor.
4907
Information on virtual machines
4909
The number of virtual processors present in the partition.
4911
The number of pages used by the virtual TLB of the partition.
4913
The number of address spaces in the virtual TLB of the partition.
4915
The number of pages deposited into the partition.
4917
The number of pages present in the GPA space of the partition (zero for root partition).
4919
The rate of modifications to the GPA space of the partition.
4921
The rate of flushes of the entire virtual TLB.
4923
The recommended number of pages to be deposited for the virtual TLB.
4925
The number of 4K pages present in the GPA space of the partition.
4927
The number of 2M pages present in the GPA space of the partition.
4929
The number of 1G pages present in the GPA space of the partition.
4931
The number of 512G pages present in the GPA space of the partition.
4933
The number of 4K pages present in the device space of the partition.
4935
The number of 2M pages present in the device space of the partition.
4937
The number of 1G pages present in the device space of the partition.
4939
The number of 512G pages present in the device space of the partition.
4941
The number of devices attached to the partition.
4943
The number of device interrupt mappings used by the partition.
4945
The rate of flushes of I/O TLBs of the partition.
4947
The average time (in nanoseconds) spent processing an I/O TLB flush.
4949
An indicator of illegal interrupt requests generated by all devices assigned to the partition.
4951
An indicator of illegal DMA requests generated by all devices assigned to the partition.
4953
The number of times an interrupt from a device assigned to the partition was temporarily throttled because the device was generating too many interrupts.
4955
The number of timer interrupts skipped for the partition.
4957
The hypervisor partition ID for the partition
4959
The number of pages deposited for the nested TLB.
4961
The recommended number of pages to be deposited for the nested TLB.
4963
The number of free pages in the nested TLB.
4965
The rate of pages trimmed from the nested TLB.
4967
The rate of pages shattered
4969
The rate of pages recombined
4971
The total number of flushes of I/O TLBs of the partition.
4973
Information on virtual processors
4975
The total time (in 100ns) spent by the virtual processor in guest and hypervisor code.
4977
The total time (in 100ns) spent by the virtual processor in hypervisor code.
4979
The time (in 100ns) spent running on remote node(s).
4981
The total time (in 100ns) spent by the virtual processor in guest and hypervisor code, normalized to peak frequency.
4983
The index of the ideal logical processor for this virtual processor.
4985
The rate of hypercalls made by guest code on the virtual processor.
4987
The average time (in nanoseconds) spent processing a hypercall.
4989
The rate of INVLPG instructions executed by guest code on the virtual processor.
4991
The average time (in nanoseconds) spent processing an INVLPG instruction.
4993
The rate of control register accesses by guest code on the virtual processor.
4995
The average time (in nanoseconds) spent processing a control register access.
4997
The rate of IO instructions executed by guest code on the virtual processor.
4999
The average time (in nanoseconds) spent processing an IO instruction.
5001
The rate of HLT instructions executed by guest code on the virtual processor.
5003
The average time (in nanoseconds) spent processing a HLT instruction.
5005
The rate of MWAIT instructions executed by guest code on the virtual processor.
5007
The average time (in nanoseconds) spent processing an MWAIT instruction.
5009
The rate of CPUID instructions executed by guest code on the virtual processor.
5011
The average time (in nanoseconds) spent processing a CPUID instruction.
5013
The rate of MSR instructions executed by guest code on the virtual processor.
5015
The average time (in nanoseconds) spent processing an MSR instruction.
5017
The rate of other intercepts triggered by guest code on the virtual processor.
5019
The average time (in nanoseconds) spent processing other intercepts.
5021
The rate of external interrupts received by the hypervisor while executing guest code on the virtual processor.
5023
The average time (in nanoseconds) spent processing an external interrupt.
5025
The rate of intercepts due to a task priority (TPR) reduction by guest code on the virtual processor.
5027
The average time (in nanoseconds) spent processing a pending interrupt intercept.
5029
The rate of emulated instructions while executing guest code on the virtual processor.
5031
The average time (in nanoseconds) spent emulating an instruction.
5033
The rate of debug register accesses by guest code on the virtual processor.
5035
The average time (in nanoseconds) spent handling a debug register access.
5037
The rate of page fault exceptions intercepted by the hypervisor while executing guest code on the virtual processor.
5039
The average time (in nanoseconds) spent processing a page fault intercept.
5041
The rate of Non-maskable interrupts received by the hypervisor while executing guest code on the virtual processor.
5043
The average time (in nanoseconds) spent processing a non-maskable interrupt.
5045
The rate of map operations for guest page table pages.
5047
The rate of virtual TLB misses on large pages.
5049
The rate of virtual TLB misses on 4K pages.
5051
The rate of page fault exceptions delivered to the guest.
5053
The rate of APIC MMIO register accesses by guest code on the virtual processor.
5055
The rate of IO intercept messages sent to the parent partition.
5057
The rate of memory intercept messages sent to the parent partition.
5059
The rate of APIC EOI register writes by guest code on the virtual processor.
5061
The rate of other intercept messages sent to the parent partition.
5063
The rate of page table allocations in the virtual TLB.
5065
The rate of migrations by the virtual processor to a different logical processor.
5067
The rate of address space evictions in the virtual TLB.
5069
The rate of address space switches by guest code on the virtual processor.
5071
The rate of explicit flushes of the virtual TLB by guest code on the virtual processor.
5073
The rate of explicit flushes of one address space by guest code on the virtual processor.
5075
The rate of explicit flushes of a virtual address range in all address spaces by guest code on the virtual processor.
5077
The rate of explicit flushes of a virtual address range in one address space by guest code on the virtual processor.
5079
The rate of page table evictions in the virtual TLB.
5081
The rate of reclamations of unreferenced page tables in the virtual TLB.
5083
The rate of page table resets in the virtual TLB.
5085
The rate of page table validations to remove stale entries in the virtual TLB.
5087
The rate of APIC TPR accesses by guest code on the virtual processor.
5089
The rate of write intercepts on guest page tables by guest code on the virtual processor.
5091
The rate of synthetic interrupts delivered to the virtual processor.
5093
The rate of interrupts (including synthetic interrupts) delivered to the virtual processor.
5095
The rate of APIC inter-processor interrupts (including to self) sent by the virtual processor.
5097
The rate of APIC interrupts sent by the virtual processor to itself.
5099
The rate of Guest Physical Address Space hypercalls made by guest code on the virtual processor.
5101
The rate of Logical Processor hypercalls made by guest code on the virtual processor.
5103
The rate of Long Spin Wait hypercalls made by guest code on the virtual processor.
5105
The rate of other hypercalls made by guest code on the virtual processor.
5107
The rate of Synthetic Interrupt hypercalls made by guest code on the virtual processor.
5109
The rate of Virtual Interrupt hypercalls made by guest code on the virtual processor.
5111
The rate of Virtual MMU hypercalls made by guest code on the virtual processor.
5113
The rate of Virtual Processor hypercalls made by guest code on the virtual processor.
5115
The rate of hardware interrupts from attached devices on the virtual processor.
5117
The rate of nested page fault exceptions intercepted by the hypervisor while executing the guest virtual processor.
5119
The average time (in nanoseconds) spent processing a nested page fault intercept.
5121
The rate of page scans
5123
The rate of dispatches of this virtual processor onto logical processors.
5125
The average time (in nanoseconds) spent waiting for a virtual processor to be dispatched onto a logical processor.
5127
The number of extended hypercalls made by guest code on the virtual processor.
5129
The rate of extended hypercall intercept messages to the parent partition.
5131
The rate of nested page table switches for mode based execution that the hypervisor initiated while executing the guest virtual processor.
5133
The rate of non-page fault exceptions delivered to the guest.
5135
The rate of flushes of I/O TLBs for all PASIDs made by the virtual processor.
5137
The average time (in nanoseconds) spent processing a global I/O TLB flush.
5139
The rate of flushes of I/O TLBs for one PASID made by the virtual processor.
5141
The average time (in nanoseconds) spent processing a local I/O TLB flush.
5143
The rate of hypercalls forwarded to the nested hypervisor on the virtual processor.
5145
The average time (in nanoseconds) spent forwarding a hypercall.
5147
The rate of INVLPG instructions forwarded to the nested hypervisor on the virtual processor.
5149
The average time (in nanoseconds) spent forwarding an INVLPG instruction.
5151
The rate of control register accesses forwarded to the nested hypervisor on the virtual processor.
5153
The average time (in nanoseconds) spent forwarding a control register access.
5155
The rate of IO instructions forwarded to the nested hypervisor on the virtual processor.
5157
The average time (in nanoseconds) spent forwarding an IO instruction.
5159
The rate of HLT instructions forwarded to the nested hypervisor on the virtual processor.
5161
The average time (in nanoseconds) spent forwarding a HLT instruction.
5163
The rate of MWAIT instructions forwarded to the nested hypervisor on the virtual processor.
5165
The average time (in nanoseconds) spent forwarding an MWAIT instruction.
5167
The rate of CPUID instructions forwarded to the nested hypervisor on the virtual processor.
5169
The average time (in nanoseconds) spent forwarding a CPUID instruction.
5171
The rate of MSR instructions forwarded to the nested hypervisor on the virtual processor.
5173
The average time (in nanoseconds) spent forwarding an MSR instruction.
5175
The rate of other intercepts forwarded to the nested hypervisor on the virtual processor.
5177
The average time (in nanoseconds) spent forwarding other intercepts.
5179
The rate of external interrupts forwarded to the nested hypervisor on the virtual processor.
5181
The average time (in nanoseconds) spent forwarding an external interrupt.
5183
The rate of intercepts due to a task priority (TPR) reduction forwarded to the nested hypervisor on the virtual processor.
5185
The average time (in nanoseconds) spent forwarding a pending interrupt intercept.
5187
The rate of emulated instructions forwarded to the nested hypervisor on the virtual processor.
5189
The average time (in nanoseconds) spent forwareding an emulated instruction.
5191
The rate of debug register accesses forwarded to the nested hypervisor on the virtual processor.
5193
The average time (in nanoseconds) spent forwarding a debug register access.
5195
The rate of page fault exceptions forwarded to the nested hypervisor while executing guest code on the virtual processor.
5197
The average time (in nanoseconds) spent forwarding a page fault intercept.
5199
The rate of VMCLEAR instructions emulated while executing guest code on the virtual processor.
5201
The average time (in nanoseconds) spent enumulating a VMCLEAR instruction.
5203
The rate of VMPTRLD instructions emulated while executing guest code on the virtual processor.
5205
The average time (in nanoseconds) spent enumulating a VMPTRLD instruction.
5207
The rate of VMPTRST instructions emulated while executing guest code on the virtual processor.
5209
The average time (in nanoseconds) spent enumulating a VMPTRST instruction.
5211
The rate of VMREAD instructions emulated while executing guest code on the virtual processor.
5213
The average time (in nanoseconds) spent enumulating a VMREAD instruction.
5215
The rate of VMWRITE instructions emulated while executing guest code on the virtual processor.
5217
The average time (in nanoseconds) spent enumulating a VMWRITE instruction.
5219
The rate of VMXOFF instructions emulated while executing guest code on the virtual processor.
5221
The average time (in nanoseconds) spent enumulating a VMXOFF instruction.
5223
The rate of VMXON instructions emulated while executing guest code on the virtual processor.
5225
The average time (in nanoseconds) spent enumulating a VMXON instruction.
5227
The rate of nested VM entries while executing guest code on the virtual processor.
5229
The average time (in nanoseconds) spent processing a nested VM entry.
5231
The rate of nested SLAT soft page faults while executing guest code on the virtual processor.
5233
The average time (in nanoseconds) spent processing a nested SLAT soft page fault.
5235
The rate of nested SLAT hard page faults while executing guest code on the virtual processor.
5237
The average time (in nanoseconds) spent processing a nested SLAT hard page fault.
5239
The rate of InvEpt All Context instructions emulated while executing guest code on the virtual processor.
5241
The average time (in nanoseconds) spent emulating an InvEpt All Context intercept.
5243
The rate of InvEpt Single Context instructions emulated while executing guest code on the virtual processor.
5245
The average time (in nanoseconds) spent emulating an InvEpt Single Context intercept.
5247
The rate of InvVpid All Context instructions emulated while executing guest code on the virtual processor.
5249
The average time (in nanoseconds) spent emulating an InvVpid All Context intercept.
5251
The rate of InvVpid Single Context instructions emulated while executing guest code on the virtual processor.
5253
The average time (in nanoseconds) spent emulating an InvVpid Single Context intercept.
5255
The rate of InvVpid Single Address instructions emulated while executing guest code on the virtual processor.
5257
The average time (in nanoseconds) spent emulating an InvVpid Single Address intercept.
5259
The rate of reclamations of unlinked page tables in the nested TLB.
5261
The rate of page table evictions in the nested TLB.
5263
The rate of Flush Guest Physical Adress Space hypercalls made by the guest hypervisor on the virtual processor.
5265
The rate of Flush Guest Physical Address List hypercalls made by the guest hypervisor on the virtual processor.
5267
The rate of posted interrupt notifications on the virtual processor.
5269
The rate of posted interrupt scanning on the virtual processor.
5271
The total time (in 100ns) spent by any virtual processor in the same virtual core in guest and hypervisor code for SMT enabled guests.
5273
The total time (in 100ns) the guest was idle.
5275
The total time (in 100ns) spent by the virtual processor in guest code.
5277
The percentage of time spent by the virtual processor in guest and hypervisor code.
5279
The percentage of time spent by the virtual processor in hypervisor code.
5281
The percentage of time spent by the virtual processor in guest code.
5283
The percentage of time spent by the virtual processor in an idle state due to guest code.
5285
The percentage of time spent by any virtual processor in the same virtual core in guest and hypervisor code for SMT enabled guests.
5287
The rate of total messages sent to the parent partition.
5289
The total count of all the hypervisor intercepts messages.
5291
The rate of hypervisor intercepts messages.
5293
The average time (in nanoseconds) spent handling a hypervisor intercept.
5295
The percentage of time spent by the virtual processor running on a remote node.
5297
The total count of virtualization instructions emulated on the virtual processor.
5299
The rate of virtualization instructions emulated.
5301
The average time (in nanoseconds) spent emulating a virtualization extension instruction.
5303
A constant rate time source that is used as by a number of performance counters for duration calculations.
5305
The total number of hypercalls made by guest code on the virtual processor.
5307
The total number of INVLPG instructions executed by guest code on the virtual processor.
5309
The total number of control register accesses by guest code on the virtual processor.
5311
The total number of IO instructions executed by guest code on the virtual processor.
5313
The total number of HLT instructions executed by guest code on the virtual processor.
5315
The total number of MWAIT instructions executed by guest code on the virtual processor.
5317
The total number of CPUID instructions executed by guest code on the virtual processor.
5319
The total number of MSR instructions by guest code on the virtual processor.
5321
The total number of other intercepts triggered by guest code on the virtual processor.
5323
The total number of external interrupts received by the hypervisor while executing guest code on the virtual processor.
5325
The total number of intercepts due to a task priority (TPR) reduction by guest code on the virtual processor.
5327
The total number of emulated instructions while executing guest code on the virtual processor.
5329
The total number of debug register accesses by guest code on the virtual processor.
5331
The total number of page fault exceptions intercepted by the hypervisor while executing guest code on the virtual processor.
5333
The total number of Non-maskable interrupts received by the hypervisor while executing guest code on the virtual processor.
5335
The total number of nested page fault exceptions intercepted by the hypervisor while executing the virtual processor.
5337
The total number of dispatches of this virtual processor onto logical processors.
5339
The total number of flushes of I/O TLBs for all PASIDs made by the virtual processor.
5341
The total number of flushes of I/O TLBs for one PASID made by the virtual processor.
5343
The total number of hypercalls forwarded to the nested hypervisor on the virtual processor.
5345
The total number of INVLPG instructions forwarded to the nested hypervisor on the virtual processor.
5347
The total number of control register accesses forwarded to the nested hypervisor on the virtual processor.
5349
The total number of IO instructions forwarded to the nested hypervisor on the virtual processor.
5351
The total number of HLT instructions forwarded to the nested hypervisor on the virtual processor.
5353
The total number of MWAIT instructions forwarded to the nested hypervisor on the virtual processor.
5355
The total number of CPUID instructions forwarded to the nested hypervisor on the virtual processor.
5357
The total number of MSR instructions forwarded to the nested hypervisor on the virtual processor.
5359
The total number of other intercepts forwarded to the nested hypervisor on the virtual processor.
5361
The total number of external interrupts forwarded to the nested hypervisor on the virtual processor.
5363
The total number of intercepts due to a task priority (TPR) reduction forwarded to the nested hypervisor on the virtual processor.
5365
The total number of emulated instructions forwarded to the nested hypervisor on the virtual processor.
5367
The total number of debug register accesses forwarded to the nested hypervisor on the virtual processor.
5369
The total number of page fault exceptions forwarded to the nested hypervisor on the virtual processor.
5371
The total number of VMCLEAR instructions emulated on the virtual processor.
5373
The total number of VMPTRLD instructions emulated on the virtual processor.
5375
The total number of VMPTRST instructions emulated on the virtual processor.
5377
The total number of VMREAD instructions emulated on the virtual processor.
5379
The total number of VMWRITE instructions emulated on the virtual processor.
5381
The total number of VMXOFF instructions emulated on the virtual processor.
5383
The total number of VMXON instructions emulated on the virtual processor.
5385
The total number of nested VM entries on the virtual processor.
5387
The total number of nested SLAT soft page faults on the virtual processor.
5389
The total number of nested SLAT hard page faults on the virtual processor.
5391
The total number of InvEpt All Context instructions emulated on the virtual processor.
5393
The total number of InvEpt Single Context instructions emulated on the virtual processor.
5395
The total number of InvVpid All Context instructions emulated on the virtual processor.
5397
The total number of InvVpid Single Context instructions emulated on the virtual processor.
5399
The total number of InvVpid Single Address instructions emulated on the virtual processor.
6391
The Pacer Flow performance counter set consists of flow statistics from the packet scheduler.
6393
The number of packets dropped by the packet scheduler.
6395
The number of packets which got scheduled in some way (rather than just being directly sent to the underlying miniport).
6397
The number of packets from this flow which have been sent.
6399
The number of bytes which got scheduled in some way (rather than just being directly sent to the underlying miniport).
6401
The number of bytes from this flow which have been sent.
6403
The number of bytes per second from this flow which have been sent.
6405
The number of bytes per second from this flow which have been scheduled.
6407
The number of packets per second from this flow which have been sent.
6409
The number of packets per second from this flow which have been scheduled.
6411
The number of packets dropped by the packet scheduler from this flow per second.
6413
The number of packets that have entered the packet scheduler at a rate which exceeded the flow parameters.
6415
The rate at which nonconforming packets have entered the packet scheduler.
6417
The average number of packets in the shaper over the last sampling period.
6419
The maximum number of packets that have ever simultaneously been in the shaper.
6421
The average number of packets in the sequencer over the last sampling period.
6423
The maximum number of packets that have ever simultaneously been in the sequencer.
6425
The maximum number of packets that have been queued in the netcard by this flow.
6427
The average number of packets that have been queued in the netcard by this flow.
6429
The number of packets that have been sent by the packet scheduler at a rate which exceeded the flow parameters.
6431
The rate at which nonconforming packets have been sent by the packet scheduler.
6433
The Pacer Pipe performance counter set consists of pipe statistics from the packet scheduler.
6435
The number of times Pacer has been unable to allocate a packet.
6437
The number of flows opened on this pipe (some of which may now be closed).
6439
The number of flows that have been closed.
6441
The number of flow creations that were rejected.
6443
The number of times a flow has been modified.
6445
The number of times a flow modification has been rejected.
6447
The maximum number of flows that have been simultaneously open on this pipe.
6449
The number of packets that have entered the packet scheduler at a rate which exceeded that packet's flow parameters.
6451
The rate at which nonconforming packets have entered the packet scheduler.
6453
The average number of packets in the shaper over the last sampling period.
6455
The maximum number of packets that have ever simultaneously been in the shaper.
6457
The average number of packets in the sequencer over the last sampling period.
6459
The maximum number of packets that have ever simultaneously been in the sequencer.
6461
The maximum number of packets ever simultaneously in the network card.
6463
The average number of packets in the network card over the last sampling period.
6465
The number of packets that have been sent by the packet scheduler at a rate which exceeded that packet's flow parameters.
6467
The rate at which nonconforming packets have been sent by the packet scheduler.
4395
Generic IKEv1, AuthIP, and IKEv2 is the set of Internet Protocol security (IPsec) Internet Key Exchange Version 1 (IKEv1), Authenticated IP (AuthIP), and Internet Key Exchange Version 2 (IKEv2) counters that are generic and do not apply to a specific Internet Protocol version.
4397
IKEv1 Main Mode Negotiation Time is the number of milliseconds taken for the last IKEv1 main mode security association negotiated.
4399
AuthIP Main Mode Negotiation Time is the number of milliseconds taken for the last Authenticated IP main mode security association negotiated.
4401
IKEv1 Quick Mode Negotiation Time is the number of milliseconds taken for the last IKEv1 quick mode security association negotiated.
4403
AuthIP Quick Mode Negotiation Time is the number of milliseconds taken for the last Authenticated IP quick mode security association negotiated.
4405
Extended Mode Negotiation Time is the number of milliseconds taken for the last extended mode security association negotiated.
4407
Packets Received per Second is the rate at which validated IPsec packets are being received.
4409
Invalid Packets Received per Second is the rate at which invalid IPsec packets are being received.
4411
Successful Negotiations is the number of negotiations completed for IKEv1, AuthIP, and IKEv2 since IPsec was last started.
4413
Successful Negotiations per Second is the rate of negotiations completed for IKEv1, AuthIP, and IKEv2.
4415
Failed Negotiations is the number of failed negotiations for IKEv1, AuthIP, and IKEv2 since IPsec was last started.
4417
Failed Negotiations per Second is the rate of failed negotiations attempted for IKEv1, AuthIP, and IKEv2.
4419
IKEv2 Main Mode Negotiation Time is the number of milliseconds taken for the last IKEv2 main mode security association negotiated.
4421
IKEv2 Quick Mode Negotiation Time is the number of milliseconds taken for the last IKEv2 quick mode security association negotiated.
4423
IPsec IKEv2 IPv4 is the set of Internet Protocol security (IPsec) Internet Key Exchange version 2 (IKEv2) counters that apply to traffic and connections over Internet Protocol version 4.
4425
Active Main Mode SAs is the number of currently active main mode security associations.
4427
Pending Main Mode Negotiations is the number of pending main mode negotiations.
4429
Main Mode Negotiations is the number of main mode negotiations attempted since IPsec was last started.
4431
Main Mode Negotiations per Second is the rate at which main mode negotiations are being attempted.
4433
Successful Main Mode Negotiations is the number of main mode negotiations completed since IPsec was last started.
4435
Successful Main Mode Negotiations per Second is the rate of main mode negotiations completed.
4437
Failed Main Mode Negotiations is the number of failed main mode negotiations since IPsec was last started.
4439
Failed Main Mode Negotiations per Second is the rate of failed main mode negotiations.
4441
Main Mode Negotiation Requests Received is the number of main mode negotiations initiated by a peer since IPsec was last started.
4443
Main Mode Negotiation Requests Received per Second is the rate of main mode negotiations initiated by a peer.
4445
Active Quick Mode SAs is the number of currently active quick mode security associations.
4447
Pending Quick Mode Negotiations is the number of pending quick mode negotiations.
4449
Quick Mode Negotiations is the number of quick mode negotiations attempted since IPsec was last started.
4451
Quick Mode Negotiations per Second is the rate at which quick mode negotiations are being attempted.
4453
Successful Quick Mode Negotiations is the number of quick mode negotiations completed since IPsec was last started.
4455
Successful Quick Mode Negotiations per Second is the rate of quick mode negotiations completed.
4457
Failed Quick Mode Negotiations is the number of failed quick mode negotiations since IPsec was last started.
4459
Failed Quick Mode Negotiations per Second is the rate of failed quick mode negotiations.
4275
IPsec AuthIP IPv4 is the set of Internet Protocol security (IPsec) Authenticated IP (AuthIP) counters that apply to traffic and connections over Internet Protocol version 4.
4277
Active Main Mode SAs is the number of currently active main mode security associations.
4279
Pending Main Mode Negotiations is the number of pending main mode negotiations.
4281
Main Mode Negotiations is the number of main mode negotiations attempted since IPsec was last started.
4283
Main Mode Negotiations per Second is the rate at which main mode negotiations are being attempted.
4285
Successful Main Mode Negotiations is the number of main mode negotiations completed since IPsec was last started.
4287
Successful Main Mode Negotiations per Second is the rate of main mode negotiations completed.
4289
Failed Main Mode Negotiations is the number of failed main mode negotiations since IPsec was last started.
4291
Failed Main Mode Negotiations per Second is the rate of failed main mode negotiations.
4293
Main Mode Negotiation Requests Received is the number of main mode negotiations initiated by a peer since IPsec was last started.
4295
Main Mode Negotiation Requests Received per Second is the rate of main mode negotiations initiated by a peer.
4297
Main Mode SAs That Used Impersonation is the number of main mode security associations completed using impersonation since IPsec was last started.
4299
Main Mode SAs That Used Impersonation per Second is the rate of main mode security associations completed using impersonation.
4301
Active Quick Mode SAs is the number of currently active quick mode security associations.
4303
Pending Quick Mode Negotiations is the number of pending quick mode negotiations.
4305
Quick Mode Negotiations is the number of quick mode negotiations attempted since IPsec was last started.
4307
Quick Mode Negotiations per Second is the rate at which quick mode negotiations are being attempted.
4309
Successful Quick Mode Negotiations is the number of quick mode negotiations completed since IPsec was last started.
4311
Successful Quick Mode Negotiations per Second is the rate of quick mode negotiations completed.
4313
Failed Quick Mode Negotiations is the number of failed quick mode negotiations since IPsec was last started.
4315
Failed Quick Mode Negotiations per Second is the rate of failed quick mode negotiations.
4317
Active Extended Mode SAs is the number of currently active extended mode security associations.
4319
Pending Extended Mode Negotiations is the number of pending extended mode negotiations.
4321
Extended Mode Negotiations is the number of extended mode negotiations attempted since IPsec was last started.
4323
Extended Mode Negotiations per Second is the rate at which extended mode negotiations are being attempted.
4325
Successful Extended Mode Negotiations is the number of extended mode negotiations completed since IPsec was last started.
4327
Successful Extended Mode Negotiations per Second is the rate of extended mode negotiations completed.
4329
Failed Extended Mode Negotiations is the number of failed extended mode negotiations since IPsec was last started.
4331
Failed Extended Mode Negotiations per Second is the rate of failed extended mode negotiations.
4333
Extended Mode SAs That Used Impersonation is the number of extended mode security associations completed using impersonation since IPsec was last started.
4499
IPsec Connections is the set of Internet Protocol security (IPsec) counters that apply to IPsec encapsulated connections.
4501
Total Number current Connections
4503
Total number of cumulative connections since boot
4505
Max number of connections since boot
4507
Total Bytes In since boot
4509
Total Bytes Out since boot
4511
Number of failed authentications
4335
IPsec AuthIP IPv6 is the set of Internet Protocol security (IPsec) Authenticated IP (AuthIP) counters that apply to traffic and connections over Internet Protocol version 6.
4337
Active Main Mode SAs is the number of currently active main mode security associations.
4339
Pending Main Mode Negotiations is the number of pending main mode negotiations.
4341
Main Mode Negotiations is the number of main mode negotiations attempted since IPsec was last started.
4343
Main Mode Negotiations per Second is the rate at which main mode negotiations are being attempted.
4345
Successful Main Mode Negotiations is the number of main mode negotiations completed since IPsec was last started.
4347
Successful Main Mode Negotiations per Second is the rate of main mode negotiations completed.
4349
Failed Main Mode Negotiations is the number of failed main mode negotiations since IPsec was last started.
4351
Failed Main Mode Negotiations per Second is the rate of failed main mode negotiations.
4353
Main Mode Negotiation Requests Received is the number of main mode negotiations initiated by a peer since IPsec was last started.
4355
Main Mode Negotiation Requests Received per Second is the rate of main mode negotiations initiated by a peer.
4357
Main Mode SAs That Used Impersonation is the number of main mode security associations completed using impersonation since IPsec was last started.
4359
Main Mode SAs That Used Impersonation per Second is the rate of main mode security associations completed using impersonation.
4361
Active Quick Mode SAs is the number of currently active quick mode security associations.
4363
Pending Quick Mode Negotiations is the number of pending quick mode negotiations.
4365
Quick Mode Negotiations is the number of quick mode negotiations attempted since IPsec was last started.
4367
Quick Mode Negotiations per Second is the rate at which quick mode negotiations are being attempted.
4369
Successful Quick Mode Negotiations is the number of quick mode negotiations completed since IPsec was last started.
4371
Successful Quick Mode Negotiations per Second is the rate of quick mode negotiations completed.
4373
Failed Quick Mode Negotiations is the number of failed quick mode negotiations since IPsec was last started.
4375
Failed Quick Mode Negotiations per Second is the rate of failed quick mode negotiations.
4377
Active Extended Mode SAs is the number of currently active extended mode security associations.
4379
Pending Extended Mode Negotiations is the number of pending extended mode negotiations.
4381
Extended Mode Negotiations is the number of extended mode negotiations attempted since IPsec was last started.
4383
Extended Mode Negotiations per Second is the rate at which extended mode negotiations are being attempted.
4385
Successful Extended Mode Negotiations is the number of extended mode negotiations completed since IPsec was last started.
4387
Successful Extended Mode Negotiations per Second is the rate of extended mode negotiations completed.
4389
Failed Extended Mode Negotiations is the number of failed extended mode negotiations since IPsec was last started.
4391
Failed Extended Mode Negotiations per Second is the rate of failed extended mode negotiations.
4393
Extended Mode SAs That Used Impersonation is the number of extended mode security associations completed using impersonation since IPsec was last started.
4461
IPsec IKEv2 IPv6 is the set of Internet Protocol security (IPsec) Internet Key Exchange version 2 (IKEv2) counters that apply to traffic and connections over Internet Protocol version 6.
4463
Active Main Mode SAs is the number of currently active main mode security associations.
4465
Pending Main Mode Negotiations is the number of pending main mode negotiations.
4467
Main Mode Negotiations is the number of main mode negotiations attempted since IPsec was last started.
4469
Main Mode Negotiations per Second is the rate at which main mode negotiations are being attempted.
4471
Successful Main Mode Negotiations is the number of main mode negotiations completed since IPsec was last started.
4473
Successful Main Mode Negotiations per Second is the rate of main mode negotiations completed.
4475
Failed Main Mode Negotiations is the number of failed main mode negotiations since IPsec was last started.
4477
Failed Main Mode Negotiations per Second is the rate of failed main mode negotiations.
4479
Main Mode Negotiation Requests Received is the number of main mode negotiations initiated by a peer since IPsec was last started.
4481
Main Mode Negotiation Requests Received per Second is the rate of main mode negotiations initiated by a peer.
4483
Active Quick Mode SAs is the number of currently active quick mode security associations.
4485
Pending Quick Mode Negotiations is the number of pending quick mode negotiations.
4487
Quick Mode Negotiations is the number of quick mode negotiations attempted since IPsec was last started.
4489
Quick Mode Negotiations per Second is the rate at which quick mode negotiations are being attempted.
4491
Successful Quick Mode Negotiations is the number of quick mode negotiations completed since IPsec was last started.
4493
Successful Quick Mode Negotiations per Second is the rate of quick mode negotiations completed.
4495
Failed Quick Mode Negotiations is the number of failed quick mode negotiations since IPsec was last started.
4497
Failed Quick Mode Negotiations per Second is the rate of failed quick mode negotiations.
4075
WFPv4 is the set of Windows Filtering Platform counters that apply to traffic and connections over Internet Protocol version 4.
4077
Inbound Packets Discarded per Second is the rate at which inbound packets are discarded by the Windows Filtering Platform.
4079
Outbound Packets Discarded per Second is the rate at which outbound packets are discarded by the Windows Filtering Platform.
4081
Packets Discarded per Second is the rate at which the total of inbound and outbound packets are discarded by the Windows Filtering Platform.
4083
Blocked Binds is the number of network resource assignment requests blocked by the Windows Filtering Platform since the computer was last started.
4085
Inbound Connections Blocked per Second is the rate at which inbound connections are being blocked by the Windows Filtering Platform.
4087
Outbound Connections Blocked per Second is the rate at which outbound connections are being blocked by the Windows Filtering Platform.
4089
Inbound Connections Allowed per Second is the rate at which inbound connections are being allowed by the Windows Filtering Platform.
4091
Outbound Connections Allowed per Second is the rate at which outbound connections are being allowed by the Windows Filtering Platform.
4093
Inbound Connections is the number of inbound connections allowed by the Windows Filtering Platform since the computer was last started.
4095
Outbound Connections is the number of outbound connections allowed by the Windows Filtering Platform since the computer was last started.
4097
Active Inbound Connections is the number of current inbound connections allowed by the Windows Filtering Platform.
4099
Active Outbound Connections is the number of current outbound connections allowed by the Windows Filtering Platform.
4101
Allowed Classifies per Second is the rate of Windows Filtering Platform security rule evaluations which allow network activity.
4199
IPsec IKEv1 IPv4 is the set of Internet Protocol security (IPsec) Internet Key Exchange version 1 (IKEv1) counters that apply to traffic and connections over Internet Protocol version 4.
4201
Active Main Mode SAs is the number of currently active main mode security associations.
4203
Pending Main Mode Negotiations is the number of pending main mode negotiations.
4205
Main Mode Negotiations is the number of main mode negotiations attempted since IPsec was last started.
4207
Main Mode Negotiations per Second is the rate at which main mode negotiations are being attempted.
4209
Successful Main Mode Negotiations is the number of main mode negotiations completed since IPsec was last started.
4211
Successful Main Mode Negotiations per Second is the rate of main mode negotiations completed.
4213
Failed Main Mode Negotiations is the number of failed main mode negotiations since IPsec was last started.
4215
Failed Main Mode Negotiations per Second is the rate of failed main mode negotiations.
4217
Main Mode Negotiation Requests Received is the number of main mode negotiations initiated by a peer since IPsec was last started.
4219
Main Mode Negotiation Requests Received per Second is the rate of main mode negotiations initiated by a peer.
4221
Active Quick Mode SAs is the number of currently active quick mode security associations.
4223
Pending Quick Mode Negotiations is the number of pending quick mode negotiations.
4225
Quick Mode Negotiations is the number of quick mode negotiations attempted since IPsec was last started.
4227
Quick Mode Negotiations per Second is the rate at which quick mode negotiations are being attempted.
4229
Successful Quick Mode Negotiations is the number of quick mode negotiations completed since IPsec was last started.
4231
Successful Quick Mode Negotiations per Second is the rate of quick mode negotiations completed.
4233
Failed Quick Mode Negotiations is the number of failed quick mode negotiations since IPsec was last started.
4235
Failed Quick Mode Negotiations per Second is the rate of failed quick mode negotiations.
4237
IPsec IKEv1 IPv6 is the set of Internet Protocol security (IPsec) Internet Key Exchange version 1 (IKEv1) counters that apply to traffic and connections over Internet Protocol version 6.
4239
Active Main Mode SAs is the number of currently active main mode security associations.
4241
Pending Main Mode Negotiations is the number of pending main mode negotiations.
4243
Main Mode Negotiations is the number of main mode negotiations attempted since IPsec was last started.
4245
Main Mode Negotiations per Second is the rate at which main mode negotiations are being attempted.
4247
Successful Main Mode Negotiations is the number of main mode negotiations completed since IPsec was last started.
4249
Successful Main Mode Negotiations per Second is the rate of main mode negotiations completed.
4251
Failed Main Mode Negotiations is the number of failed main mode negotiations since IPsec was last started.
4253
Failed Main Mode Negotiations per Second is the rate of failed main mode negotiations.
4255
Main Mode Negotiation Requests Received is the number of main mode negotiations initiated by a peer since IPsec was last started.
4257
Main Mode Negotiation Requests Received per Second is the rate of main mode negotiations initiated by a peer.
4259
Active Quick Mode SAs is the number of currently active quick mode security associations.
4261
Pending Quick Mode Negotiations is the number of pending quick mode negotiations.
4263
Quick Mode Negotiations is the number of quick mode negotiations attempted since IPsec was last started.
4265
Quick Mode Negotiations per Second is the rate at which quick mode negotiations are being attempted.
4267
Successful Quick Mode Negotiations is the number of quick mode negotiations completed since IPsec was last started.
4269
Successful Quick Mode Negotiations per Second is the rate of quick mode negotiations completed.
4271
Failed Quick Mode Negotiations is the number of failed quick mode negotiations since IPsec was last started.
4273
Failed Quick Mode Negotiations per Second is the rate of failed quick mode negotiations.
4513
WFP Classify is the set of Windows Filtering Platform (WFP) counters that pertain to classifation calls.
4515
Sum total of all classify layers
4517
FWPM_LAYER_INBOUND_IPPACKET_V4
4519
FWPM_LAYER_INBOUND_IPPACKET_V4_DISCARD
4521
FWPM_LAYER_INBOUND_IPPACKET_V6
4523
FWPM_LAYER_INBOUND_IPPACKET_V6_DISCARD
4525
FWPM_LAYER_OUTBOUND_IPPACKET_V4
4527
FWPM_LAYER_OUTBOUND_IPPACKET_V4_DISCARD
4529
FWPM_LAYER_OUTBOUND_IPPACKET_V6
4531
FWPM_LAYER_OUTBOUND_IPPACKET_V6_DISCARD
4533
FWPM_LAYER_IPFORWARD_V4
4535
FWPM_LAYER_IPFORWARD_V4_DISCARD
4537
FWPM_LAYER_IPFORWARD_V6
4539
FWPM_LAYER_IPFORWARD_V6_DISCARD
4541
FWPM_LAYER_INBOUND_TRANSPORT_V4
4543
FWPM_LAYER_INBOUND_TRANSPORT_V4_DISCARD
4545
FWPM_LAYER_INBOUND_TRANSPORT_V6
4547
FWPM_LAYER_INBOUND_TRANSPORT_V6_DISCARD
4549
FWPM_LAYER_OUTBOUND_TRANSPORT_V4
4551
FWPM_LAYER_OUTBOUND_TRANSPORT_V4_DISCARD
4553
FWPM_LAYER_OUTBOUND_TRANSPORT_V6
4555
FWPM_LAYER_OUTBOUND_TRANSPORT_V6_DISCARD
4557
FWPM_LAYER_STREAM_V4
4559
FWPM_LAYER_STREAM_V4_DISCARD
4561
FWPM_LAYER_STREAM_V6
4563
FWPM_LAYER_STREAM_V6_DISCARD
4565
FWPM_LAYER_DATAGRAM_DATA_V4
4567
FWPM_LAYER_DATAGRAM_DATA_V4_DISCARD
4569
FWPM_LAYER_DATAGRAM_DATA_V6
4571
FWPM_LAYER_DATAGRAM_DATA_V6_DISCARD
4573
FWPM_LAYER_INBOUND_ICMP_ERROR_V4
4575
FWPM_LAYER_INBOUND_ICMP_ERROR_V4_DISCARD
4577
FWPM_LAYER_INBOUND_ICMP_ERROR_V6
4579
FWPM_LAYER_INBOUND_ICMP_ERROR_V6_DISCARD
4581
FWPM_LAYER_OUTBOUND_ICMP_ERROR_V4
4583
FWPM_LAYER_OUTBOUND_ICMP_ERROR_V4_DISCARD
4585
FWPM_LAYER_OUTBOUND_ICMP_ERROR_V6
4587
FWPM_LAYER_OUTBOUND_ICMP_ERROR_V6_DISCARD
4589
FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V4
4591
FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V4_DISCARD
4593
FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V6
4595
FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V6_DISCARD
4597
FWPM_LAYER_ALE_AUTH_LISTEN_V4
4599
FWPM_LAYER_ALE_AUTH_LISTEN_V4_DISCARD
4601
FWPM_LAYER_ALE_AUTH_LISTEN_V6
4603
FWPM_LAYER_ALE_AUTH_LISTEN_V6_DISCARD
4605
FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4
4607
FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4_DISCARD
4609
FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V6
4611
FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V6_DISCARD
4613
FWPM_LAYER_ALE_AUTH_CONNECT_V4
4615
FWPM_LAYER_ALE_AUTH_CONNECT_V4_DISCARD
4617
FWPM_LAYER_ALE_AUTH_CONNECT_V6
4619
FWPM_LAYER_ALE_AUTH_CONNECT_V6_DISCARD
4621
FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4
4623
FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4_DISCARD
4625
FWPM_LAYER_ALE_FLOW_ESTABLISHED_V6
4627
FWPM_LAYER_ALE_FLOW_ESTABLISHED_V6_DISCARD
4629
FWPM_LAYER_INBOUND_MAC_FRAME_ETHERNET
4631
FWPM_LAYER_OUTBOUND_MAC_FRAME_ETHERNET
4633
FWPM_LAYER_INBOUND_MAC_FRAME_NATIVE
4635
FWPM_LAYER_OUTBOUND_MAC_FRAME_NATIVE
4637
FWPM_LAYER_NAME_RESOLUTION_CACHE_V4
4639
FWPM_LAYER_NAME_RESOLUTION_CACHE_V6
4641
FWPM_LAYER_ALE_RESOURCE_RELEASE_V4
4643
FWPM_LAYER_ALE_RESOURCE_RELEASE_V6
4645
FWPM_LAYER_ALE_ENDPOINT_CLOSURE_V4
4647
FWPM_LAYER_ALE_ENDPOINT_CLOSURE_V6
4649
FWPM_LAYER_ALE_CONNECT_REDIRECT_V4
4651
FWPM_LAYER_ALE_CONNECT_REDIRECT_V6
4653
FWPM_LAYER_ALE_BIND_REDIRECT_V4
4655
FWPM_LAYER_ALE_BIND_REDIRECT_V6
4657
FWPM_LAYER_STREAM_PACKET_V4
4659
FWPM_LAYER_STREAM_PACKET_V6
4661
FWPM_LAYER_INGRESS_VSWITCH_ETHERNET
4663
FWPM_LAYER_EGRESS_VSWITCH_ETHERNET
4665
FWPM_LAYER_INGRESS_VSWITCH_TRANSPORT_V4
4667
FWPM_LAYER_INGRESS_VSWITCH_TRANSPORT_V6
4669
FWPM_LAYER_EGRESS_VSWITCH_TRANSPORT_V4
4671
FWPM_LAYER_EGRESS_VSWITCH_TRANSPORT_V6
4673
FWPM_LAYER_INBOUND_TRANSPORT_FAST
4675
FWPM_LAYER_OUTBOUND_TRANSPORT_FAST
4677
FWPM_LAYER_INBOUND_MAC_FRAME_NATIVE_FAST
4679
FWPM_LAYER_OUTBOUND_MAC_FRAME_NATIVE_FAST
4681
FWPM_LAYER_ALE_PRECLASSIFY_IP_LOCAL_ADDRESS_V4
4683
FWPM_LAYER_ALE_PRECLASSIFY_IP_REMOTE_ADDRESS_V4
4685
FWPM_LAYER_ALE_PRECLASSIFY_IP_LOCAL_PORT_V4
4687
FWPM_LAYER_ALE_PRECLASSIFY_IP_REMOTE_PORT_V4
4689
FWPM_LAYER_ALE_PRECLASSIFY_IP_LOCAL_ADDRESS_V6
4691
FWPM_LAYER_ALE_PRECLASSIFY_IP_REMOTE_ADDRESS_V6
4693
FWPM_LAYER_ALE_PRECLASSIFY_IP_LOCAL_PORT_V6
4695
FWPM_LAYER_ALE_PRECLASSIFY_IP_REMOTE_PORT_V6
4697
FWPM_LAYER_INBOUND_SSL_THROTTLING
4699
FWPM_LAYER_IPSEC_KM_DEMUX_V4
4701
FWPM_LAYER_IPSEC_KM_DEMUX_V6
4703
FWPM_LAYER_IPSEC_V4
4705
FWPM_LAYER_IPSEC_V6
4707
FWPM_LAYER_IKEEXT_V4
4709
FWPM_LAYER_IKEEXT_V6
4711
FWPM_LAYER_RPC_UM
4713
FWPM_LAYER_RPC_EPMAP
4715
FWPM_LAYER_RPC_EP_ADD
4717
FWPM_LAYER_RPC_PROXY_CONN
4719
FWPM_LAYER_RPC_PROXY_IF
4721
FWPM_LAYER_KM_AUTHORIZATION
4135
IPsec Driver is the set of Internet Protocol security (IPsec) driver counters that apply to traffic over Internet Protocol version 4 and Internet Protocol version 6.
4137
Active Security Associations is the number of active quick mode security associations.
4139
Pending Security Associations is the number of pending quick mode security associations.
4141
Incorrect SPI packets is the number of packets for which the Security Parameter Index (SPI) was incorrect since the computer was last started. A large number of packets with bad SPIs within a short amount of time might indicate a packet spoofing attack.
4143
Incorrect SPI packets per Second is the rate of packets for which the Security Parameter Index (SPI) was incorrect since the computer was last started. A large number of packets with bad SPIs within a short amount of time might indicate a packet spoofing attack.
4145
Bytes Received in Tunnel Mode per Second is the rate of bytes received using tunnel mode.
4147
Bytes Sent in Tunnel Mode per Second is the rate of bytes sent using tunnel mode.
4149
Bytes Received in Transport Mode per Second is the rate of bytes received using transport mode.
4151
Bytes Sent in Transport Mode per Second is the rate of bytes sent using transport mode.
4153
Offloaded Security Associations is the number of active quick mode security associations offloaded to hardware. Certain network adapters can accelerate IPsec processing by performing hardware offload of IPsec cryptographic functions.
4155
Offloaded Bytes Received per Second is the rate of bytes received using IPsec hardware offload. Certain network adapters can accelerate IPsec processing by performing hardware offload of IPsec cryptographic functions.
4157
Offloaded Bytes Sent per Second is the rate of bytes sent using IPsec hardware offload. Certain network adapters can accelerate IPsec processing by performing hardware offload of IPsec cryptographic functions.
4159
Packets That Failed Replay Detection is the number of packets that contained an invalid sequence number since the computer was last started. Increases in this counter might indicate a network problem or replay attack.
4161
Packets That Failed Replay Detection per Second is the rate of packets that contained an invalid sequence number since the computer was last started. Increases in this counter might indicate a network problem or replay attack.
4163
Packets Not Authenticated is the number of packets for which data could not be verified (for which the integrity hash verification failed) since the computer was last started. Increases in this counter might indicate an IPsec packet spoofing or modification attack, or packet corruption by network devices.
4165
Packets Not Authenticated per Second is the rate of packets for which data could not be verified (for which the integrity hash verification failed) since the computer was last started. Increases in this counter might indicate an IPsec packet spoofing or modification attack, or packet corruption by network devices.
4167
Packets Not Decrypted is the number of packets that could not be decrypted since the computer was last started. A packet might not be decrypted if it fails a validation check.
4169
Packets Not Decrypted per Second is the rate of packets that could not be decrypted since the computer was last started. A packet might not be decrypted if it fails a validation check.
4171
SA Rekeys is the number of successful rekey operations for quick mode security associations since the computer was last started.
4173
Security Associations Added is the number of security associations added since the computer was last started.
4175
Packets That Failed ESP Validation is the number of packets received that failed ESP validation since the computer was last started.
4177
Packets That Failed ESP Validation per Second is the rate of packets received that failed ESP validation since the computer was last started.
4179
Packets That Failed UDP-ESP Validation is the number of packets received that failed UDP-ESP validation (used for NAT traversal) since the computer was last started.
4181
Packets That Failed UDP-ESP Validation per Second is the rate of packets received that failed UDP-ESP validation (used for NAT traversal) since the computer was last started.
4183
Packets Received Over Wrong SA is the number of packets received over the wrong security association since the computer was last started.
4185
Packets Received Over Wrong SA per Second is the rate of packets received over the wrong security association since the computer was last started.
4187
Plaintext Packets Received is the number of clear text packets received since the computer was last started.
4189
Plaintext Packets Received per Second is the rate of clear text packets received since the computer was last started.
4191
Total Inbound Packets Received is the total number of inbound packets successfully processed by IPsec, since the computer was last started.
4193
Inbound Packets Received per Second is the rate of inbound packets successfully processed by IPsec.
4195
Total Inbound Packets Dropped is the total number of inbound packets dropped by IPsec, since the computer was last started.
4197
Inbound Packets Dropped per Second is the rate of inbound packets dropped by IPsec.
4131
WFP is the set of Windows Filtering Platform counters that do not apply to any specific Internet Protocol version.
4133
Provider Count is the number of providers registered with the Windows Filtering Platform.
4723
WFP Reauthorization is the set of Windows Filtering Platform (WFP) counters that pertain to connection reauthorizations.
4725
Total number of inbound reauthorizations performed.
4727
Total number of outbound reauthorizations performed.
4729
Total number of reauthorizations performed for the IPv4 address family.
4731
Total number of reauthorizations performed for the IPv6 address family.
4733
Total number of reauthorizations performed for all other protocols.
4735
Total number of reauthorizations performed for the IPv4 protocol.
4737
Total number of reauthorizations performed for the IPv6 protocol.
4739
Total number of reauthorizations performed for the ICMP protocol.
4741
Total number of reauthorizations performed for the ICMP6 protocol.
4743
Total number of reauthorizations performed for the UDP protocol.
4745
Total number of reauthorizations performed for the TCP protocol.
4747
Total number of reauthorizations performed for the PolicyChange reason.
4749
Total number of reauthorizations performed for the NewArrivalInterface reason.
4751
Total number of reauthorizations performed for the NewNextHopInterface reason.
4753
Total number of reauthorizations performed for the ProfileCrossing reason.
4755
Total number of reauthorizations performed for the ClassifyCompletion reason.
4757
Total number of reauthorizations performed for the IPSecPropertiesChanged reason.
4759
Total number of reauthorizations performed for the MidStreamInspection reason.
4761
Total number of reauthorizations performed for the SocketPropertyChanged reason.
4763
Total number of reauthorizations performed for the NewInboundMCastBCastPacket reason.
4765
Total number of reauthorizations performed for the EDPPolicyChanged reason.
4767
Total number of reauthorizations performed for the PreclassifyLocalAddressDimensionPolicyChanged reason.
4769
Total number of reauthorizations performed for the PreclassifyRemoteAddressDimensionPolicyChanged reason.
4771
Total number of reauthorizations performed for the PreclassifyLocalPortDimensionPolicyChanged reason.
4773
Total number of reauthorizations performed for the PreclassifyRemotePortDimensionPolicyChanged reason.
4775
Total number of reauthorizations performed for the ProxyHandleChanged reason.
4103
WFPv6 is the set of Windows Filtering Platform counters that apply to traffic and connections over Internet Protocol version 6.
4105
Inbound Packets Discarded per Second is the rate at which inbound packets are discarded by the Windows Filtering Platform.
4107
Outbound Packets Discarded per Second is the rate at which outbound packets are discarded by the Windows Filtering Platform.
4109
Packets Discarded per Second is the rate at which the total of inbound and outbound packets are discarded by the Windows Filtering Platform.
4111
Blocked Binds is the number of network resource assignment requests blocked by the Windows Filtering Platform since the computer was last started.
4113
Inbound Connections Blocked per Second is the rate at which inbound connections are being blocked by the Windows Filtering Platform.
4115
Outbound Connections Blocked per Second is the rate at which outbound connections are being blocked by the Windows Filtering Platform.
4117
Inbound Connections Allowed per Second is the rate at which inbound connections are being allowed by the Windows Filtering Platform.
4119
Outbound Connections Allowed per Second is the rate at which outbound connections are being allowed by the Windows Filtering Platform.
4121
Inbound Connections is the number of inbound connections allowed by the Windows Filtering Platform since the computer was last started.
4123
Outbound Connections is the number of outbound connections allowed by the Windows Filtering Platform since the computer was last started.
4125
Active Inbound Connections is the number of current inbound connections allowed by the Windows Filtering Platform.
4127
Active Outbound Connections is the number of current outbound connections allowed by the Windows Filtering Platform.
4129
Allowed Classifies per Second is the rate of Windows Filtering Platform security rule evaluations which allow network activity.
6189
The Peer Name Resolution Protocol (PNRP) performance object consists of counters that monitor each of available PNRP clouds.  These counters monitor the local PNRP cache and measure the rates at which PNRP protocol messages are sent and received.
6191
Number of Registration for this PNRP Cloud
6193
Number of Resolve for this PNRP Cloud
6195
Number of Cache Entry for this PNRP Cloud
6197
Average bytes sent for this PNRP Cloud
6199
Average bytes received for this PNRP Cloud
6201
Estimated cloud size for this PNRP Cloud
6203
Number of stale cache entries for this PNRP Cloud
6205
Number of send failures for this PNRP Cloud
6207
Number of receive failures for this PNRP Cloud
6209
Number of Solicit message sent per second for this PNRP Cloud
6211
Number of Solicit message received per second for this PNRP Cloud
6213
Number of Advertise message sent per second for this PNRP Cloud
6215
Number of Advertise message per second received for this PNRP Cloud
6217
Number of Request message sent per second for this PNRP Cloud
6219
Number of Request message received per second for this PNRP Cloud
6221
Number of Flood message sent per second for this PNRP Cloud
6223
Number of Flood message received per second for this PNRP Cloud
6225
Number of Inquire message sent per second for this PNRP Cloud
6227
Number of Inquire message received per second for this PNRP Cloud
6229
Number of Authority message sent per second for this PNRP Cloud
6231
Number of Authority message received per second for this PNRP Cloud
6233
Number of Ack message sent per second for this PNRP Cloud
6235
Number of Ack message received per second for this PNRP Cloud
6237
Number of Lookup message sent per second for this PNRP Cloud
6239
Number of Lookup message received per second for this PNRP Cloud
6241
Number of Unknown message type received for this PNRP Cloud
3427
The set of Counters for Authorization Manager application object
3429
Shows the total number of scopes in the application
3431
Shows the number of scopes that are currently loaded in memory
9441
Fax Service Counter Set
9443
Total number of minutes that the service sent and received faxes.
9445
Total number of pages sent and received.
9447
Total number of faxes sent and received.
9449
Total number of bytes sent and received.
9451
Number of faxes that failed.
9453
Number of outgoing connections that failed.
9455
Number of minutes that the service spent in sending successfully transmitted faxes.
9457
Number of pages sent.
9459
Number of faxes successfully sent.
9461
Number of bytes sent.
9463
Number of faxes that service failed to receive.
9465
Number of minutes that the service received faxes.
9467
Number of pages received.
9469
Number of successfully received faxes.
9471
Number of bytes received.
3805
Global performance counters for Microsoft Winsock Base Service Provider
3807
Dropped Datagrams/sec due to receive buffer limit on any datagram socket
3809
Dropped Datagrams due to receive buffer limit on any datagram socket
3811
Rejected Connections/sec due to backlog limit on any TCP listening socket
3813
Rejected Connections due to backlog limit on any TCP listening socket
9505
BitLocker Drive Encryption performance counters
9507
Minimum read buffer split size in bytes during last interval
9509
Maximum read buffer split size in bytes during last interval
9511
Minimum write buffer split size in bytes during last interval
9513
Maximum write buffer split size in bytes during last interval
9515
Number of read requests received over the last second
9517
Number of read subrequests issued over the last second
9519
Number of write requests received over the last second
9521
Number of write subrequests issued over the last second
5937
The Storage Spaces Virtual Disk performance object consists of counters that show information about Storage Spaces virtual disks.
5939
The number of extents of the virtual disk that are active.
5941
The number of bytes of the virtual disk that are active.
5943
The number of extents of the virtual disk that are missing.
5945
The number of bytes of the virtual disk that are missing.
5947
The number of extents of the virtual disk that are stale.
5949
The number of bytes of the virtual disk that are stale.
5951
The number of extents of the virtual disk that are need reallocation.
5953
The number of bytes of the virtual disk that are need reallocation.
5955
The number of extents of the virtual disk that are need regeneration.
5957
The number of bytes of the virtual disk that are need regeneration.
5959
The number of extents of the virtual disk that are regenerating.
5961
The number of bytes of the virtual disk that are regenerating.
5963
The number of extents of the virtual disk that are pending deletion.
5965
The number of bytes of the virtual disk that are pending deletion.
5967
The total number of extents of the virtual disk.
5969
The total number of bytes of the virtual disk.
5971
The number of extents of the virtual disk that are on a physical disk that is missing.
5973
The number of bytes of the virtual disk that are on a physical disk that is missing.
5975
The number of extents of the virtual disk that are on a physical disk that has failed.
5977
The number of bytes of the virtual disk that are on a physical disk that has failed.
5979
The number of extents of the virtual disk that encountered a write error.
5981
The number of bytes of the virtual disk that encountered a write error.
5983
The number of extents of the virtual disk that are on a physical disk that is reporting a hardware error.
5985
The number of bytes of the virtual disk that are on a physical disk that is reporting a hardware error.
5987
The number of extents of the virtual disk that encountered a write error while regenerating.
5989
The number of bytes of the virtual disk that encountered a write error while regenerating.
5991
The number of extents of the virtual disk that are on a physical disk that has been retired.
5993
The number of bytes of the virtual disk that are on a physical disk that has been retired.
5995
The number of extents of the virtual disk that have been newly reallocated.
5997
The number of bytes of the virtual disk that have been newly reallocated.
5999
The number of extents of the virtual disk that encountered a read error while regenerating.
6001
The number of bytes of the virtual disk that encountered a read error while regenerating.
6003
The number of extents of the virtual disk that are replacements for repair.
6005
The number of bytes of the virtual disk that are replacements for repair.
6007
The number of extents of the virtual disk that are replacements for rebalance.
6009
The number of bytes of the virtual disk that are replacements for rebalance.
6011
The number of extents of the virtual disk that are replacements that have been replaced.
6013
The number of bytes of the virtual disk that are replacements that have been replaced.
6015
The number of extents of the virtual disk that do not need to be regenerated.
6017
The number of bytes of the virtual disk that do not need to be regenerated.
6019
The number of extents of the virtual disk that are on a physical disk that has been retired but have not yet been replaced.
6021
The number of extents of the virtual disk that are no longer in use but have not yet been cleaned up.
6023
The number of times phase 1 of repair has run.
6025
The last status from phase 1 of repair.
6027
The number of times phase 2 of repair has run.
6029
The last status from phase 2 of repair.
6031
The number of times phase 3 of repair has run.
6033
The last status from phase 3 of repair.
6035
The number of times phase 4 of repair has run.
6037
The last status from phase 4 of repair.
6039
The number of times phase 5 of repair has run.
6041
The last status from phase 5 of repair.
6043
The number of times phase 6 of repair has run.
6045
The last status from phase 6 of repair.
6047
The number of bytes processed by regeneration.
6049
The number of bytes outstanding in regeneration.
6051
The number of bytes skipped by regeneration.
6053
The total number of bytes in need of regeneration, outstanding in regeneration, and regenerated.
6095
The Storage Spaces Write Cache performance object consists of counters that show information about Storage Spaces write caches.
6097
The number of log checkpoint operations.
6099
The number of concurrent destage operations.
6101
The number of log advance operations.
6103
The amount of data in bytes residing in the cache.
6105
The percentage of data in bytes residing in the cache.
6107
The amount of reclaimable space in bytes in the cache.
6109
The percentage of reclaimable space in bytes in the cache.
6111
The amount of used space in bytes in the cache.
6113
The percentage of used space in bytes in the cache.
6115
The size in bytes of the cache.
6117
The number of bytes evicted from the cache per second.
6119
The number of destaged bytes evicted from the cache per second.
6121
The percentage of destage bytes evicted from the cache.
6123
The number of overwritten bytes evicted from the cache per second.
6125
The percentage of overwritten bytes evicted from the cache.
6127
The number of bytes read bypassing the cache per second.
6129
The percentage of bytes read bypassing the cache.
6131
The number of bytes read from the cache per second.
6133
The percentage of bytes read from the cache.
6135
The number of bytes written bypassing the cache per second.
6137
The percentage of bytes written bypassing the cache.
6139
The number of bytes written to the cache per second.
6141
The percentage of bytes written to the cache.
6143
The number of unaligned bytes written to the cache per second.
6145
The percentage of unaligned bytes written to the cache.
6147
The number of untrimmed bytes written to the cache per second.
6149
The percentage of untrimmed bytes written to the cache.
6151
The number of overlapping bytes written to the cache per second.
6153
The percentage of overlapping bytes written to the cache.
6055
The Storage Spaces Tier performance object consists of counters that show information about Storage Spaces tiers.
6057
The number of reads from the tier per second.
6059
The average number of seconds per read from the tier.
6061
The average number of concurrent reads from the tier.
6063
The number of bytes read from the tier per second.
6065
The average number of bytes per read from the tier.
6067
The number of writes to the tier per second.
6069
The average number of seconds per write to the tier.
6071
The average number of concurrent writes to the tier.
6073
The number of bytes written to the tier per second.
6075
The average number of bytes per write to the tier.
6077
The number of concurrent transfers from/to the tier.
6079
The number of transfers from/to the tier per second.
6081
The average number of seconds per transfer from/to the tier.
6083
The average number of concurrent transfers from/to the tier.
6085
The number of bytes transferred from/to the tier per second.
6087
The average number of bytes per transfer from/to the tier.
6089
The number of reads from the tier.
6091
The number of writes to the tier.
6093
The number of transfers from/to the tier.
6165
The Storage Spaces Drt performance object consists of counters that show information about Storage Spaces dirty region tracking.
6167
The number of slabs of the virtual disk that are clean.
6169
The number of bytes of the virtual disk that are clean.
6171
The number of slabs of the virtual disk that are dirty.
6173
The number of bytes of the virtual disk that are dirty.
6175
The number of slabs of the virtual disk that are flushing.
6177
The number of bytes of the virtual disk that are flushing.
6179
The number of slabs in of the virtual disk that are flushed.
6181
The number of bytes in of the virtual disk that are flushed.
6183
The number of slabs of the virtual disk that need synchronization.
6185
The number of bytes of the virtual disk that need synchronization.
6187
The maximum number of entries that will be tracked as dirty.
3105
Information on the ReFS file system performance counters.
3107
The total number of cluster allocations per second.
3109
The number of in place data cluster writes per second.
3111
The number of metadata cluster allocations from the fast tier per second.
3113
The number of metadata cluster allocations from the slow tier per second.
3115
The number of data cluster allocations from the fast tier per second.
3117
The number of data cluster allocations from the slow tier per second.
3119
The number of container destages from the slow tier to the fast tier per second.
3121
The number of container destages from the fast tier to the slow tier per second.
3123
Current data fill percentage for the slow tier.
3125
Current data fill percentage for the fast tier.
3127
The read latency in 100 ns for slow tier to fast tier destages.
3131
The write latency in 100 ns for slow tier to fast tier destages.
3135
The read latency in 100 ns for fast tier to slow tier destages.
3139
The write latency in 100 ns for fast tier to slow tier destages.
3143
Average slow tier destaged container fill ratio (percentage).
3147
Average fast tier destaged container fill ratio (percentage).
3151
Total time needed to process tree updates while holding exclusive locks in 100 ns
3155
Total time needed to process checkpoints while holding exclusive locks in 100 ns
3159
Number of tree updates per second
3161
Number of checkpoints per second
3163
Number of log writes per second
3165
Current metadata fill percentage for the slow tier.
3167
Current metadata fill percentage for the fast tier.
3169
The fill percentage for the ReFS log.
3171
Total time needed to process trim requests in 100 ns
3175
The number of data compactions per second.
3177
The read latency in 100 ns for data compaction.
3181
The write latency in 100 ns for data compaction.
3185
Average compacted container fill ratio (percentage).
3189
Compactions failed due to ineligible container.
3191
Compactions failed due to an embedded container reaching fragmentation limit of 4.
3193
Number of container moves that had to be retried.
3195
Container moves failed due to ineligible container.
3197
Total number of compaction failures.
3199
Total number of container move failures.
3201
Number of dirty metadata pages.
3203
Number of bindables in lazy writer queue.
3205
Number of entries in the Delete Queue.
10095
The Storage Management WSP Spaces Runtime performance object consists of counters that show information about Storage Management WSP Spaces provider runtimes.
10097
The number of control dispatches elapsing between 0ms to 4ms.
10099
The number of control dispatches elapsing between 4ms to 16ms.
10101
The number of control dispatches elapsing between 16ms to 64ms.
10103
The number of control dispatches elapsing between 64ms to 256ms.
10105
The number of control dispatches elapsing between 256ms to 1s.
10107
The number of control dispatches elapsing between 1s to 4s.
10109
The number of control dispatches elapsing between 4s to 16s.
10111
The number of control dispatches elapsing between 16s to 1min.
10113
The number of control dispatches elapsing more than 1min.
3095
Per-Pipe statistics, for performance debugging.
9839
The SMB Direct Connection performance counter set consists of counters that measure connection activity. A computer can have multiple SMB Direct connections. The SMB Direct Connection counter set represents each connection as a pair of IP addresses and ports, where the first IP address/port represents the connection's local endpoint and the second IP address/port represents the connection's remote endpoint.
9841
Stalls (Send Credit)/sec is the rate at which transmission of SMB Direct packets stalled due to an insufficient number of send credits. This counter displays the difference between the values observed in the last two sample intervals, divided by the duration of the sample interval.
9843
Stalls (Send Queue Capacity)/sec is the rate at which RDMA network interface requests stalled due to insufficient send queue capacity. This counter displays the difference between the values observed in the last two sample intervals, divided by the duration of the sample interval.
9845
Stalls (RDMA Registrations Resources/sec) is the rate of memory registration stalls due to insufficient RDMA registration resources. This counter displays the difference between the values observed in the last two sample intervals, divided by the duration of the sample interval. This counter displays the difference between the values observed in the last two sample intervals, divided by the duration of the sample interval.
9847
Sends/sec is the rate at which SMB Direct data packets are being sent to the peer. This counter displays the difference between the values observed in the last two sample intervals, divided by the duration of the sample interval.
9849
Remote Invalidations/sec is the rate at which local RDMA registrations are being remotely invalidated by the peer. This counter displays the difference between the values observed in the last two sample intervals, divided by the duration of the sample interval.
9851
Memory Regions is the number of memory regions that are currently allocated to this connection from the RDMA network adapter.
9853
Bytes Received/sec is the rate at which data is being received from the peer. Data that is directly read from the peer via RDMA read operations is not counted. This counter displays the difference between the values observed in the last two sample intervals, divided by the duration of the sample interval.
9855
Bytes Sent/sec is the rate at which data is being sent to the peer. Data that is directly written to the peer via RDMA write operations is not counted. This counter displays the difference between the values observed in the last two sample intervals, divided by the duration of the sample interval.
9857
Bytes RDMA Read/sec is the rate at which bytes are being transferred by RDMA read operations. This counter displays the difference between the values observed in the last two sample intervals, divided by the duration of the sample interval.
9859
Bytes RDMA Written/sec is the rate at which bytes are being transferred by RDMA write operations. This counter displays the difference between the values observed in the last two sample intervals, divided by the duration of the sample interval.
9861
Stalls (RDMA Read)/sec is the rate at which RDMA reads stalled due to a limit on the number of simultaneous RDMA read operations per connection. This counter displays the difference between the values observed in the last two sample intervals, divided by the duration of the sample interval.
9863
Receives/sec is the rate at which SMB Direct data packets are being received from the peer. This counter displays the difference between the values observed in the last two sample intervals, divided by the duration of the sample interval.
9865
RDMA Registrations/sec is the rate at which memory is being registered as the source or destination for an RDMA data transfer. This counter displays the difference between the values observed in the last two sample intervals, divided by the duration of the sample interval.
9867
SCQ Notification Events/sec is the rate at which SMB Direct is being notified that SQ work requests have completed to the SCQ. This counter displays the difference between the values observed in the last two sample intervals, divided by the duration of the sample interval.
9869
RCQ Notification Events/sec is the rate at which SMB Direct is being notified that RQ work requests have completed to the RCQ. This counter displays the difference between the values observed in the last two sample intervals, divided by the duration of the sample interval.
9871
Spurious RCQ Notification Events is the number of times SMB Direct has been notified that RQ work requests have completed to the socket's RCQ but found no CQEs to process. A non-zero count indicates a bug in the NDK provider.
9873
Spurious SCQ Notification Events is the number of times SMB Direct has been notified that SQ work requests have completed to the socket's SCQ but found no CQEs to process. A non-zero count indicates a bug in the NDK provider.
9749
Performance counters for Offline Files
9751
Bytes synchronized from server to client
9753
Bytes synchronized from client to server
9755
Bytes synchronized per second, client to server
9759
Bytes synchronized per second, server to client
9763
Performance counters for SMB BranchCache for reduced bandwidth consumption
9765
Bytes requested from BranchCache
9767
Bytes received from BranchCache
9769
Bytes published back to BranchCache
9771
Bytes not found in BranchCache and retrieved from the server
9773
Count of hash requests sent to the server for BranchCache lookup
9775
Count of hash requests successfully receieved back from the server for BranchCache lookup
9777
Bytes of hash data successfully received back from the server for BranchCache lookup
9779
Count of prefetch operations queued to retrieve or publish BranchCache data
9781
Bytes read by the BranchCache prefetcher service from the Client Side Cache
9783
Bytes read by the BranchCache prefetcher from the server
9785
Transparently cached bytes read by applications from the Client Side Cache
9787
Transparently cached bytes read by applications from the server
9789
Transparently cached bytes read by applications from the server and not cached by the client
3261
Statistics of Teredo relay hosted on this machine.
3263
Total packets received by the Teredo relay.
3265
Total valid packets received by the Teredo relay.
3267
Total bubbles received by the Teredo relay.
3269
Total data packets received by the Teredo relay.
3271
Total error packets received by the Teredo relay.
3273
Total error packets( header error) received by the Teredo relay.
3275
Total error packets( source error) received by the Teredo relay.
3277
Total error packets( destination error) received by the Teredo relay.
3279
Total packets sent by the Teredo relay.
3281
Total packets successfully sent by the Teredo relay.
3283
Total bubbles sent by the Teredo relay.
3285
Total data packets sent by the Teredo relay.
3287
Total packets failed to be sent by the Teredo relay.
3289
Total packets failed( header error) to be sent by the Teredo relay.
3291
Total packets failed( source error) to be sent by the Teredo relay.
3293
Total packets failed( destination error) to be sent by the Teredo relay.
3295
Rate of total packets received by the Teredo relay.
3297
Rate of total packets sent by the Teredo relay.
3299
Total data packets received by the Teredo relay in user mode.
3301
Total data packets received by the Teredo relay in kernel mode.
3303
Total data packets sent by the Teredo relay in user mode.
3305
Total data packets sent by the Teredo relay in kernel mode.
3307
Per session statistics on this IPHTTPS server.
3309
Total Ipv6 packets received on this IPHTTPS session.
3311
Total Ipv6 packets sent on this IPHTTPS session.
3313
Total bytes received on this IPHTTPS session.
3315
Total bytes sent on this IPHTTPS session.
3317
Total transmit errors on this session.
3319
Total receive errors on this session.
3321
Time since this session was established in seconds.
3345
Statistics of DNS64 on this machine.
3347
Number of AAAA queries successfully served by the DNS64 server.
3349
Number of AAAA queries unsuccessfully served by the DNS64 server.
3351
Number of IP6.ARPA PTR queries, matched configured prefixes.
3353
Number of successfully served pass-through queries.
3355
Number of unsuccessfully served pass-through queries.
3357
Number of synthesized AAAA records.
3323
Statistics of IPHTTPS server on this machine.
3325
Total bytes received on the IPHTTPS server.
3327
Total bytes sent on the IPHTTPS server.
3329
Total packets dropped waiting for neighbor resolution.
3331
Total authentication errors.
3333
Total bytes forwarded at link layer.
3335
Total transmit errors on the server.
3337
Total receive errors on the server.
3339
Total packets received on the server.
3341
Total packets sent from the server.
3343
Total number of sessions on the server.
3231
Statistics of Teredo server hosted on this machine.
3233
Total packets received by the Teredo server.
3235
Total valid packets received by the Teredo server.
3237
Total bubbles received by the Teredo server.
3239
Total echo packets received by the Teredo server.
3241
Total Router Solicitations received by the primary server.
3243
Total Router Solicitations received by the secondary server
3245
Total error packets received by the Teredo server.
3247
Total error packets( header error) received by the Teredo server.
3249
Total error packets( source error) received by the Teredo server.
3251
Total error packets( destination error) received by the Teredo server.
3253
Total error packets( authentication error) received by the Teredo server.
3255
Total Router Advertisements sent by the primary server.
3257
Total Router Advertisements sent by the secondary server.
3259
Rate of total packets received by the Teredo server.
3207
Statistics of Teredo client.
3209
Total Router Advertisement packets received by the Teredo client.
3211
Total bubble packets received by the Teredo client.
3213
Total data packets received by the Teredo client.
3215
Total error packets received by the Teredo client.
3217
Total Router Solicitation packets sent by the Teredo client.
3219
Total bubble packets sent by the Teredo client.
3221
Total data packets sent by the Teredo client.
3223
Total data packets received by the Teredo client in user mode.
3225
Total data packets received by the Teredo client in kernel mode.
3227
Total data packets sent by the Teredo client in user mode.
3229
Total data packets sent by the Teredo client in kernel mode.
6469
This counter set represents the statistics for Dynamic Memory Integration Services
1849
Counters related to a local Bluetooth radio
1851
Number of Classic ACL bytes written per second
1853
Number of Low Energy ACL bytes written per second
1855
Number of SCO bytes written per second
1857
Number of Classic ACL bytes read per second
1859
Number of Low Energy ACL bytes read per second
1861
Number of SCO bytes read per second
1863
Number of Classic ACL connections
1865
Number of LE ACL connections
1867
Number of SCO connections
1869
Number of Sideband SCO connections
1871
Number of ACL flush events per second
1873
Number of LE ACL write credits
1875
Number of Classic ACL write credits
1877
LE Advertisement Scan Duty Cycle (%) - Uncoded 1M Phy
1879
Raw LE Advertisement Scan Window - Uncoded 1M Phy
1881
Raw LE Advertisement Scan Interval - Uncoded 1M Phy
1883
Page Scan Duty Cycle (%)
1885
Raw Page Scan Window
1887
Raw Page Scan Interval
1889
Inquiry Scan Duty Cycle (%)
1891
Raw Inquiry Scan Window
1893
Raw Inquiry Scan Interval
1895
LE Advertisement Scan Duty Cycle (%) - Coded Phy
1897
Raw LE Advertisement Scan Window - Coded Phy
1899
Raw LE Advertisement Scan Interval - Coded Phy
1901
Counters related to a remote Bluetooth device
1903
Number of Classic ACL bytes written per second
1905
Number of Low Energy ACL bytes written per second
1907
Number of SCO bytes written per second
1909
Number of Classic ACL bytes read per second
1911
Number of Low Energy ACL bytes read per second
1913
Number of SCO bytes read per second
3815
ServiceModel performance counters for service
3817
The number of calls to this service. http://go.microsoft.com/fwlink/?LinkId=222530
3819
The number of calls to this service per second. http://go.microsoft.com/fwlink/?LinkId=222531
3821
The number of calls to this service that are in progress. http://go.microsoft.com/fwlink/?LinkId=222532
3823
The number of calls with unhandled exceptions in this service. http://go.microsoft.com/fwlink/?LinkId=222533
3825
The number of calls with unhandled exceptions in this service per second. http://go.microsoft.com/fwlink/?LinkId=222534
3827
The number of calls to this service that returned faults. http://go.microsoft.com/fwlink/?LinkId=222535
3829
The number of calls to this service that returned faults per second. http://go.microsoft.com/fwlink/?LinkId=222536
3831
The average duration of calls to this service. http://go.microsoft.com/fwlink/?LinkId=222537
3833
The number of calls to this service that failed validation or authentication. http://go.microsoft.com/fwlink/?LinkId=222558
3835
The number of calls to this service that failed validation or authentication per second. http://go.microsoft.com/fwlink/?LinkId=222559
3837
The number of calls to this service that failed authorization. http://go.microsoft.com/fwlink/?LinkId=222555
3839
The number of calls to this service that failed authorization per second. http://go.microsoft.com/fwlink/?LinkId=222556
3841
The total number of instances of the service. http://go.microsoft.com/fwlink/?LinkId=222538
3843
The creation rate of service instances per second. http://go.microsoft.com/fwlink/?LinkId=222539
3845
The number of reliable messaging sessions that were faulted in this service. http://go.microsoft.com/fwlink/?LinkId=222552
3847
The number of reliable messaging sessions that were faulted in this service per second. http://go.microsoft.com/fwlink/?LinkId=222553
3849
The number of reliable messaging messages that were dropped in this service. http://go.microsoft.com/fwlink/?LinkId=222550
3851
The number of reliable messaging messages that were dropped in this service per second. http://go.microsoft.com/fwlink/?LinkId=222551
3853
The number of transactions that flowed to operations in this service. This counter is incremented any time a transaction ID is present in the message that is sent to the service. http://go.microsoft.com/fwlink/?LinkId=222560
3855
The number of transactions that flowed to operations in this service per second. This counter is incremented any time a transaction ID is present in the message that is sent to the service. http://go.microsoft.com/fwlink/?LinkId=222561
3857
The number of transacted operations with the outcome committed in this service. Work done under such operations is fully committed. Resources are updated in accordance with the work done in the operation. http://go.microsoft.com/fwlink/?LinkId=222564
3859
The number of transacted operations with the outcome committed in this service per second. Work done under such operations is fully committed. Resources are updated in accordance with the work done in the operation. http://go.microsoft.com/fwlink/?LinkId=222565
3861
The number of transacted operations with the outcome aborted in this service. Work done under such operations is rolled back. Resources are reverted to their previous state. http://go.microsoft.com/fwlink/?LinkId=222562
3863
The number of transacted operations with the outcome aborted in this service per second. Work done under such operations is rolled back. Resources are reverted to their previous state. http://go.microsoft.com/fwlink/?LinkId=222563
3865
The number of transacted operations with an outcome in doubt in this service. Work done with an outcome in doubt is in an indeterminate state. Resources are held pending outcome. http://go.microsoft.com/fwlink/?LinkId=222566
3867
The number of transacted operations with an outcome in doubt in this service per second. Work done with an outcome in doubt is in an indeterminate state. Resources are held pending outcome. http://go.microsoft.com/fwlink/?LinkId=222567
3869
The number of messages to this service that were marked poisoned by the queued transport. http://go.microsoft.com/fwlink/?LinkId=222546
3871
The number of messages to this service that were marked poisoned by the queued transport per second. http://go.microsoft.com/fwlink/?LinkId=222547
3873
The number of messages to this servcie that were rejected by the queued transport. http://go.microsoft.com/fwlink/?LinkId=222548
3875
The number of messages to this service that were rejected by the queued transport per second. http://go.microsoft.com/fwlink/?LinkId=222549
3877
The number of messages to this service that were dropped by the queued transport. http://go.microsoft.com/fwlink/?LinkId=222543
3879
The number of messages to this service that were dropped by the queued transport per second. http://go.microsoft.com/fwlink/?LinkId=222544
3881
Number of calls waiting to be or being processed in the dispatcher as a percentage of max calls throttle. http://go.microsoft.com/fwlink/?LinkId=222540
3883
Number of active instances and messages waiting for instances as a percentage of max instances throttle. http://go.microsoft.com/fwlink/?LinkId=222541
3885
Number of active sessions and messages waiting for sessions as a percentage of max sessions throttle. http://go.microsoft.com/fwlink/?LinkId=222542
3935
ServiceModelOperation 4.0.0.0 performance counters
3937
The number of calls to this operation. http://go.microsoft.com/fwlink/?LinkId=222615
3939
The number of calls to this operation per second. http://go.microsoft.com/fwlink/?LinkId=222616
3941
The number of calls to this operation that are in progress. http://go.microsoft.com/fwlink/?LinkId=222617
3943
The number of calls with unhandled exceptions in this operation. http://go.microsoft.com/fwlink/?LinkId=222618
3945
The number of calls with unhandled exceptions in this operation per second. http://go.microsoft.com/fwlink/?LinkId=222619
3947
The number of calls to this operation that returned faults. http://go.microsoft.com/fwlink/?LinkId=222620
3949
The number of calls to this operation that returned faults per second. http://go.microsoft.com/fwlink/?LinkId=222621
3951
The average duration of calls to this operation. http://go.microsoft.com/fwlink/?LinkId=222622
3953
The number of calls to this operation that failed validation or authentication. http://go.microsoft.com/fwlink/?LinkId=222623
3955
The number of calls to this operation that failed validation or authentication per second. http://go.microsoft.com/fwlink/?LinkId=222624
3957
The number of calls to this operation that failed authorization. http://go.microsoft.com/fwlink/?LinkId=222631
3959
The number of calls to this operation that failed authorization per second. http://go.microsoft.com/fwlink/?LinkId=222633
3961
The number of transactions that flowed to this operation. This counter is incremented any time a transaction ID is present in the message sent to the operation. http://go.microsoft.com/fwlink/?LinkId=222634
3963
The number of transactions that flowed to this operation per second. This counter is incremented any time a transaction ID is present in the message sent to the operation. http://go.microsoft.com/fwlink/?LinkId=222637
3965
The average duration of calls to this operation. http://go.microsoft.com/fwlink/?LinkId=222622
3895
ServiceModel performance counters for endpoint
3897
The number of calls to this endpoint. http://go.microsoft.com/fwlink/?LinkId=222641
3899
The number of calls to this endpoint per second. http://go.microsoft.com/fwlink/?LinkId=222642
3901
The number of calls to this endpoint that are in progress. http://go.microsoft.com/fwlink/?LinkId=222643
3903
The number of calls with unhandled exceptions at this endpoint. http://go.microsoft.com/fwlink/?LinkId=222644
3905
The number of calls with unhandled exceptions at this endpoint per second. http://go.microsoft.com/fwlink/?LinkId=222645
3907
The number of calls to this endpoint that returned faults. http://go.microsoft.com/fwlink/?LinkId=222646
3909
The number of calls to this endpoint that returned faults per second. http://go.microsoft.com/fwlink/?LinkId=222647
3911
The average duration of calls to this endpoint. http://go.microsoft.com/fwlink/?LinkId=222648
3913
The number of calls to this endpoint that failed validation or authentication. http://go.microsoft.com/fwlink/?LinkId=222656
3915
The number of calls to this endpoint that failed validation or authentication per second. http://go.microsoft.com/fwlink/?LinkId=222657
3917
The number of calls to this endpoint that failed authorization. http://go.microsoft.com/fwlink/?LinkId=222653
3919
The number of calls to this endpoint that failed authorization per second. http://go.microsoft.com/fwlink/?LinkId=222655
3921
The number of reliable messaging sessions that faulted at this endpoint. http://go.microsoft.com/fwlink/?LinkId=222651
3923
The number of reliable messaging sessions that faulted at this endpoint per second. http://go.microsoft.com/fwlink/?LinkId=222652
3925
The number of reliable messaging messages that were dropped at this endpoint. http://go.microsoft.com/fwlink/?LinkId=222649
3927
The number of reliable messaging messages that were dropped at this endpoint per second. http://go.microsoft.com/fwlink/?LinkId=222650
3929
The number of transactions that flowed to operations at this endpoint. This counter is incremented any time a transaction ID is present in the message that is sent to the endpoint. http://go.microsoft.com/fwlink/?LinkId=222658
3931
The number of transactions that flowed to operations at this endpoint per second. This counter is incremented any time a transaction ID is present in the message that is sent to the endpoint. http://go.microsoft.com/fwlink/?LinkId=222659
3933
The average duration of calls to this endpoint. http://go.microsoft.com/fwlink/?LinkId=222648
6473
This counter set displays power metering and budgeting information
6475
This counter displays power consumption in milliwatts.
6477
This counter displays the power budget for this device or subcomponent in milliwatts.
6479
The Energy Meter performance object measures total energy consumption.
6481
The Time counter measures the duration of meter operation in milliseconds.
6483
The Energy counter measures the total energy consumed on the metered channel in picowatt-hours.
6485
The Power counter measures average power over each sampling interval in milliwatts.
5653
This counter set measures various per-CPU TCPIP activity for performance diagnostics.
5655
Established TCP connections that last received traffic on this CPU
5581
This counter set measures various TCPIP activity for performance diagnostics.
5583
Total number of inbound NetBufferLists indicated from IPv4 Framing Layer to IPv4 Network Layer with low-resource flag
5585
Rate of inbound NetBufferLists indicated from IPv4 Framing Layer to IPv4 Network Layer with low-resource flag
5587
Total number of inbound NetBufferLists indicated from IPv6 Framing Layer to IPv6 Network Layer with low-resource flag
5589
Rate of inbound NetBufferLists indicated from IPv6 Framing Layer to IPv6 Network Layer with low-resource flag
5591
Total number of inbound NetBufferLists indicated from IPv4 Framing Layer to IPv4 Network Layer without prevalidation
5593
Rate of inbound NetBufferLists indicated from IPv4 Framing Layer to IPv4 Network Layer without prevalidation
5595
Total number of inbound NetBufferLists indicated from IPv6 Framing Layer to IPv6 Network Layer without prevalidation
5597
Rate of inbound NetBufferLists indicated from IPv6 Framing Layer to IPv6 Network Layer without prevalidation
5599
Total number of inbound NetBufferLists indicated to IPv4 Network Layer as prevalidated but treated as non-prevalidated consequently
5601
Rate of inbound NetBufferLists indicated to IPv4 Network Layer as prevalidated but treated as non-prevalidated consequently
5603
Total number of inbound NetBufferLists indicated to IPv6 Network Layer as prevalidated but treated as non-prevalidated consequently
5605
Rate of inbound NetBufferLists indicated to IPv6 Network Layer as prevalidated but treated as non-prevalidated consequently
5607
Total number of outbound NetBufferLists that could not be processed via IPv4 Framing Layer fast path
5609
Rate of outbound NetBufferLists that could not be processed via IPv4 Framing Layer fast path
5611
Total number of outbound NetBufferLists that could not be processed via IPv6 Framing Layer fast path
5613
Rate of outbound NetBufferLists that could not be processed via IPv6 Framing Layer fast path
5615
Total number of inbound TCP segments that could not be processed via fast path
5617
Rate of inbound TCP segments that could not be processed via fast path
5619
Total number of TCP connect requests which were established over normal loopback path despite loopback fast path was requested
5621
Rate of TCP connect requests which were established over normal loopback path despite loopback fast path was requested
5623
Total number of TCP connect or TCP/UDP/RAW send requests denied by the TCPIP stack because the outbound network interface was in low-power mode
5625
TCP segments dropped due to invalid checksum
5627
TCP retransmission timeouts
5629
Total number of RSC segments forwarded via LSO
5631
Total number of RSC segments forwarded via software segmentation
5633
Total number of RSC segments forwarded via software segmentation and checksum
5635
Total number of RSC segment forwarding failures during software segmentation
5637
Total number of UDP datagrams created via software segmentation
5639
Rate of coalesced UDP datagrams received via UDP URO
5641
Rate of bytes received via UDP URO
5643
Rate of coalesced TCP datagrams received via TCP RSC
5645
Rate of bytes received via TCP RSC
5647
Total number of URO segments forwarded via software segmentation
5649
Total number of URO segments forwarded via software segmentation and checksum
5651
Total number of URO segment forwarding failures during software segmentation
5513
WinNat UDP counter set measures network activity for network address translated UDP packets.
5515
Total number of UDP sessions.
5517
Total number of UDP bindings.
5519
Total number of UDP packets translated from internal to external.
5521
Total number of UDP packets translated from external to internal.
5523
Total number of UDP packets dropped due to absence of binding.
5525
Total number of UDP sessions timed out due to inactivity.
5571
WinNAT instance counterset provides resource usage information per NAT instance.
5573
Number of TCP ports in use
5575
Number of TCP ports available
5577
Number of UDP ports in use
5579
Number of UDP ports available
5499
WinNat TCP counter set measures network activity for network address translated TCP packets.
5501
Total number of TCP sessions.
5503
Total number of TCP bindings.
5505
Total number of TCP packets translated from internal to external.
5507
Total number of TCP packets translated from external to internal.
5509
Total number of TCP packets dropped due to absence of binding.
5511
Total number of TCP sessions timed out due to inactivity.
5541
WinNAT general counter set measures network activity for all network address translated packets.
5543
Number of new sessions established per second
5545
Total number of current sessions
5547
Number of packets translated per second from internal to external
5549
Total number of packets translated from internal to external
5551
Number of packets translated per second from external to internal
5553
Total number of packets translated from external to internal
5555
Number of packets dropped per second
5557
Total number of dropped packets
5559
Number of ICMP error packets dropped per second due to inner IP packet parsing or validation failure
5561
Total number of ICMP error packets dropped due to inner IP packet parsing or validation failure
5563
Number of packets hairpinned per second between different routing domains
5565
Total number of packets hairpinned between different routing domains
5567
Number of packets hairpinned per second back to originating routing domains
5569
Total number of packets hairpinned back to originating routing domains
5527
WinNat ICMP counter set measures network activity for network address translated ICMP packets.
5529
Total number of ICMP sessions.
5531
Total number of ICMP bindings.
5533
Total number of ICMP packets translated from internal to external.
5535
Total number of ICMP packets translated from external to internal.
5537
Total number of ICMP packets dropped due to absence of binding.
5539
Total number of ICMP sessions timed out due to inactivity.
5913
Set of request queue counters
5915
Number of requests in the queue
5917
Age of the oldest request in the queue
5919
Rate at which requests are arriving in the queue
5921
Rate at which requests are rejected from the queue
5923
Total number of requests rejected from the queue
5925
Rate of cache hits for the queue
5893
Set of URL Group-specific counters
5895
Rate of sending data by HTTP service for this site
5897
Rate of received data by HTTP service for this site
5899
Rate of total bytes transferred (sent and received) by HTTP service for this site
5901
Number of current connections established for this site
5903
Maximum number of concurrent connections established for this site
5905
Rate at which connection attempts are being made for this site
5907
Rate at which GET method requests are made for this site
5909
Rate at which HEAD method requests are made for this site
5911
Total number of HTTP requests made for this site
5879
Set of HTTP service counters
5881
Total number of URIs currently cached by the kernel
5883
Total number of URIs added to the kernel since service startup
5885
Total number of successful lookups in the kernel URI cache
5887
Total number of unsuccessful lookups in the kernel URI cache
5889
Total number of kernel URI cache flushes (complete or partial) since service startup
5891
Total number of URIs that have been removed from the kernel URI cache since service startup
3359
Displays performance counters for PowerShell Workflow engine.
3361
Displays the number of terminated workflow jobs that failed since the start of PowerShell Workflow engine. This counter displays the last observed value.
3363
Displays the number of workflow jobs that have failed. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
3365
Displays the number of workflow jobs that got resumed (following suspension) since the start of PowerShell Workflow engine. This counter displays the last observed value.
3367
Displays the number of workflow jobs that have been resumed. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
3369
Displays the number of jobs that are currently being serviced. This counter displays the last observed value.
3371
Displays the number of workflow jobs that are being serviced. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
3373
Displays the number of terminated workflow jobs that were stopped since the start of PowerShell Workflow engine. This counter displays the last observed value.
3375
Displays the number of workflow jobs that have been stopped. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
3377
Displays the number of terminated workflow jobs that were successfully completed since the start of PowerShell Workflow engine. This counter displays the last observed value.
3379
Displays the number of workflow jobs that have been successfully completed. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
3381
Displays the number of terminated workflow jobs that were suspended since the start of PowerShell Workflow engine. This counter displays the last observed value.
3383
Displays the number of workflow jobs that have been suspended. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
3385
Displays the number of terminated workflow jobs since the start of PowerShell Workflow engine. This counter displays the last observed value.
3387
Displays the number of workflow jobs that have been terminated. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
3389
Displays the number of jobs that are pending execution and waiting in the PowerShell Workflow job queue. This counter displays the last observed value.
3391
Displays the number of activity host processes which are busy servicing the requests (incoming / failed). This counter displays the last observed value.
3393
Displays the number of requests that were re-i nserted into the Activity Host Manager queue's because of failure due to process crash. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
3395
Displays the number of failed requests (because of activity host process crash) that are pending execution and waiting in the Activity Host Manager's queue. This counter displays the last observed value.
3397
Displays the number of requests that are arrived in the Activity Host Manager queue. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
3399
Displays the number of requests that are pending execution and waiting in the Activity Host Manager's queue. This counter displays the last observed value.
3401
Displays the number of activity host processes that have been created since the start of PowerShell Workflow engine. This counter displays the last observed value.
3403
Displays the number of activity host processes that have been disposed since the start of PowerShell Workflow engine. This counter displays the last observed value.
3405
Displays the size of the activity host processes pool. This counter displays the last observed value.
3407
Displays the number of requests that are pending execution and waiting in the PowerShell Remoting queue. This counter displays the last observed value.
3409
Displays the number of requests that are being serviced. This counter is not an average over time; it displays the difference between the values observed in the last two samples divided by the duration of the sample interval.
3411
Displays the number of requests that were forced to wait and waiting in the PowerShell Remoting queue. This counter displays the last observed value.
3413
Displays the number of PowerShell Remoting connections that have been created since the start of PowerShell Workflow engine. This counter displays the last observed value.
3415
Displays the number of PowerShell Remoting connections that have been disposed since the start of PowerShell Workflow engine. This counter displays the last observed value.
3417
Displays the number of PowerShell Remoting connections that were closed and reopened since the start of PowerShell Workflow engine. This counter displays the last observed value.
6321
The non local memory usage of each adapter
6323
Non local adapter memory used
6297
The memory usage of each process
6299
Total committed memory used
6301
Local memory used
6303
Non local memory used
6305
Dedicated memory used
6307
Shared memory used
6309
The memory usage of each adapter
6311
Total committed memory used by the adapter
6313
Dedicated memory used by the adapter
6315
Shared memory used by the adapter
6291
The running time of each gpu engine
6293
Running time of this engine
6295
Percentage of time this process is using
6317
The local memory usage of each adapter
6319
Local adapter memory used
9523
Windows Media Player Metadata
9525
Files Scanned Per Minute
9529
Monitored Folder Updates Per Second
9533
Groveler Service Routine Executions Per Second
9537
Library Description Updates Per Second
9541
Library Description Change Notifications Per Second
9545
File Scanning Thread Priority
9547
Directory Change Queue Length
9549
Scanning State
9551
Dirty Directory Hit Count
9553
Timestamp Directory Hit Count
9555
AFTS Execution Time (ms)
9557
URL Classification Time (ms)
9559
Property Extraction Time (ms)
9561
Art Extraction Time (ms)
9563
Reorganize Time (ms)
9565
Commit Time (ms)
9567
Normalization Time (ms)
3449
The RemoteFX encoding performance object consists of counters that measure the performance of RemoteFX graphics encoding
3451
Number of sources frames provided as input to RemoteFX graphics per second
3453
Ratio of the number of bytes encoded to the number of bytes input
3455
Number of frames sent to the client per second
3457
Number of frames skipped per second due to insufficient client resources
3459
Number of frames skipped per second due to insufficient network resources
3461
Number of frames skipped per second due to insufficient server resources
3463
Quality of the output frame expressed as a percentage of the quality of the source frame
3465
Average frame encoding time
3467
Number of frames composed by the source (DWM) per second
3469
This is counter set for the per session RemoteFX network counters
3471
Base TCP round-trip time (RTT) detected in milliseconds
3473
Average TCP round-trip time (RTT) detected in milliseconds
3475
TCP Bandwidth detected in thousands of bits per second (1000 bps)
3477
Rate in bits per second (bps) at which data is received
3479
Rate in bits per second (bps) at which data is received over TCP
3481
Rate in bits per second (bps) at which data is received over UDP
3483
Rate in packets per second at which packets are received over UDP
3485
Rate in bits per second (bps) at which data is sent
3487
Rate in bits per second (bps) at which data is sent over TCP
3489
Rate in bits per second (bps) at which data is sent over UDP
3491
Rate in packets per second at which packets are sent over UDP
3493
Rate in bits per second (bps) at which data is sent with priority 0
3495
Rate in bits per second (bps) at which data is sent with priority 1
3497
Rate in bits per second (bps) at which data is sent with priority 2
3499
Rate in bits per second (bps) at which data is sent with priority 3
3501
Loss percentage
3503
Percentage of packets that have been retransmitted
3505
Forward Error Correction (FEC) percentage
3509
Base UDP round-trip time (RTT) detected in milliseconds
3511
Average UDP round-trip time (RTT) detected in milliseconds
3513
UDP Bandwidth detected in thousands of bits per second (1000 bps)
3515
Total number of bytes sent since connection start
3517
Total number of bytes received since connection start
5657
This counter set displays information about SMB server shares that are shared using SMB protocol version 2 or higher.
5659
The rate at which bytes are being received for requests related to this share. This value includes application data as well as SMB protocol data (such as packet headers).
5661
The rate at which requests are being received for this share
5663
The current number of tree connects to this share
5665
The number of file handles that are currently open in this share
5667
The rate, in seconds, at which bytes are being sent from the SMB File Server related to this share to its clients. This value includes both data bytes and protocol bytes.
5669
The sum of Sent Bytes/sec and Received Bytes/sec for this share.
5671
The number of requests related to this share that are waiting to be processed by the SMB File Server.
5673
The average number of seconds that elapse between the time at which the SMB File Server receives a request for this share and the time at which the SMB File Server sends the corresponding response.
5677
Write requests processed/sec related to this share.
5679
The average number of seconds that elapse between the time at which a write request to this share is received and the time at which the SMB File Server sends the corresponding response.
5683
The rate, in seconds, at which data is being written to this share.
5685
Read requests processed/sec related to this share.
5687
The average number of seconds that elapse between the time at which a read request to this share is received and the time at which the SMB File Server sends the corresponding response.
5691
The rate, in seconds, at which data is being read from this share.
5693
The number of files that have been opened by the SMB File Server on behalf of its clients on this share since the server started.
5695
The rate, in seconds, at which files are being opened for the SMB File Server’s clients on this share.
5697
The number of durable file handles that are currently open on this share
5699
The number of durable opens on this share that have been recovered after a temporary network disconnect since the SMB File Server started.
5701
The number of durable opens on this share that could not be recovered after a temporary network disconnect since the SMB File Server Started.
5703
The percentage of total opens for which clients requested resiliency.
5707
The number of resilient opens on this share that have been recovered after a temporary network disconnect since the SMB File Server started.
5709
The number of resilient opens on this share that could not be recovered after a temporary network disconnect since the SMB File Server Started.
5711
The percentage of total handles for which clients requested persistency.
5715
The number of persistent opens on this share that have been recovered after a temporary network disconnect since the SMB File Server started.
5717
The number of persistent opens on this share that could not be recovered after a temporary network disconnect since the SMB File Server Started.
5719
The rate, in seconds, at which metadata requests are being sent to this share.
5721
The average number of seconds that elapse between the time at which a read or write request to this share is received and the time at which the SMB File Server processes the request.
5725
The average number of bytes per read or write request.
5729
The average number of bytes per read request.
5733
The average number of bytes per write request.
5737
The average number of read requests that were queued for this share.
5739
The average number of write requests that were queued for this share.
5741
The average number of read and write requests that were queued for this share.
5743
The rate, in seconds, at which data is being written to or read from this share.
5745
The rate, in seconds, at which read or write requests are received for this share.
5747
The current number of read or write requests outstanding on this share.
5749
Write requests processed/sec related to this share through RDMA
5751
The rate, in seconds, at which data is being written to this share through RDMA.
5753
Read requests processed/sec related to this share through RDMA
5755
The rate, in seconds, at which data is being read from this share through RDMA
5757
The number of Bypass CSV file handles that are currently open on this share
5759
Write requests processed/sec related to this share ByPassCSV
5761
Read requests processed/sec related to this share ByPassCSV
5763
The rate, in seconds, at which data is being read from this share ByPassCSV
5765
The rate, in seconds, at which data is being written to this share ByPassCSV
5767
The number of bytes per second that were compressed before transmission over the network
5769
The number of SMB responses per second that were compressed before transmission over the network
5771
The number of SMB requests per second that were received compressed over the network
5773
This counter set displays information about SMB server sessions using SMB protocol version 2 or higher
5775
The rate at which bytes are being received for requests in this session. This value includes application data as well as SMB protocol data (such as packet headers).
5777
The rate at which requests are being received in this session
5779
The number of tree connects in this session
5781
The number of file handles that are currently open in this session
5783
The rate, in seconds, at which bytes are being sent from the SMB File Server in this session to the client. This value includes both data bytes and protocol bytes.
5785
The sum of Sent Bytes/sec and Received Bytes/sec for this session.
5787
The number of requests in this session that are waiting to be processed by the SMB File Server.
5789
The average number of seconds that elapse between the time at which the SMB File Server receives a request in this session and the time at which the SMB File Server sends the corresponding response.
5793
Write requests processed/sec in this session.
5795
The average number of seconds that elapse between the time at which a write request in this session is received and the time at which the SMB File Server sends the corresponding response.
5799
The rate, in seconds, at which data is being written in this session.
5801
Read requests processed/sec in this session.
5803
The average number of seconds that elapse between the time at which a read request in this session is received and the time at which the SMB File Server sends the corresponding response.
5807
The rate, in seconds, at which data is being read in this session.
5809
The number of files that have been opened by the SMB File Server on behalf of its clients in this session since the server started.
5811
The rate, in seconds, at which files are being opened in this session.
5813
The number of durable file handles that are currently open in this session
5815
The number of durable opens in this session that have been recovered after a temporary network disconnect since the SMB File Server started.
5817
The number of durable opens in this session that could not be recovered after a temporary network disconnect since the SMB File Server Started.
5819
The percentage of total opens for which clients requested resiliency.
5823
The number of resilient opens in this session that have been recovered after a temporary network disconnect since the SMB File Server started.
5825
The number of resilient opens in this session that could not be recovered after a temporary network disconnect since the SMB File Server Started.
5827
The percentage of total opens for which clients requested persistency.
5831
The number of persistent opens in this session that have been recovered after a temporary network disconnect since the SMB File Server started.
5833
The number of persistent opens in this session that could not be recovered after a temporary network disconnect since the SMB File Server Started.
5835
The rate, in seconds, at which metadata requests are being sent in this session.
5837
The average number of seconds that elapse between the time at which a read or write request to this session is received and the time at which the SMB File Server processes the request.
5841
The average number of bytes per read or write request.
5845
The average number of bytes per read request.
5849
The average number of bytes per write request.
5853
The average number of read requests that were queued in this session.
5855
The average number of write requests that were queued in this session.
5857
The average number of read and write requests that were queued in this session.
5859
The rate, in seconds, at which data is being written or read in this session.
5861
The rate, in seconds, at which read or write requests are received in this session.
5863
The current number of read or write requests outstanding in this session.
5865
The SMB Server performance counters measure file server activity for SMB protocol versions 2 and higher
5867
Read Bytes/sec is the rate at which data is being read to satisfy SMB read requests.
5869
Read Requests/sec is the rate at which SMB read requests are being received.
5871
Write Bytes/sec is the rate at which data is being written to satisfy SMB write requests.
5873
Write Requests/sec is the rate at which SMB write requests are being received.
5875
Send Bytes/sec is the rate at which data is being transmitted on the network. This value includes application data as well as SMB protocol data (such as packet headers).
5877
Receive Bytes/sec is the rate at which data is being received from the network. This value includes application data as well as SMB protocol data (such as packet headers).
6333
Counters for measuring the performance of Netlogon.
6335
Number of thread currently waiting to acquire the semaphore.
6337
Number of thread currently holding the semaphore.
6339
The total number of times the semaphore has been acquired over the lifetime of the Secure Channel connection (or since system boot for _Total).
6341
The total number of times a thread has timed out waiting for the semaphore over the lifetime of the Secure Channel connection (or since system boot for _Total).
6343
The average amount of time the semaphore is held over the last sample.
6345
The base value used to calculate the average semaphore hold time.
6347
How long, in milliseconds, the last successful NTLM authentication took.
6349
The base value used to calculate Last Authentication Time.
3967
Consists of counters that measure aspects of an interrupter of an xHCI controller.
3969
Number of interrupts generated per second
3971
Number of Interrupt DPCs executed per second
3973
Number of Events processed per DPC
3975
Number of DPCs executed since the interrupter was started
3977
Number of times Event Ring got full since the creation of the device node
3979
Number of times the Interrupt Dpc was requeued to prevent a DPC timeout
3991
Consists of counters that measure aspects of a transferring of an xHCI controller.
3993
Number of transfers completed per second
3995
Number of failed transfers
3997
Bytes transferred per second
3999
Number of Isoch TDs completed per second
4001
Number of Isoch TD failures per second
4003
Total Number of Isoch Missed Service Error events received
4005
Total Number of Isoch Underrun/Overrun events received
3981
Consists of counters that measure aspects of a CommonBuffer object of an xHCI controller.
3983
Total number of CommonBuffer pages currently allocated
3985
Number of pages of CommonBuffer currently in use
3987
Number of times CommonBuffer allocations were done
3989
Number of times CommonBuffer was freed back to the DMA adapter
4021
The Distributed Routing Table (DRT) performance object consists of counters that monitor the local DRT cache as well as counters that measure the rates at which DRT protocol messages are sent and received.
4023
The number of keys that are currently registered in this DRT instance.
4025
The total number of searches that have been conducted using this DRT instance.
4027
The number of peer nodes referenced in the cache associated with this DRT instance.
4029
The measure of the bandwidth used to transmit DRT protocol messages during the sampling interval.
4031
The measure of the bandwidth used to receive DRT protocol messages during the sampling interval.
4033
An estimate of the total number of nodes participating in the larger DRT system that this DRT instance is participating in.
4035
The total number of unresponsive peer nodes that have been deleted from the cache associated with this DRT instance.
4037
The number of messages that the local DRT instance failed to send due to DRT transport related errors.
4039
The number of messages that the local DRT instance failed to receive due to message fragmentation and the resulting reassembly, or other DRT transport related errors.
4041
The number of DRT Solicit messages sent per second by the DRT instance.
4043
The number of DRT Solicit messages received per second by the DRT instance.
4045
The number of DRT Advertise messages sent per second by the DRT instance.
4047
The number of DRT Advertise messages received per second by the DRT instance.
4049
The number of DRT Request messages sent per second by the DRT instance.
4051
The number of DRT Request messages received per second by the DRT instance.
4053
The number of DRT Flood messages sent per second by the DRT instance.
4055
The number of DRT Flood messages received per second by the DRT instance.
4057
The number of DRT Inquire messages sent per second by the DRT instance.
4059
The number of DRT Inquire messages received per second by the DRT instance.
4061
The number of DRT Authority messages sent per second by the DRT instance.
4063
The number of DRT Authority messages received per second  by the DRT instance.
4065
The number of DRT Ack messages sent per second by the DRT instance.
4067
The number of DRT Ack messages received per second by the DRT instance.
4069
The number of DRT Lookup messages sent per second by the DRT instance.
4071
The number of DRT Lookup messages received per second by the DRT instance.
4073
The total number of messages of an unrecognized type that have been received by the DRT instance.
3051
NDIS PacketDirect receive filter counter set.
3053
Total number of packets matched by the filter.
3055
Rate of packets matched by the filter.
3057
Total number of bytes matched by the filter.
3059
Rate of bytes matched by the filter.
3027
NDIS PacketDirect transmit counter set.
3029
Total number of packets transmitted.
3031
Rate of packets transmitted.
3033
Total number of bytes transmitted.
3035
Rate of bytes transmitted.
3015
The Physical Network Interface Card Activity counter set measures events on a physical network card.
3017
Device Power State is the current power state of the network interface card.  Power state 0 is the active operating state, while power state 3 is the device's lowest power state.  Intermediate states 1 and 2 are device-specific sleep states.  For example, a USB NIC uses power state 2 to allow remote-wakeup.
3019
% Time Suspended (Instantaneous) measures the amount of time that the network interface card is in a low-power suspended state.  The percentage is calculated over the duration of the sample interval.
3021
% Time Suspended (Lifetime) measures the amount of time that the network interface card is in a low-power suspended state.  The percentage is calculated over the entire lifetime of the network card.
3023
Low Power Transitions (Lifetime) measures the number of successful low-power transitions over the lifetime of the network interface card.  The counter includes only transitions from the active high-power state to a low-power state.
2913
The Per Processor Network Interface Card Activity counter set measures network activity of a network interface card per processor.
2915
DPCs Queued/sec is the average rate, in incidents per second, at which NDIS queued a Deferred Procedure Call (DPC) for an interface.
2917
Interrupts/sec is the average rate, in incidents per second, at which NDIS received and serviced hardware interrupts for an interface.
2919
Receive Indications/sec is the average rate, in incidents per second, at which NDIS received a receive indication call from an interface.
2921
Return Packet Calls/sec is the average rate, in incidents per second, at which the stack returned received packets to an interface.
2923
Passive Return Packet Calls/sec is the average rate, in incidents per second, at which the stack returned received packets to an interface while at PASSIVE_LEVEL.
2925
Received Packets/sec is the average rate, in packets per second, at which NDIS received packets from an interface.
2927
Returned Packets/sec is the average rate, in packets per second, at which the stack returned received packets to an interface.
2929
Passive Returned Packets/sec is the average rate, in packets per second, at which the stack returned received packets to an interface while at PASSIVE_LEVEL.
2931
DPCs Queued on Other CPUs/sec is the average rate, in incidents per second, at which the miniport queued a DPC on one CPU from a different CPU.
2933
Send Request Calls/sec is the average rate, in incidents per second, at which the stack requested a transmit on an interface.
2935
Passive Send Request Calls/sec is the average rate, in incidents per second, at which the stack requested a transmit on an interface while at PASSIVE_LEVEL.
2937
Send Complete Calls/sec is the average rate, in incidents per second, at which NDIS received a transmit-complete notification from an interface.
2939
Sent Packets/sec is the average rate, in packets per second, at which the stack requested a transmit on an interface.
2941
Passive Sent Packets/sec is the average rate, in packets per second, at which the stack requested a transmit on an interface while at PASSIVE_LEVEL.
2943
Sent Complete Packets/sec is the average rate, in packets per second, at which NDIS received a transmit-complete notification from an interface.
2945
Build Scatter Gather List Calls/sec is the average rate, in incidents per second, at which NDIS received a request from an interface to build a scatter gather DMA list.
2947
RSS Indirection Table Change Calls/sec is the average rate, in incidents per second, at which the stack submitted a request to change the RSS indirection table of an interface.
2949
Low Resource Receive Indications/sec is the average rate, in incidents per second, at which NDIS received a receive indication call from an interface with low receive resources.
2951
Low Resource Received Packets/sec is the average rate, in packets per second, at which NDIS received packets from an interface with low receive resources.
2953
Tcp Offload Receive Indications/sec is the average rate, in incidents per second, at which NDIS received a TCP offload receive indication call from a network interface.
2955
Tcp Offload Send Request Calls/sec is the average rate, in incidents per second, at which the TCP/IP protocol requested a TCP offload transmission on a network interface.
2957
Tcp Offload Receive bytes/sec is the average rate, in bytes per second, at which data was delivered by a network interface using the TCP offload receive indication call.
2959
Tcp Offload Send bytes/sec is the average rate, in bytes per second, at which data was delivered to a network interface using the TCP offload send request call.
2961
DPCs Deferred/sec is the average rate, in incidents per second, at which DPCs are deferred from executing immediately to avoid starving usermode threads.
2963
Packets Coalesced/sec is the average rate, in packets per second, at which NDIS received packets that were subjected to coalescing by a network interface before interrupting the host CPU.
2965
The Per Processor Network Activity Cycles counter set measures processor cycles due to network activity of an interface on each processor.
2967
Interrupt DPC Cycles/sec is the average rate, in cycles per second, at which NDIS processed a Deferred Procedure Call (DPC) for an interface.
2969
Interrupt Cycles/sec is the average rate, in cycles per second, at which NDIS processed hardware interrupts for an interface.
2971
NDIS Receive Indication Cycles/sec is the average rate, in cycles per second, at which NDIS processed a receive indication call from an interface.
2973
Stack Receive Indication Cycles/sec is the average rate, in cycles per second, at which the stack processed a receive indication call from an interface.
2975
NDIS Return Packet Cycles/sec is the average rate, in cycles per second, at which NDIS processed returning received packets to an interface.
2977
Miniport Return Packet Cycles/sec is the average rate, in cycles per second, at which an interface processed returning received packets.
2979
NDIS Send Cycles/sec is the average rate, in cycles per second, at which NDIS processed transmit requests from the stack for an interface.
2981
Miniport Send Cycles/sec is the average rate, in cycles per second, at which an interface processed transmitting packets.
2983
NDIS Send Complete Cycles/sec is the average rate, in cycles per second, at which NDIS processed transmit-complete notifications from an interface.
2985
Build Scatter Gather Cycles/sec is the average rate, in cycles per second, at which NDIS processed building Scatter Gather DMA lists for an interface.
2987
Miniport RSS Indirection Table Change Cycles is the average rate, in cycles per second, at which an interface processed changing the RSS indirection table.
2989
Stack Send Complete Cycles/sec is the average rate, in cycles per second, at which the stack processed transmit-complete notifications from an interface.
2991
Interrupt DPC Latency Cycles/sec is the amount of time, in cycles per second, between an interrupt and its DPC.
3089
NDIS PacketDirect queue depth counter set.
3091
Average queue depth over the last measurement interval.
3093
Average queue depth over the last measurement interval, shown as a percentage of the queue size.
3037
NDIS PacketDirect receive counter set.
3039
Total number of packets received.
3041
Rate of packets received.
3043
Total number of bytes received.
3045
Rate of bytes received.
3047
Total number of packets dropped.
3049
Rate of packets dropped.
2993
The RDMA Activity counter set measures RDMA activity on a NetworkDirect-capable network interface card.
2995
Number of outbound RDMA connections established successfully
2997
Number of inbound RDMA connections established successfully
2999
Number of inbound and outbound failed RDMA connection attempts
3001
Number of successfully established RDMA connections on which an error occurred before being disconnected by local or remote client
3003
Number of active RDMA connections
3005
Number of RDMA completion queues that went into error state
3007
Bytes/sec received at layer 2 for all inbound RDMA traffic
3009
Bytes/sec sent at layer 2 for all outbound RDMA traffic
3011
Frames/sec received at layer 2 for all inbound RDMA traffic
3013
Frames/sec sent at layer 2 for all outbound RDMA traffic
3061
NDIS PacketDirect execution context utilization counter set.
3063
Logical processor number of the EC thread.
3065
Accumulated number of polling iterations.
3067
Rate of polling iterations.
3069
Accumulated number of empty polling iterations.
3071
Rate of empty polling iterations.
3075
The percentage of empty EC iterations out of total EC iterations.
3079
Time % EC thread was suspended.
3081
Time % EC thread is executing empty polling iterations.
3083
Time % EC thread is actively processing traffic.
3085
Number of transmit queues in the execution context.
3087
Number of receive queues in the execution context.
3789
The FileSystem Disk Activity performance counter set consists of counters that measure the aspect of filesystem's IO Activity.  This counter set measures the number of bytes filesystem read from and wrote to the disk drive.
3791
Total Bytes Read by the FileSystem from disk drive
3793
Total Bytes Written by the FileSystem from disk drive
3691
The counters in this collection are related to individual Event Tracing for Windows sessions.
3693
Current size of paged memory allocated for the buffers associated with this session (in bytes).
3695
Current size of non-paged memory allocated for the buffers associated with this session (in bytes).
3697
Rate at which events are logged to this session by providers that are enabled to this session (events/sec).
3699
Total number of events that were not successfully logged since the start of the tracing session.  Events are lost due to limited space in the session's buffers.  To avoid lost events, consider increasing the buffer size or the number of buffers.
3701
Number of consumers currently reading events from this session in real-time mode.
3519
The Processor Information performance counter set consists of counters that measure aspects of processor activity. The processor is the part of the computer that performs arithmetic and logical computations, initiates operations on peripherals, and runs the threads of processes. A computer can have multiple processors. On some computers, processors are organized in NUMA nodes that share hardware resources such as physical memory. The Processor Information counter set represents each processor as a pair of numbers, where the first number is the NUMA node number and the second number is the zero-based index of the processor within that NUMA node. If the computer does not use NUMA nodes, the first number is zero.
3521
% Processor Time is the percentage of elapsed time that the processor spends to execute a non-Idle thread. It is calculated by measuring the percentage of time that the processor spends executing the idle thread and then subtracting that value from 100%. (Each processor has an idle thread to which time is accumulated when no other threads are ready to run). This counter is the primary indicator of processor activity, and displays the average percentage of busy time observed during the sample interval. It should be noted that the accounting calculation of whether the processor is idle is performed at an internal sampling interval of the system clock tick. On todays fast processors, % Processor Time can therefore underestimate the processor utilization as the processor may be spending a lot of time servicing threads between the system clock sampling interval. Workload based timer applications are one example  of applications  which are more likely to be measured inaccurately as timers are signaled just after the sample is taken.
3523
% User Time is the percentage of elapsed time the processor spends in the user mode. User mode is a restricted processing mode designed for applications, environment subsystems, and integral subsystems.  The alternative, privileged mode, is designed for operating system components and allows direct access to hardware and all memory.  The operating system switches application threads to privileged mode to access operating system services. This counter displays the average busy time as a percentage of the sample time.
3525
% Privileged Time is the percentage of elapsed time that the process threads spent executing code in privileged mode.  When a Windows system service in called, the service will often run in privileged mode to gain access to system-private data. Such data is protected from access by threads executing in user mode. Calls to the system can be explicit or implicit, such as page faults or interrupts. Unlike some early operating systems, Windows uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes. Some work done by Windows on behalf of the application might appear in other subsystem processes in addition to the privileged time in the process.
3527
Interrupts/sec is the average rate, in incidents per second, at which the processor received and serviced hardware interrupts. It does not include deferred procedure calls (DPCs), which are counted separately. This value is an indirect indicator of the activity of devices that generate interrupts, such as the system clock, the mouse, disk drivers, data communication lines, network interface cards, and other peripheral devices. These devices normally interrupt the processor when they have completed a task or require attention. Normal thread execution is suspended. The system clock typically interrupts the processor every 10 milliseconds, creating a background of interrupt activity. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
3529
% DPC Time is the percentage of time that the processor spent receiving and servicing deferred procedure calls (DPCs) during the sample interval. DPCs are interrupts that run at a lower priority than standard interrupts. % DPC Time is a component of % Privileged Time because DPCs are executed in privileged mode. They are counted separately and are not a component of the interrupt counters. This counter displays the average busy time as a percentage of the sample time.
3531
% Interrupt Time is the time the processor spends receiving and servicing hardware interrupts during sample intervals. This value is an indirect indicator of the activity of devices that generate interrupts, such as the system clock, the mouse, disk drivers, data communication lines, network interface cards and other peripheral devices. These devices normally interrupt the processor when they have completed a task or require attention. Normal thread execution is suspended during interrupts. Most system clocks interrupt the processor every 10 milliseconds, creating a background of interrupt activity. suspends normal thread execution during interrupts. This counter displays the average busy time as a percentage of the sample time.
3533
DPCs Queued/sec is the average rate, in incidents per second, at which deferred procedure calls (DPCs) were added to the processor's DPC queue. DPCs are interrupts that run at a lower priority than standard interrupts.  Each processor has its own DPC queue. This counter measures the rate that DPCs are added to the queue, not the number of DPCs in the queue.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
3535
DPC Rate is the rate at which deferred procedure calls (DPCs) were added to the processors DPC queues between the timer ticks of the processor clock. DPCs are interrupts that run at alower priority than standard interrupts.  Each processor has its own DPC queue. This counter measures the rate that DPCs were added to the queue, not the number of DPCs in the queue. This counter displays the last observed value only; it is not an average.
3537
% Idle Time is the percentage of time the processor is idle during the sample interval
3539
% C1 Time is the percentage of time the processor spends in the C1 low-power idle state. % C1 Time is a subset of the total processor idle time. C1 low-power idle state enables the processor to maintain its entire context and quickly return to the running state. Not all systems support the % C1 state.
3541
% C2 Time is the percentage of time the processor spends in the C2 low-power idle state. % C2 Time is a subset of the total processor idle time. C2 low-power idle state enables the processor to maintain the context of the system caches. The C2 power state is a lower power and higher exit latency state than C1. Not all systems support the C2 state.
3543
% C3 Time is the percentage of time the processor spends in the C3 low-power idle state. % C3 Time is a subset of the total processor idle time. When the processor is in the C3 low-power idle state it is unable to maintain the coherency of its caches. The C3 power state is a lower power and higher exit latency state than C2. Not all systems support the C3 state.
3545
C1 Transitions/sec is the rate that the CPU enters the C1 low-power idle state. The CPU enters the C1 state when it is sufficiently idle and exits this state on any interrupt. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
3547
C2 Transitions/sec is the rate that the CPU enters the C2 low-power idle state. The CPU enters the C2 state when it is sufficiently idle and exits this state on any interrupt. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
3549
C3 Transitions/sec is the rate that the CPU enters the C3 low-power idle state. The CPU enters the C3 state when it is sufficiently idle and exits this state on any interrupt. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
3551
% Priority Time is the percentage of elapsed time that the processor spends executing threads that are not low priority. It is calculated by measuring the percentage of time that the processor spends executing low priority threads or the idle thread and then subtracting that value from 100%. (Each processor has an idle thread to which time is accumulated when no other threads are ready to run). This counter displays the average percentage of busy time observed during the sample interval excluding low priority background work. It should be noted that the accounting calculation of whether the processor is idle is performed at an internal sampling interval of the system clock tick. % Priority Time can therefore underestimate the processor utilization as the processor may be spending a lot of time servicing threads between the system clock sampling interval. Workload based timer applications are one example  of applications  which are more likely to be measured inaccurately as timers are signaled just after the sample is taken.
3553
Parking Status represents whether a processor is parked or not.
3555
Processor Frequency is the frequency of the current processor in megahertz. Some processors are capable of regulating their frequency outside of the control of Windows. Processor Frequency will not accurately reflect actual processor frequency on these systems. Use % Processor Performance instead.
3557
% of Maximum Frequency is the percentage of the current processor's maximum frequency. Some processors are capable of regulating their frequency outside of the control of Windows. % of Maximum Frequency will not accurately reflect actual processor frequency on these systems. Use % Processor Performance instead.
3559
Processor State Flags
3561
Clock Interrupts/sec is the average rate, in incidents per second, at which the processor received and serviced clock tick interrupts. This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
3563
Average Idle Time is the average idle duration in 100ns units observed between the last two samples.
3567
Idle Break Events/sec is the average rate, in incidents per second, at which the processor wakes from idle.  This counter displays the difference between the values observed in the last two samples, divided by the duration of the sample interval.
3569
Processor Performance is the average performance of the processor while it is executing instructions, as a percentage of the nominal performance of the processor. On some processors, Processor Performance may exceed 100%. Some processors are capable of regulating their frequency outside of the control of Windows. Processor Performance will accurately reflect the performance of these processors.
3573
Processor Utility is the amount of work a processor is completing, as a percentage of the amount of work the processor could complete if it were running at its nominal performance and never idle. On some processors, Processor Utility may exceed 100%.
3577
Privileged Utility is the amount of work a processor is completing while executing in privileged mode, as a percentage of the amount of work the processor could complete if it were running at its nominal performance and never idle. On some processors, Privileged Utility may exceed 100%.
3581
% Performance Limit is the performance the processor guarantees it can provide, as a percentage of the nominal performance of the processor. Performance can be limited by Windows power policy, or by the platform as a result of a power budget, overheating, or other hardware issues.
3583
Performance Limit Flags indicate reasons why the processor performance was limited.
3795
The Thermal Zone Information performance counter set consists of counters that measure aspects of each thermal zone in the system.
3797
Temperature of the thermal zone, in degrees Kelvin.
3799
% Passive Limit is the current limit this thermal zone is placing on the devices it controls. A limit of 100% indicates the devices are unconstrained. A limit of 0% indicates the devices are fully constrained.
3801
Throttle Reasons indicate reasons why the thermal zone is limiting performance of the devices it controls.
3803
Temperature of the thermal zone, in tenths of degrees Kelvin.
3677
The counters in this collection refer to system-wide metrics about the performance of the Event Tracing for Windows subsystem.
3679
Number of distinct event providers that are enabled to ETW sessions; multiple instances of a provider are counted only once.
3681
Number of unique tracing providers that have been enabled to a trace session but have not yet registered with ETW.
3683
Number of unique tracing providers that are registered with the tracing subsystem but are not actively enabled to any trace session; multiple registered instances of a provider are counted only once.
3685
Number of ETW tracing sessions currently active.
3687
Current size of paged memory allocated for the buffers associated with all active sessions (in bytes).
3689
Current size of non-paged memory allocated for the buffers associated with all active sessions (in bytes).
3591
The Synchronization performance object consists of counters for kernel synchronization. The synchronization object represents each processor as an instance of the object.
3593
Spinlock acquires/sec is the rate of spinlock acquisitions. It includes the basic spinlocks, queued spinlocks, in-stack queued spinlocks, and shared spinlocks acquisitions.
3595
Spinlock contentions/sec is the rate of spinlock contentions. It includes the basic spinlocks, queued spinlocks, in-stack queued spinlocks, and shared spinlocks contentions.
3597
Spinlock spins/sec is the rate of spinlock spins. It includes the spins to acquire basic spinlocks, queued spinlocks, in-stack queued spinlocks, and shared spinlocks.
3599
IPI Send Broadcast Requests/sec is the rate of IPI broadcast requests. 
3601
IPI Send Routine Requests/sec is the rate of IPI routine requests.
3603
IPI Send Software Interrrupts/sec is the rate of software interrupts.
3605
Frequency of initialization operations on Executive Resources.
3607
Frequency of re-initialization operations on Executive Resources.
3609
Frequency of delete operations on Executive Resources.
3611
Frequency of acquire operations on Executive Resources.
3613
Contention rate on Executive Resources.
3615
Frequency of Exclusive releases on Executive Resources.
3617
Frequency of Shared releases on Executive Resources.
3619
Frequency of convert to shared operations on Executive Resources.
3621
Frequency of acquire exclusive attempts on Executive Resources from ExAcquireResourceExclusiveLite.
3623
Frequency of first exclusive acquires from ExAcquireResourceExclusiveLite.
3625
Frequency of recursive exclusive acquires from ExAcquireResourceExclusiveLite.
3627
Frequency of waits during exclusive acquire attempts from ExAcquireResourceExclusiveLite.
3629
Frequency of no-waits during exclusive acquire attempts from ExAcquireResourceExclusiveLite.
3631
Frequency of acquire shared attempts on Executive Resources from ExAcquireResourceSharedLite.
3633
Frequency of recursive exclusive acquires from ExAcquireResourceSharedLite.
3635
Frequency of first shared acquires from ExAcquireResourceSharedLite.
3637
Frequency of recursive shared acquires from ExAcquireResourceSharedLite.
3639
Frequency of waits during acquire attempts from ExAcquireResourceSharedLite.
3641
Frequency of no-waits during acquire attempts from ExAcquireResourceSharedLite.
3643
Frequency of acquire shared attempts on Executive Resources from ExAcquireSharedStarveExclusive.
3645
Frequency of recursive exclusive acquires from ExAcquireSharedStarveExclusive.
3647
Frequency of first shared acquires from ExAcquireSharedStarveExclusive.
3649
Frequency of recursive shared acquires from ExAcquireSharedStarveExclusive.
3651
Frequency of waits during shared acquire attempts from ExAcquireSharedStarveExclusive.
3653
Frequency of no-waits during shared acquire attempts from ExAcquireSharedStarveExclusive.
3655
Frequency of acquire shared attempts on Executive Resources from ExAcquireSharedWaitForExclusive.
3657
Frequency of recursive exclusive acquires from ExAcquireSharedWaitForExclusive.
3659
Frequency of first shared acquires from ExAcquireSharedWaitForExclusive.
3661
Frequency of recursive shared acquires from ExAcquireSharedWaitForExclusive.
3663
Frequency of waits during shared acquire attempts from ExAcquireSharedWaitForExclusive.
3665
Frequency of no-waits during exclusive acquire attempts from ExAcquireSharedWaitForExclusive.
3667
Frequency of ExSetResourceOwnerPointer to an exclusive owner.
3669
Frequency of ExSetResourceOwnerPointer to a new shared owner.
3671
Frequency of ExSetResourceOwnerPointer to an existing shared owner.
3673
Frequency of boosting exclusive ownwer when waiting for this Executive Resource.
3675
Frequency of boosting shared ownwer(s) when waiting for this Executive Resource.
3703
The Synchronization performance object consists of counters for kernel synchronization. The synchronization object represents each processor as an instance of the object. The counters are aggregated based on the system NUMA topology.
3705
Spinlock acquires/sec is the rate of spinlock acquisitions. It includes the basic spinlocks, queued spinlocks, in-stack queued spinlocks, and shared spinlocks acquisitions.
3707
Spinlock contentions/sec is the rate of spinlock contentions. It includes the basic spinlocks, queued spinlocks, in-stack queued spinlocks, and shared spinlocks contentions.
3709
Spinlock spins/sec is the rate of spinlock spins. It includes the spins to acquire basic spinlocks, queued spinlocks, in-stack queued spinlocks, and shared spinlocks.
3711
IPI Send Broadcast Requests/sec is the rate of IPI broadcast requests. 
3713
IPI Send Routine Requests/sec is the rate of IPI routine requests.
3715
IPI Send Software Interrrupts/sec is the rate of software interrupts.
3717
Frequency of initialization operations on Executive Resources.
3719
Frequency of re-initialization operations on Executive Resources.
3721
Frequency of delete operations on Executive Resources.
3723
Frequency of acquire operations on Executive Resources.
3725
Contention rate on Executive Resources.
3727
Frequency of Exclusive releases on Executive Resources.
3729
Frequency of Shared releases on Executive Resources.
3731
Frequency of convert to shared operations on Executive Resources.
3733
Frequency of acquire exclusive attempts on Executive Resources from ExAcquireResourceExclusiveLite.
3735
Frequency of first exclusive acquires from ExAcquireResourceExclusiveLite.
3737
Frequency of recursive exclusive acquires from ExAcquireResourceExclusiveLite.
3739
Frequency of waits during exclusive acquire attempts from ExAcquireResourceExclusiveLite.
3741
Frequency of no-waits during exclusive acquire attempts from ExAcquireResourceExclusiveLite.
3743
Frequency of acquire shared attempts on Executive Resources from ExAcquireResourceSharedLite.
3745
Frequency of recursive exclusive acquires from ExAcquireResourceSharedLite.
3747
Frequency of first shared acquires from ExAcquireResourceSharedLite.
3749
Frequency of recursive shared acquires from ExAcquireResourceSharedLite.
3751
Frequency of waits during acquire attempts from ExAcquireResourceSharedLite.
3753
Frequency of no-waits during acquire attempts from ExAcquireResourceSharedLite.
3755
Frequency of acquire shared attempts on Executive Resources from ExAcquireSharedStarveExclusive.
3757
Frequency of recursive exclusive acquires from ExAcquireSharedStarveExclusive.
3759
Frequency of first shared acquires from ExAcquireSharedStarveExclusive.
3761
Frequency of recursive shared acquires from ExAcquireSharedStarveExclusive.
3763
Frequency of waits during shared acquire attempts from ExAcquireSharedStarveExclusive.
3765
Frequency of no-waits during shared acquire attempts from ExAcquireSharedStarveExclusive.
3767
Frequency of acquire shared attempts on Executive Resources from ExAcquireSharedWaitForExclusive.
3769
Frequency of recursive exclusive acquires from ExAcquireSharedWaitForExclusive.
3771
Frequency of first shared acquires from ExAcquireSharedWaitForExclusive.
3773
Frequency of recursive shared acquires from ExAcquireSharedWaitForExclusive.
3775
Frequency of waits during shared acquire attempts from ExAcquireSharedWaitForExclusive.
3777
Frequency of no-waits during exclusive acquire attempts from ExAcquireSharedWaitForExclusive.
3779
Frequency of ExSetResourceOwnerPointer to an exclusive owner.
3781
Frequency of ExSetResourceOwnerPointer to a new shared owner.
3783
Frequency of ExSetResourceOwnerPointer to an existing shared owner.
3785
Frequency of boosting exclusive ownwer when waiting for this Executive Resource.
3787
Frequency of boosting shared ownwer(s) when waiting for this Executive Resource.
5469
Windows Time Service Performance Counters display the time synchronization runtime information from the service. Note that the service has to be running in order for this information to be displayed.
5471
The absolute time offset between the system clock and the chosen time source, as computed by W32Time Service in microseconds. When a new valid sample is available, the computed time is updated with the time offset indicated by the sample. This is the actual time offset of the local clock. W32time initiates clock correction using this offset and updates the computed time in between samples with the remaining time offset that needs to be applied to the local clock. Clock accuracy can be tracked using this performance counter with a low polling interval (eg:256 seconds or less) and looking for the counter value to be smaller than the desired clock accuracy limit.
5473
This value reflects the adjustment made to the local system clock frequency by W32Time in nominal clock units. This counter helps visualize the finer adjustments being made by W32time to synchronize the local clock.
5475
This value reflects the adjustment made to the local system clock frequency by W32Time in Parts Per Billion (PPB) units. 1 PPB adjustment imples the system clock was adjusted at a rate of 1 nanosecond per second. The smallest possible adjustment can vary and can be expected to be in the order of 100&apos;s of PPB. This counter helps visualize the finer actions being taken by W32time to synchronize the local clock.
5477
Most recent roundtrip delay experienced by the NTP Client in receiving a response from the server in microseconds. This is the time elapsed on the NTP client between transmitting a request to the NTP server and receiving a valid response from the server. This counter helps characterize the delays experienced by the NTP client. Larger or varying roundtrips can add noise to NTP time computations, which in turn may affect the accuracy of time synchronization through NTP.
5479
Active number of NTP Time sources being used by the NTP Client. This is a count of active, distinct IP addresses of time servers that are responding to this client&apos;s requests. This number may be larger or smaller than the configured peers, depending on DNS resolution of peer names and current reachability.
5481
Number of requests received by the NTP Server (Requests/Sec).
5483
Number of requests answered by NTP Server (Responses/Sec).
5401
This counter set displays information about server shares that are being accessed by the client using SMB protocol version 2 or higher.
5403
The rate at which bytes are being read from this share.
5405
The rate at which bytes are being written to this share.
5407
The rate at which read requests are being sent to this share.
5409
The rate at which write requests are being sent to this share.
5411
The average number of bytes per read request.
5415
The average number of bytes per write request.
5419
The average latency between the time a read request is sent and when its response is received.
5423
The average latency between the time a write request is sent and when its response is received.
5427
The rate at which bytes are being read or written to this share.
5429
The rate at which read or write requests are being sent to this share.
5431
The average number of bytes per read or write request.
5435
The average latency between the time a read or write request is sent and when its response is received.
5439
The current number of read or write requests outstanding on this share.
5441
The average number of read requests that were queued for this share.
5443
The average number of write requests that were queued for this share.
5445
The average number of both read and write requests that were queued for this share.
5447
The rate at which metadata requests are being sent to this share.
5449
The number of requests per second delayed based on insufficient credits for this share.
5451
The rate at which bytes are being read from this share via RDMA direct placement.
5453
The rate at which bytes are being written to this share via RDMA direct placement.
5455
The rate at which read requests are being sent to this share via RDMA direct placement.
5457
The rate at which write requests are being sent to this share via RDMA direct placement.
5459
The rate at which read requests go through Turbo I/O
5461
The rate at which write requests go through Turbo I/O
5463
The number of compressed requests
5465
The number of compressed responses
5467
The number of compressed bytes sent
9875
Size of data streamed to disk for each package on the system.
9877
The percentage of data streamed from the primary feature of the package.
5485
This counter set consists of flow statistics specific to a network QoS policy.
5487
The number of packets sent that are covered by this policy.
5489
The number of packets sent per second that are covered by this policy.
5491
The number of bytes sent that are covered by this policy.
5493
The number of bytes sent per second that are covered by this policy.
5495
The number of packets dropped that are covered by this policy.
5497
The number of packets dropped per second that are covered by this policy.
4007
Event Log
4009
Enabled Channels
4011
WEVT RPC calls/sec
4013
Events/sec
4015
ELF RPC calls/sec
4017
Active subscriptions
4019
Event filter operations/sec
9791
Counters for measuring bandwidth and latency for BranchCache.
9793
Total number of bytes received from the original content source.
9795
Total number of bytes received from the local cache or peers.
9797
Total number of bytes served by this peer to other peers.
9799
Weighted average of time between when a peer discovery query was sent and when the first response arrived.
9801
Total number of bytes received from the local cache or peers.
9803
Total number of bytes received from the original content source.
9805
Total number of bytes received from the local cache or peers.
9807
Total number of bytes received from the original content source.
9809
Total number of bytes received from the local cache or peers.
9811
Total number of bytes received from the original content source.
9813
Total number of bytes received from the local cache or peers.
9815
Total number of bytes received from the original content source.
9817
Total number of bytes received from the local cache or peers.
9819
Total number of bytes received from the original content source.
9821
Total number of attempted peer discoveries.
9823
Count of complete, content validated, file segments.
9825
Count of incomplete file segments that need additional data and/or validation.
9827
Count of file segment offers made by peers.
9829
Average byte rate observed by the current peer while downloading contents from other peers in the branch.
9831
Total number of successful discoveries.
9833
Total number of segment offers queued for processing by the Hosted Cache.
9835
Count of complete, hash persisted, published contents.
9837
Average local cache access time when serving content to other clients or Hosted Caches.
3433
Displays quota usage and violation information for WS-Management processes.
3435
Displays the number of approved and rejected requests per second from authorized users.
3437
Displays the number of user quota violations.
3439
Displays the number of requests subject to system throttling.
3441
Displays the current number of active shells for all users.
3443
Displays the current number of active operations for all users.
3445
Displays the current number of active, authorized users.
3447
Displays the current process ID (PID)
1915
These are the perf counters for a VID partition object.
1917
The number of physical pages allocated.
1919
The preferred NUMA node index associated with this partition.
1921
The number of physical pages not allocated from the preferred NUMA node.
1923
The total number of handles open to this partition.
1925
The total time spent in compressing state for this partition in microseconds.
1927
The total time spent in decompressing state for this partition in microseconds.
1929
The total number of bytes compressed for this partition.
1931
The total number of bytes decompressed for this partition.
1933
The total compression output size in bytes for this partition.
1935
The total decompression output size in bytes for this partition.
1937
The total data size in bytes for this partition for which decompression was ignored because input data was uncompressed.
1939
The total number of bytes for which compression was performed but discarded for this partition.
1941
The total compression workspace size in bytes allocated for this partition.
1943
The total compression/decompression scratch pool size in bytes allocated for this partition.
1945
The total time spent in encrypting state for this partition in microseconds.
1947
The total time spent in decrypting state for this partition in microseconds.
1949
The total input size in bytes for encryption for this partition.
1951
The total input size in bytes for decryption for this partition.
1953
The total encryption output size in bytes for this partition.
1955
The total decryption output size in bytes for this partition.
1957
The total encryption/decryption scratch pool size in bytes allocated for this partition.
1959
The total number of message handlers registered on this partition.
1961
The total number of I/O port message handlers registered on this partition.
1963
The total number of exception message handlers registered on this partition.
1965
The total number of CPUID message handlers registered on this partition.
1967
The number of memory blocks allocated for this partition.
1969
The number of pages referenced by all kernel mode memory blocks in this partition.
1971
Kernel mode interface lock acquire page count
1973
Kernel mode interface lock acquire request count
1975
Kernel mode interface lock acquire request count deferred
1977
Kernel mode interface lock acquire request count failed
1979
Kernel mode interface lock acquire request time
1981
Kernel mode interface lock release page count
1983
Kernel mode interface lock release request count
1985
Kernel mode interface lock release request time
1987
KSR memory block claim request count
1989
KSR memory block claim run count
1991
KSR memory block claim time in microseconds
1993
KSR memory block persist request count
1995
KSR memory block persist run count
1997
KSR memory block persist time in microseconds
1999
The total time spent allocating cached memory pages in microseconds.
2001
The total number of cached memory allocation requests.
2003
The page yield for cached memory allocation requests.
2005
The number of MDL pages currently allocated.
2007
The total number of memory allocation requests which failed or returned zero pages.
2009
The total number of memory allocation requests which returned partial result.
2011
The total number of memory allocation requests.
2013
The total time spent allocating memory pages in microseconds.
2015
The total time spent sorting memory pages in microseconds.
2017
The number of GPA ranges that are backed by memory blocks in this partition.
2019
The number of GPA pages that are backed by memory blocks in this partition.
2021
The number of ROM GPA pages that are backed by memory blocks in this partition.
2023
The number of GPA ranges that are backed by MMIO regions in this partition.
2025
The number of GPA pages that are backed by MMIO regions in this partition.
2027
The number of active parent partition mappings for this partition.
2029
The number of direct created parent partition mappings for this partition.
2031
The number of memory block notifications installed for this partition.
2033
The number of memory block pages read from user mode for this partition.
2035
The number of memory block pages written from user mode for this partition.
2037
The number of memory block read notifications sent to user mode for this partition.
2039
The number of memory block write notifications sent to user mode for this partition.
2041
The number of VTL modifications for this partition.
2043
The number of VTL MBPs that failed modify attempt for this partition.
2045
The number of VTL MBPs that are protected for this partition.
2047
The total bytes of allocated memory for this partition (not including memory block allocations).
2049
The preferred NUMA node mask associated with this partition.
2051
The total number of huge memory pages which are from a local NUMA node.
2053
The total number of huge memory pages which are from a non-local NUMA node.
2055
The total number of large memory pages which are from a local NUMA node.
2057
The total number of large memory pages which are from a non-local NUMA node.
2059
The total number of non-large memory pages which are from a local NUMA node.
2061
The total number of non-large memory pages that are from a non-local NUMA node.
2063
Number of currently ballooned pages.
2065
Number of hot added pages.
2067
Number of currently reserved pages.
2069
Number of ballooon operations.
2071
Number of hot add operations.
2073
Number of hot add undo operation.
2075
Number of unballooon operations.
2077
Number of MBP demand back operations
2079
Number of MBP page in operations
2081
Number of MBP page in operations resulting in synced pages
2083
Number of MBP page out operations
2085
Number of MBP page out operations skipped due to targeting synced pages
2087
Number of synced pages
2089
Number of unbacked pages
2091
Number of unbacked deferred pages
2093
Number of working set pages
2095
SLP I/O read rate
2097
SLP I/O write rate
2099
SLP read rate in pages
2101
SLP write rate in pages
2103
SLP fault rate on behalf of memory access reads
2105
SLP fault rate on behalf of memory access writes
2107
The number zeroed ranges found.
2109
The number zeroed ranges found that are not reported since their size is smaller than the threshold.
2111
The total ammount of pages in the zeroed ranges found.
2113
The total ammount of zeroed pages that were not reported because their range is smaller than the threshold.
2115
GPA mapping WinHv (hypervisor) call count
2117
GPA mapping WinHv (hypervisor) call time in microseconds
2119
GPA mapping page count
2121
Memory transfer operations - receive MDL complete
2123
Memory transfer operations - receive MDL complete failed
2125
Memory transfer operations - receive MDL prepare
2127
Memory transfer operations - receive MDL prepare failed
2129
Memory transfer operations - receive write
2131
Memory transfer operations - receive write failed
2133
Memory transfer operations - send
2135
Memory transfer operations - send completed
2137
Memory transfer operations - send failed
2139
Memory transfer pages received - MDL complete
2141
Memory transfer pages received - MDL prepare
2143
Memory transfer pages received - write
2145
Memory transfer pages sent
2147
Hash Scan Page Count
2149
Hash Scan Page Count Constant Filled
2151
Hash Scan Page Count Constant Filled in Chunks
2153
Hash Scan Page Count Zero Filled
2155
Hash Scan Page Count Zero Filled in Chunks
2157
Hash Scan Page Count Modified
2159
Hash Scan Time in Us
2161
HV memory deposit callback count
2163
HV memory deposit page count
2165
HV memory deposit request count
2167
HV memory deposit request count failed
2169
HV memory deposit request time in microseconds
2171
The number of VM access fault calls for this partition, for read or execute requests.
2173
The number of VM access fault calls for this partition, for write requests.
2175
The number of VM access fault calls for this partition during memory intercepts.
2177
The number of VM access fault calls for this partition during memory intercepts that are not reschedulable.
2179
The number of VM access fault calls for this partition during memory intercepts that are not reschedulable because the system ran out of worker contexts.
2181
The number of VM access fault calls for this partition during memory intercepts that are reschedulable.
2183
The number of VM access fault calls for this partition during memory intercepts that are reschedulable on the fast path.
2185
The number of VM access fault calls for this partition during memory intercepts that are reschedulable on the slow path.
2187
The number of VM access fault calls for this partition during GVA to GPA translations.
2189
The total time spent processing VM access fault calls for this partition.
2191
The number of VM hot hint calls for this partition.
2193
The total time spent processing VM hot hint calls for this partition.
2195
The number of VM cold hint calls for this partition.
2197
The total time spent processing VM cold hint calls for this partition.
2199
The number of VM speculative fault calls for this partition.
2201
The total time spent processing VM speculative fault calls for this partition.
2203
The number of VM pause resume notify calls for this partition.
2205
The total time spent processing VM pause resume notify calls for this partition.
2207
The number of MSR read intercepts received from the hypervisor for this partition.
2209
The number of MSR write intercepts received from the hypervisor for this partition.
2211
The number of I/O port read intercepts received from the hypervisor for this partition.
2213
The number of I/O port write intercepts received from the hypervisor for this partition.
2215
Deferred intercept processing count
2217
Deferred intercept processing time
2219
Intercept count total - ApicEoi
2221
Intercept time total - ApicEoi
2223
Intercept count total - Cpuid
2225
Intercept time total - Cpuid
2227
Intercept count total - Exception
2229
Intercept time total - Exception
2231
Intercept count total - Gpa
2233
Intercept time total - Gpa
2235
Intercept count total - InvalidVpRegisterValue
2237
Intercept time total - InvalidVpRegisterValue
2239
Intercept count total - IoPort
2241
Intercept time total - IoPort
2243
Intercept count total - Msr
2245
Intercept time total - Msr
2247
Intercept count total - UnmappedGpa
2249
Intercept time total - UnmappedGpa
2251
Intercept count total - UnrecoverableException
2253
Intercept time total - UnrecoverableException
2255
Intercept count total - UnsupportedFeature
2257
Intercept time total - UnsupportedFeature
2259
Intercept count total - TlbPageSizeMismatch
2261
Intercept time total - TlbPageSizeMismatch
2263
Intercept count total - Extended Hypercall
2265
Intercept time total - Extended Hypercall
2267
Intercept count total - MMIO
2269
Intercept time total - MMIO
2271
Intercept count total - Reset
2273
Intercept time total - Reset
2275
Intercept count total - Register
2277
Intercept time total - Register
2279
Intercept count total - InterruptionDeliverable
2281
Intercept time total - InterruptionDeliverable
2283
Intercept count total - Halt
2285
Intercept time total - Halt
2287
Intercept count total - UnacceptedGpa
2289
Intercept time total - UnacceptedGpa
2291
Intercept count total - GpaAttribute
2293
Intercept time total - GpaAttribute
2295
Intercept count total - SynicEvent
2297
Intercept time total - SynicEvent
2299
Intercept count total - EnablePartitionVtl
2301
Intercept time total - EnablePartitionVtl
2303
The number of dispatched messages of type MBP access.
2305
The number of dispatched messages of type exception.
2307
The number of dispatched messages of type triple fault.
2309
The number of dispatched messages of type APIC EOI.
2311
The number of dispatched messages of type execute instruction.
2313
The number of dispatched messages of type MMIO.
2315
The number of dispatched messages of type Register.
2317
The number of dispatched messages of type handler unregistered.
2319
The number of dispatched messages of type stop request complete.
2321
The number of dispatched messages of type MMIO range destroyed.
2323
The number of dispatched messages of type terminate VM.
2325
The number of dispatched messages of type guest control for page copy
2327
The number of dispatched messages of type CPUID.
2329
The number of dispatched messages of type IO instruction.
2331
The number of dispatched messages of type MSR.
2333
The number of dispatched messages of type Reset.
2335
The number of dispatched messages of type passthrough intercept.
2337
The number of dispatched messages of type stop request complete direct.
2339
The total time spent mapping DAX memory pages in microseconds.
2341
The total time spent probing and locking DAX memory pages in microseconds.
2343
The total number of DAX memory allocation requests.
2345
The total number of DAX memory allocation requests failed.
2347
Physical buffer allocation page count.
2349
Physical buffer allocation time in microseconds.
2351
Number of VA backed RAM pages that were committed.
2353
Number of VA backed RAM pages that were decommitted.
2355
Partition's VA backed policy.
2357
IOCTL count - IoctlGetPartitionProperty
2359
IOCTL time - IoctlGetPartitionProperty
2361
IOCTL count - IoctlRestorePartitionState
2363
IOCTL time - IoctlRestorePartitionState
2365
IOCTL count - IoctlAddVirtualProcessor
2367
IOCTL time - IoctlAddVirtualProcessor
2369
IOCTL count - IoctlAdjustNestedTlbSize
2371
IOCTL time - IoctlAdjustNestedTlbSize
2373
IOCTL count - IoctlAssertInterrupt
2375
IOCTL time - IoctlAssertInterrupt
2377
IOCTL count - IoctlChangeLifeState
2379
IOCTL time - IoctlChangeLifeState
2381
IOCTL count - IoctlCheckForIoIntercept
2383
IOCTL time - IoctlCheckForIoIntercept
2385
IOCTL count - IoctlClearInterrupt
2387
IOCTL time - IoctlClearInterrupt
2389
IOCTL count - IoctlCloneTemplateCreate
2391
IOCTL time - IoctlCloneTemplateCreate
2393
IOCTL count - IoctlCloneTemplateDestroy
2395
IOCTL time - IoctlCloneTemplateDestroy
2397
IOCTL count - IoctlCreateDaxFileMemoryBlock
2399
IOCTL time - IoctlCreateDaxFileMemoryBlock
2401
IOCTL count - IoctlCreateMemoryBlock
2403
IOCTL time - IoctlCreateMemoryBlock
2405
IOCTL count - IoctlCreateMemoryBlockGpaRange
2407
IOCTL time - IoctlCreateMemoryBlockGpaRange
2409
IOCTL count - IoctlCreateMmioGpaDoorbell
2411
IOCTL time - IoctlCreateMmioGpaDoorbell
2413
IOCTL count - IoctlCreateMmioGpaRange
2415
IOCTL time - IoctlCreateMmioGpaRange
2417
IOCTL count - IoctlCreateVaGpaRange
2419
IOCTL time - IoctlCreateVaGpaRange
2421
IOCTL count - IoctlCryptEncryptDecryptData
2423
IOCTL time - IoctlCryptEncryptDecryptData
2425
IOCTL count - IoctlCryptGetSession
2427
IOCTL time - IoctlCryptGetSession
2429
IOCTL count - IoctlCryptGetSecurityCookie
2431
IOCTL time - IoctlCryptGetSecurityCookie
2433
IOCTL count - IoctlCryptKeysInitialize
2435
IOCTL time - IoctlCryptKeysInitialize
2437
IOCTL count - IoctlCryptKeysRelease
2439
IOCTL time - IoctlCryptKeysRelease
2441
IOCTL count - IoctlDestroyGpaRange
2443
IOCTL time - IoctlDestroyGpaRange
2445
IOCTL count - IoctlDestroyMemoryBlock
2447
IOCTL time - IoctlDestroyMemoryBlock
2449
IOCTL count - IoctlDestroyMmioGpaDoorbell
2451
IOCTL time - IoctlDestroyMmioGpaDoorbell
2453
IOCTL count - IoctlDmBalloon
2455
IOCTL time - IoctlDmBalloon
2457
IOCTL count - IoctlDmConsolidationEnable
2459
IOCTL time - IoctlDmConsolidationEnable
2461
IOCTL count - IoctlDmConsolidationDisable
2463
IOCTL time - IoctlDmConsolidationDisable
2465
IOCTL count - IoctlDmHotAdd
2467
IOCTL time - IoctlDmHotAdd
2469
IOCTL count - IoctlDmHotAddUndo
2471
IOCTL time - IoctlDmHotAddUndo
2473
IOCTL count - IoctlDmQueryBackingState
2475
IOCTL time - IoctlDmQueryBackingState
2477
IOCTL count - IoctlDmSlpDisable
2479
IOCTL time - IoctlDmSlpDisable
2481
IOCTL count - IoctlDmSlpQuery
2483
IOCTL time - IoctlDmSlpQuery
2485
IOCTL count - IoctlDmSlpSetup
2487
IOCTL time - IoctlDmSlpSetup
2489
IOCTL count - IoctlDmSlpWaitForDisable
2491
IOCTL time - IoctlDmSlpWaitForDisable
2493
IOCTL count - IoctlDmUnballoon
2495
IOCTL time - IoctlDmUnballoon
2497
IOCTL count - IoctlDmWorkingSetModify
2499
IOCTL time - IoctlDmWorkingSetModify
2501
IOCTL count - IoctlEpfRestore
2503
IOCTL time - IoctlEpfRestore
2505
IOCTL count - IoctlEpfSave
2507
IOCTL time - IoctlEpfSave
2509
IOCTL count - IoctlEpfSuspendBegin
2511
IOCTL time - IoctlEpfSuspendBegin
2513
IOCTL count - IoctlEpfSuspendEnd
2515
IOCTL time - IoctlEpfSuspendEnd
2517
IOCTL count - IoctlFlushMemoryBlockPageRange
2519
IOCTL time - IoctlFlushMemoryBlockPageRange
2521
IOCTL count - IoctlFlushMemoryBlockMapping
2523
IOCTL time - IoctlFlushMemoryBlockMapping
2525
IOCTL count - IoctlGetHvMemoryBalance
2527
IOCTL time - IoctlGetHvMemoryBalance
2529
IOCTL count - IoctlGetHvPartitionId
2531
IOCTL time - IoctlGetHvPartitionId
2533
IOCTL count - IoctlGetIsolationLuid
2535
IOCTL time - IoctlGetIsolationLuid
2537
IOCTL count - IoctlGetVirtualProcessorState
2539
IOCTL time - IoctlGetVirtualProcessorState
2541
IOCTL count - IoctlGetVirtualProcessorStatus
2543
IOCTL time - IoctlGetVirtualProcessorStatus
2545
IOCTL count - IoctlGetVirtualProcessorXsaveState
2547
IOCTL time - IoctlGetVirtualProcessorXsaveState
2549
IOCTL count - IoctlGpaAccessTrackingDisable
2551
IOCTL time - IoctlGpaAccessTrackingDisable
2553
IOCTL count - IoctlGpaAccessTrackingEnable
2555
IOCTL time - IoctlGpaAccessTrackingEnable
2557
IOCTL count - IoctlHandleAndGetNext
2559
IOCTL time - IoctlHandleAndGetNext
2561
IOCTL count - IoctlInjectSyntheticMachineCheckEvent
2563
IOCTL time - IoctlInjectSyntheticMachineCheckEvent
2565
IOCTL count - IoctlMapHvStatsPageLocal
2567
IOCTL time - IoctlMapHvStatsPageLocal
2569
IOCTL count - IoctlMapHypercallDoorbellPage
2571
IOCTL time - IoctlMapHypercallDoorbellPage
2573
IOCTL count - IoctlMapMemoryBlockPageRange
2575
IOCTL time - IoctlMapMemoryBlockPageRange
2577
IOCTL count - IoctlMapVpStatePage
2579
IOCTL time - IoctlMapVpStatePage
2581
IOCTL count - IoctlMarkPagePoisoned
2583
IOCTL time - IoctlMarkPagePoisoned
2585
IOCTL count - IoctlMemoryBlockReadWriteAllocateBuffers
2587
IOCTL time - IoctlMemoryBlockReadWriteAllocateBuffers
2589
IOCTL count - IoctlMemoryBlockReadWriteDestroyBuffers
2591
IOCTL time - IoctlMemoryBlockReadWriteDestroyBuffers
2593
IOCTL count - IoctlMessageSlotHandleAndGetNext
2595
IOCTL time - IoctlMessageSlotHandleAndGetNext
2597
IOCTL count - IoctlMessageSlotMap
2599
IOCTL time - IoctlMessageSlotMap
2601
IOCTL count - IoctlPartitionFriendlyNameSet
2603
IOCTL time - IoctlPartitionFriendlyNameSet
2605
IOCTL count - IoctlPhuBegin
2607
IOCTL time - IoctlPhuBegin
2609
IOCTL count - IoctlPhuCommit
2611
IOCTL time - IoctlPhuCommit
2613
IOCTL count - IoctlPhuEnd
2615
IOCTL time - IoctlPhuEnd
2617
IOCTL count - IoctlPhuOpenMemoryBlockFile
2619
IOCTL time - IoctlPhuOpenMemoryBlockFile
2621
IOCTL count - IoctlPhuPersistGpaRange
2623
IOCTL time - IoctlPhuPersistGpaRange
2625
IOCTL count - IoctlPhuPersistMemoryBlock
2627
IOCTL time - IoctlPhuPersistMemoryBlock
2629
IOCTL count - IoctlPrefetchDirectMapRanges
2631
IOCTL time - IoctlPrefetchDirectMapRanges
2633
IOCTL count - IoctlQueryVaGpaRangeWorkingSetInfo
2635
IOCTL time - IoctlQueryVaGpaRangeWorkingSetInfo
2637
IOCTL count - IoctlReadMemoryBlockPageRange
2639
IOCTL time - IoctlReadMemoryBlockPageRange
2641
IOCTL count - IoctlRegisterApicEoiHandler
2643
IOCTL time - IoctlRegisterApicEoiHandler
2645
IOCTL count - IoctlRegisterCpuidHandler
2647
IOCTL time - IoctlRegisterCpuidHandler
2649
IOCTL count - IoctlRegisterExceptionHandler
2651
IOCTL time - IoctlRegisterExceptionHandler
2653
IOCTL count - IoctlRegisterIoPortHandler
2655
IOCTL time - IoctlRegisterIoPortHandler
2657
IOCTL count - IoctlRegisterMsrHandler
2659
IOCTL time - IoctlRegisterMsrHandler
2661
IOCTL count - IoctlRegisterTripleFaultHandler
2663
IOCTL time - IoctlRegisterTripleFaultHandler
2665
IOCTL count - IoctlRegisterCpuidResult
2667
IOCTL time - IoctlRegisterCpuidResult
2669
IOCTL count - IoctlRelease
2671
IOCTL time - IoctlRelease
2673
IOCTL count - IoctlRemoveVirtualProcessor
2675
IOCTL time - IoctlRemoveVirtualProcessor
2677
IOCTL count - IoctlReserve
2679
IOCTL time - IoctlReserve
2681
IOCTL count - IoctlReset
2683
IOCTL time - IoctlReset
2685
IOCTL count - IoctlResetPoisonedPage
2687
IOCTL time - IoctlResetPoisonedPage
2689
IOCTL count - IoctlSavePartitionState
2691
IOCTL time - IoctlSavePartitionState
2693
IOCTL count - IoctlSchedulerAssistRestore
2695
IOCTL time - IoctlSchedulerAssistRestore
2697
IOCTL count - IoctlSchedulerAssistSave
2699
IOCTL time - IoctlSchedulerAssistSave
2701
IOCTL count - IoctlSchedulerAssistSuspend
2703
IOCTL time - IoctlSchedulerAssistSuspend
2705
IOCTL count - IoctlSetMailboxKey
2707
IOCTL time - IoctlSetMailboxKey
2709
IOCTL count - IoctlSetMemoryBlockClientNotifications
2711
IOCTL time - IoctlSetMemoryBlockClientNotifications
2713
IOCTL count - IoctlSetMemoryBlockFlushAfterWrite
2715
IOCTL time - IoctlSetMemoryBlockFlushAfterWrite
2717
IOCTL count - IoctlSetMemoryBlockNotificationQueue
2719
IOCTL time - IoctlSetMemoryBlockNotificationQueue
2721
IOCTL count - IoctlSetPartitionProperty
2723
IOCTL time - IoctlSetPartitionProperty
2725
IOCTL count - IoctlSetupMessageQueue
2727
IOCTL time - IoctlSetupMessageQueue
2729
IOCTL count - IoctlSetupPartition
2731
IOCTL time - IoctlSetupPartition
2733
IOCTL count - IoctlSetVirtualProcessorState
2735
IOCTL time - IoctlSetVirtualProcessorState
2737
IOCTL count - IoctlSetVirtualProcessorXsaveState
2739
IOCTL time - IoctlSetVirtualProcessorXsaveState
2741
IOCTL count - IoctlSgxResetMemoryBlocks
2743
IOCTL time - IoctlSgxResetMemoryBlocks
2745
IOCTL count - IoctlStartVirtualProcessor
2747
IOCTL time - IoctlStartVirtualProcessor
2749
IOCTL count - IoctlStatisticsMap
2751
IOCTL time - IoctlStatisticsMap
2753
IOCTL count - IoctlStatisticsUnMap
2755
IOCTL time - IoctlStatisticsUnMap
2757
IOCTL count - IoctlStopVirtualProcessor
2759
IOCTL time - IoctlStopVirtualProcessor
2761
IOCTL count - IoctlSuspendApply
2763
IOCTL time - IoctlSuspendApply
2765
IOCTL count - IoctlSuspendClear
2767
IOCTL time - IoctlSuspendClear
2769
IOCTL count - IoctlTranslateGpa
2771
IOCTL time - IoctlTranslateGpa
2773
IOCTL count - IoctlTranslateGva
2775
IOCTL time - IoctlTranslateGva
2777
IOCTL count - IoctlTrimPartitionMemory
2779
IOCTL time - IoctlTrimPartitionMemory
2781
IOCTL count - IoctlUnmapHvStatsPageLocal
2783
IOCTL time - IoctlUnmapHvStatsPageLocal
2785
IOCTL count - IoctlUnmapMemoryBlockPageRange
2787
IOCTL time - IoctlUnmapMemoryBlockPageRange
2789
IOCTL count - IoctlUnregisterCpuidResult
2791
IOCTL time - IoctlUnregisterCpuidResult
2793
IOCTL count - IoctlUnregisterHandler
2795
IOCTL time - IoctlUnregisterHandler
2797
IOCTL count - IoctlWriteMemoryBlockPageRange
2799
IOCTL time - IoctlWriteMemoryBlockPageRange
2801
IOCTL count - IoctlMemoryXferConnectOpen
2803
IOCTL time - IoctlMemoryXferConnectOpen
2805
IOCTL count - IoctlMemoryXferConnectEnable
2807
IOCTL time - IoctlMemoryXferConnectEnable
2809
IOCTL count - IoctlMemoryXferSend
2811
IOCTL time - IoctlMemoryXferSend
2813
IOCTL count - IoctlMemoryXferConnectClose
2815
IOCTL time - IoctlMemoryXferConnectClose
2817
IOCTL count - IoctlMemoryXferConnectDisable
2819
IOCTL time - IoctlMemoryXferConnectDisable
2821
IOCTL count - IoctlVsmGetPartitionConfig
2823
IOCTL time - IoctlVsmGetPartitionConfig
2825
IOCTL count - IoctlVsmSetPartitionConfig
2827
IOCTL time - IoctlVsmSetPartitionConfig
2829
IOCTL count - IoctlVsmQueryMemoryBlockProtections
2831
IOCTL time - IoctlVsmQueryMemoryBlockProtections
2833
IOCTL count - IoctlVsmGetMemoryBlockProtections
2835
IOCTL time - IoctlVsmGetMemoryBlockProtections
2837
IOCTL count - IoctlVsmSetMemoryBlockProtections
2839
IOCTL time - IoctlVsmSetMemoryBlockProtections
2841
IOCTL count - IoctlVsmEnableVpVtl
2843
IOCTL time - IoctlVsmEnableVpVtl
2845
IOCTL count - IoctlVsmCheckGpaPageVtlAccess
2847
IOCTL time - IoctlVsmCheckGpaPageVtlAccess
2849
IOCTL count - IoctlVsmQueryProtectionsDirty
2851
IOCTL time - IoctlVsmQueryProtectionsDirty
2853
IOCTL count - IoctlVsmPrecommitMgmtVtlPageRange
2855
IOCTL time - IoctlVsmPrecommitMgmtVtlPageRange
2857
IOCTL count - IoctlSetPeerProcess
2859
IOCTL time - IoctlSetPeerProcess
2861
IOCTL count - IoctlReadWriteMappedMemoryBlockPageRange
2863
IOCTL time - IoctlReadWriteMappedMemoryBlockPageRange
2865
IOCTL count - IoctlControlGpaAccessTracking
2867
IOCTL time - IoctlControlGpaAccessTracking
2869
IOCTL count - IoctlDbgProtectMemoryBlockEnable
2871
IOCTL time - IoctlDbgProtectMemoryBlockEnable
2873
IOCTL count - IoctlDbgProtectMemoryBlockDisable
2875
IOCTL time - IoctlDbgProtectMemoryBlockDisable
2877
IOCTL count - IoctlDbgProtectMemoryBlockGetBitmap
2879
IOCTL time - IoctlDbgProtectMemoryBlockGetBitmap
2881
IOCTL count - IoctlCreateVaGpaRangeSpecifyUserVa
2883
IOCTL time - IoctlCreateVaGpaRangeSpecifyUserVa
2885
IOCTL count - IoctlExoMapGpaRange
2887
IOCTL time - IoctlExoMapGpaRange
2889
IOCTL count - IoctlExoUnmapGpaRange
2891
IOCTL time - IoctlExoUnmapGpaRange
2893
IOCTL count - IoctlExoControlGpaAccessTracking
2895
IOCTL time - IoctlExoControlGpaAccessTracking
2897
IOCTL count - IoctlInstallExoIntercept
2899
IOCTL time - IoctlInstallExoIntercept
2901
IOCTL count - IoctlExoGetLapicState
2903
IOCTL time - IoctlExoGetLapicState
2905
IOCTL count - IoctlExoSetLapicState
2907
IOCTL time - IoctlExoSetLapicState
2909
IOCTL count - IoctlExoAccessFault
2911
IOCTL time - IoctlExoAccessFault
4777
VPN counters which keep track of their values since service start
4779
Total number of cumulative remote clients connected to server since service start
4781
Maximum number of remote clients connected to server since service start
4783
Number of failed authentications since service start
4785
Total number of bytes received by all the disconnected clients since service start
4787
Total number of bytes transmitted by all the disconnected clients since service start

